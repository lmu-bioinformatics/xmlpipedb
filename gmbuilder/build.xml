<?xml version="1.0" encoding="UTF-8"?>
<project name="gmbuilder" default="jar" basedir=".">
    <property name="src.dir" location="src" />
    <property name="bin.dir" location="bin" />
    <property name="lib.dir" location="lib" />
    <property name="dist.dir" location="dist" />
	<property name="scripts.dir" value="scripts" />
	<!-- Put the jar file into the lib folder, since clicking on it would cause the 
	program to run without the correct heap setting (1024M - see .bat or .sh file) -->
    <property name="jarfile" location="${dist.dir}/lib/${ant.project.name}.jar" />
    <property name="compile.debug" value="true" />

    <fileset id="lib.dir.jars" dir="${lib.dir}">
        <include name="**/*.jar" />
    </fileset>

    <path id="lib.path">
        <fileset refid="lib.dir.jars" />
    </path>

    <path id="run.path">
        <fileset dir="${dist.dir}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>
	<!-- XXXXXXXXXXXXXX start targets here XXXXXXXXXXXXXXXXXX -->
	
    <!-- Stub install target.  Install should depend on the 'jar' target,
         and copy the built objects to the 'dist' directory. -->
    <target name="install" description="Install jar" depends="jar">
    </target>

    <target name="clean" description="Remove build and dist directories">
        <delete dir="${bin.dir}" />
        <delete dir="${dist.dir}" />
    	<delete file="hibernate.properties"/>
    </target>
	
    <target name="init">
    	<mkdir dir="${dist.dir}" />
        <mkdir dir="${bin.dir}" />
        <copy todir="${dist.dir}">
    		<fileset dir="${scripts.dir}" includes="*.bat,*.sh" />
    	</copy>
        <tstamp />
    </target>
	
    <target name="compile" depends="init" description="Compile code">
        <javac srcdir="${src.dir}" destdir="${bin.dir}" includeAntRuntime="no" classpathref="lib.path" debug="${compile.debug}">
        </javac>
    </target>

    <target name="jar" depends="compile" description="Build jar">
        <!-- Copy libraries to the lib folder -->
        <copy todir="${dist.dir}/lib">
            <fileset dir="${lib.dir}" includes="**/*.jar" />
        </copy>
		<jar destfile="${jarfile}" basedir="${bin.dir}">
			<manifest>
				<attribute name="Main-Class" value="edu.lmu.xmlpipedb.gmbuilder.GenMAPPBuilder" />
<!--				<attribute name="Class-Path" value="lib/antlr-2.7rcl.jar lib/asm.jar lib/cglib-2.1.3.jar lib/commons-beanutils.jar lib/commons-collections-2.1.1.jar lib/commons-logging-1.0.4.jar lib/dom4j-1.6.1.jar lib/ehcache-1.1.jar lib/godb.jar lib/hibernate3.jar lib/hyperjaxb2.jar lib/jaxb-api.jar lib/jaxb-impl.jar lib/jaxb-libs.jar lib/jta.jar lib/junit-3.8.1.jar lib/log4j-1.2.11.jar lib/postgresql-8.1-405.jdbc3.jar lib/relaxngDatatype.jar lib/shag-1.1.jar lib/uniprotdb.jar lib/xpdutils.jar lib/xsdlib.jar" />-->
				<attribute name="Class-Path" value="lib/antlr-2.7rcl.jar asm.jar cglib-2.1.3.jar commons-beanutils.jar commons-collections-2.1.1.jar commons-logging-1.0.4.jar dom4j-1.6.1.jar ehcache-1.1.jar godb.jar hibernate3.jar hyperjaxb2.jar jaxb-api.jar jaxb-impl.jar jaxb-libs.jar jta.jar junit-3.8.1.jar log4j-1.2.11.jar postgresql-8.1-405.jdbc3.jar relaxngDatatype.jar shag-1.1.jar uniprotdb.jar xpdutils.jar xsdlib.jar" />
			</manifest>
		</jar>
    </target>

    <target name="run" depends="jar" description="Run jar file">
        <java classname="edu.lmu.xmlpipedb.gmbuilder.GenMAPPBuilder" fork="true" failonerror="true" classpathref="run.path" />
    </target>
	
	<target name="all" description="Runs clean, then compile, then jar" depends="clean,jar">
	</target>
</project>
