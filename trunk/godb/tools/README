1. INTRODUCTION
The GO DB post processor is a tool to massage the output of xsd2db, which is part of the XmlPipeDb project (where GODB was downloaded). If you are not familiar with the project check xmlpipedb.sourceforge.net.

1a. PURPOSE
GO DB post processor is needed to fix some issues with the generated output of xsd2db. Those issues are:
1. In the SQL file, varchar(255) is used for string data. Some strings in the data are longer than 255 and cause errors on load. The remedy is to change all varchar(255) entries to simply varchar
2. In the SQL file, "To" is used. This //// FIX ME HERE ////  is an issue for some reason. The remedy is to change all "To" entries to "To_".
3. In the HBM (Hibernate Mapping) file To.hbm.xml, "To" must be changed to "To_" to match the change made above.

2. COMPONENTS
GODB ships with two main components: a fully functional, ready to use godb.jar; and a GodbPostProcessor, which can be used to create a new godb.jar.

2a. godb.jar
GODB ships with a ready-to-use godb.jar. This jar includes all of the class files and Hibernate mapping files generated by xsd2db, already run through the post processor. This is very convenient, but be sure to check the date in the VALID AS OF section of this readme to be sure that GO has not changed the DTD (???) format for the data you wish to import.

2b. GodbPostProcessor
The GodbPostProcessor 


?. VALID AS OF
This code is valid as of the DTD from ????????, ??, 2006

??. USAGE
??a. GO DB Post Processor
Before using the GO DB Post Processor, it must be built. This is done easily using the ANT build.xml provided. The default target will compile all necessary classes and build a jar file, which includes all necessary libraries. To run the ANT build, download and install ANT (www.ant.org ????), open a command prompt (Windows) or console (Unix) and navigate to the folder where the build.xml is located. Type "ant" and press enter. ANT automatically looks for the build.xml file.

Run godpostprocessor.jar
Command line:
  java -jar godbpostprocessor.jar

Options:
	- No options available

The program will prompt for the files it needs then save its changes back over the files specified.

??b. GODB Build.xml
In the root of the GODB download, there is a build.xml that is responsible for packaging all the class files and HBM files into a jar that can be used by GM Builder. After running GO DB Post Processor, put this build.xml in the root folder under which your classes and HBM files are located and run it using ANT. 

??. FUTURE WORK
Is it feasible to check the GO website automatically to ensure compatibility with this tool?

- create .bat and .sh files to do all these steps for the user.
