//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-09/29/2005 11:56 AM(valikov)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.06.16 at 05:41:50 PM PDT 
//


package org.uniprot.uniprot.impl;

public class CommentTypeImpl implements org.uniprot.uniprot.CommentType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Link;
    protected java.lang.String _Status;
    protected java.lang.String _Type;
    protected java.math.BigInteger _Experiments;
    protected org.uniprot.uniprot.CommentType.ConflictType _Conflict;
    protected java.lang.String _Method;
    protected java.lang.String _Text;
    protected java.lang.String _PhDependence;
    protected org.uniprot.uniprot.BpcCommentGroupKineticsType _Kinetics;
    protected com.sun.xml.bind.util.ListImpl _Isoform;
    protected boolean has_Mass;
    protected float _Mass;
    protected java.lang.String _Error;
    protected java.lang.String _Note;
    protected com.sun.xml.bind.util.ListImpl _Event;
    protected java.lang.String _TemperatureDependence;
    protected boolean has_OrganismsDiffer;
    protected boolean _OrganismsDiffer;
    protected java.lang.String _Evidence;
    protected java.lang.String _Name;
    protected java.lang.String _RedoxPotential;
    protected com.sun.xml.bind.util.ListImpl _Location;
    protected com.sun.xml.bind.util.ListImpl _Interactant;
    protected org.uniprot.uniprot.BpcCommentGroupAbsorptionType _Absorption;
    public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;
    protected java.lang.Long _Hjid;
    protected java.lang.Long _Hjversion;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.uniprot.uniprot.CommentType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getLink() {
        if (_Link == null) {
            _Link = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Link;
    }

    public java.util.List getLink() {
        return _getLink();
    }

    public java.lang.String getStatus() {
        return _Status;
    }

    public void setStatus(java.lang.String value) {
        _Status = value;
    }

    public java.lang.String getType() {
        return _Type;
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    public java.math.BigInteger getExperiments() {
        return _Experiments;
    }

    public void setExperiments(java.math.BigInteger value) {
        _Experiments = value;
    }

    public org.uniprot.uniprot.CommentType.ConflictType getConflict() {
        return _Conflict;
    }

    public void setConflict(org.uniprot.uniprot.CommentType.ConflictType value) {
        _Conflict = value;
    }

    public java.lang.String getMethod() {
        return _Method;
    }

    public void setMethod(java.lang.String value) {
        _Method = value;
    }

    public java.lang.String getText() {
        return _Text;
    }

    public void setText(java.lang.String value) {
        _Text = value;
    }

    public java.lang.String getPhDependence() {
        return _PhDependence;
    }

    public void setPhDependence(java.lang.String value) {
        _PhDependence = value;
    }

    public org.uniprot.uniprot.BpcCommentGroupKineticsType getKinetics() {
        return _Kinetics;
    }

    public void setKinetics(org.uniprot.uniprot.BpcCommentGroupKineticsType value) {
        _Kinetics = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getIsoform() {
        if (_Isoform == null) {
            _Isoform = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Isoform;
    }

    public java.util.List getIsoform() {
        return _getIsoform();
    }

    public float getMass() {
        return _Mass;
    }

    public void setMass(float value) {
        _Mass = value;
        has_Mass = true;
    }

    public java.lang.String getError() {
        return _Error;
    }

    public void setError(java.lang.String value) {
        _Error = value;
    }

    public java.lang.String getNote() {
        return _Note;
    }

    public void setNote(java.lang.String value) {
        _Note = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getEvent() {
        if (_Event == null) {
            _Event = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Event;
    }

    public java.util.List getEvent() {
        return _getEvent();
    }

    public java.lang.String getTemperatureDependence() {
        return _TemperatureDependence;
    }

    public void setTemperatureDependence(java.lang.String value) {
        _TemperatureDependence = value;
    }

    public boolean isOrganismsDiffer() {
        return _OrganismsDiffer;
    }

    public void setOrganismsDiffer(boolean value) {
        _OrganismsDiffer = value;
        has_OrganismsDiffer = true;
    }

    public java.lang.String getEvidence() {
        return _Evidence;
    }

    public void setEvidence(java.lang.String value) {
        _Evidence = value;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.lang.String getRedoxPotential() {
        return _RedoxPotential;
    }

    public void setRedoxPotential(java.lang.String value) {
        _RedoxPotential = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getLocation() {
        if (_Location == null) {
            _Location = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Location;
    }

    public java.util.List getLocation() {
        return _getLocation();
    }

    protected com.sun.xml.bind.util.ListImpl _getInteractant() {
        if (_Interactant == null) {
            _Interactant = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Interactant;
    }

    public java.util.List getInteractant() {
        return _getInteractant();
    }

    public org.uniprot.uniprot.BpcCommentGroupAbsorptionType getAbsorption() {
        return _Absorption;
    }

    public void setAbsorption(org.uniprot.uniprot.BpcCommentGroupAbsorptionType value) {
        _Absorption = value;
    }

    public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
        return new org.uniprot.uniprot.impl.CommentTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Link == null)? 0 :_Link.size());
        int idx10 = 0;
        final int len10 = ((_Isoform == null)? 0 :_Isoform.size());
        int idx14 = 0;
        final int len14 = ((_Event == null)? 0 :_Event.size());
        int idx20 = 0;
        final int len20 = ((_Location == null)? 0 :_Location.size());
        int idx21 = 0;
        final int len21 = ((_Interactant == null)? 0 :_Interactant.size());
        if (_Text!= null) {
            context.startElement("http://uniprot.org/uniprot", "text");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Text), "Text");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Absorption!= null) {
            context.startElement("http://uniprot.org/uniprot", "absorption");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Absorption), "Absorption");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Absorption), "Absorption");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Absorption), "Absorption");
            context.endElement();
        }
        if (_Kinetics!= null) {
            context.startElement("http://uniprot.org/uniprot", "kinetics");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Kinetics), "Kinetics");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Kinetics), "Kinetics");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Kinetics), "Kinetics");
            context.endElement();
        }
        if (_PhDependence!= null) {
            context.startElement("http://uniprot.org/uniprot", "phDependence");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PhDependence), "PhDependence");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RedoxPotential!= null) {
            context.startElement("http://uniprot.org/uniprot", "redoxPotential");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _RedoxPotential), "RedoxPotential");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_TemperatureDependence!= null) {
            context.startElement("http://uniprot.org/uniprot", "temperatureDependence");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _TemperatureDependence), "TemperatureDependence");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (((((((((_Event == null)? 0 :_Event.size()) == 0)&&(((_Link == null)? 0 :_Link.size()) == 0))&&(!has_OrganismsDiffer))&&(((_Isoform == null)? 0 :_Isoform.size()) == 0))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null))&&(_Conflict!= null)) {
            context.startElement("http://uniprot.org/uniprot", "conflict");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Conflict), "Conflict");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Conflict), "Conflict");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Conflict), "Conflict");
            context.endElement();
        } else {
            if (((((((((_Event == null)? 0 :_Event.size()) == 0)&&(((_Link == null)? 0 :_Link.size())>= 1))&&(!has_OrganismsDiffer))&&(((_Isoform == null)? 0 :_Isoform.size()) == 0))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null))&&(_Conflict == null)) {
                while (idx1 != len1) {
                    context.startElement("http://uniprot.org/uniprot", "link");
                    int idx_14 = idx1;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Link.get(idx_14 ++)), "Link");
                    context.endNamespaceDecls();
                    int idx_15 = idx1;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Link.get(idx_15 ++)), "Link");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Link.get(idx1 ++)), "Link");
                    context.endElement();
                }
            } else {
                if (((((((((_Event == null)? 0 :_Event.size())>= 1)&&(((_Event == null)? 0 :_Event.size())<= 4))&&(((_Link == null)? 0 :_Link.size()) == 0))&&(!has_OrganismsDiffer))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null))&&(_Conflict == null)) {
                    while (idx14 != len14) {
                        context.startElement("http://uniprot.org/uniprot", "event");
                        int idx_16 = idx14;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Event.get(idx_16 ++)), "Event");
                        context.endNamespaceDecls();
                        int idx_17 = idx14;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Event.get(idx_17 ++)), "Event");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Event.get(idx14 ++)), "Event");
                        context.endElement();
                    }
                    while (idx10 != len10) {
                        context.startElement("http://uniprot.org/uniprot", "isoform");
                        int idx_18 = idx10;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Isoform.get(idx_18 ++)), "Isoform");
                        context.endNamespaceDecls();
                        int idx_19 = idx10;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Isoform.get(idx_19 ++)), "Isoform");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Isoform.get(idx10 ++)), "Isoform");
                        context.endElement();
                    }
                } else {
                    if (((((((((_Event == null)? 0 :_Event.size()) == 0)&&(((_Link == null)? 0 :_Link.size()) == 0))&&has_OrganismsDiffer)&&(((_Isoform == null)? 0 :_Isoform.size()) == 0))&&(((_Interactant == null)? 0 :_Interactant.size()) == 2))&&(_Experiments!= null))&&(_Conflict == null)) {
                        while (idx21 != len21) {
                            context.startElement("http://uniprot.org/uniprot", "interactant");
                            int idx_20 = idx21;
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Interactant.get(idx_20 ++)), "Interactant");
                            context.endNamespaceDecls();
                            int idx_21 = idx21;
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Interactant.get(idx_21 ++)), "Interactant");
                            context.endAttributes();
                            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Interactant.get(idx21 ++)), "Interactant");
                            context.endElement();
                        }
                        context.startElement("http://uniprot.org/uniprot", "organismsDiffer");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _OrganismsDiffer)), "OrganismsDiffer");
                        } catch (java.lang.Exception e) {
                            org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                        context.startElement("http://uniprot.org/uniprot", "experiments");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Experiments)), "Experiments");
                        } catch (java.lang.Exception e) {
                            org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }
            }
        }
        while (idx20 != len20) {
            context.startElement("http://uniprot.org/uniprot", "location");
            int idx_26 = idx20;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Location.get(idx_26 ++)), "Location");
            context.endNamespaceDecls();
            int idx_27 = idx20;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Location.get(idx_27 ++)), "Location");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Location.get(idx20 ++)), "Location");
            context.endElement();
        }
        if (_Note!= null) {
            context.startElement("http://uniprot.org/uniprot", "note");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Note), "Note");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Link == null)? 0 :_Link.size());
        int idx10 = 0;
        final int len10 = ((_Isoform == null)? 0 :_Isoform.size());
        int idx14 = 0;
        final int len14 = ((_Event == null)? 0 :_Event.size());
        int idx20 = 0;
        final int len20 = ((_Location == null)? 0 :_Location.size());
        int idx21 = 0;
        final int len21 = ((_Interactant == null)? 0 :_Interactant.size());
        if (_Error!= null) {
            context.startAttribute("", "error");
            try {
                context.text(((java.lang.String) _Error), "Error");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Evidence!= null) {
            context.startAttribute("", "evidence");
            try {
                context.text(((java.lang.String) _Evidence), "Evidence");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_Mass) {
            context.startAttribute("", "mass");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _Mass)), "Mass");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Method!= null) {
            context.startAttribute("", "method");
            try {
                context.text(((java.lang.String) _Method), "Method");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Name!= null) {
            context.startAttribute("", "name");
            try {
                context.text(((java.lang.String) _Name), "Name");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Status!= null) {
            context.startAttribute("", "status");
            try {
                context.text(((java.lang.String) _Status), "Status");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "type");
        try {
            context.text(((java.lang.String) _Type), "Type");
        } catch (java.lang.Exception e) {
            org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (!(((((((((_Event == null)? 0 :_Event.size()) == 0)&&(((_Link == null)? 0 :_Link.size()) == 0))&&(!has_OrganismsDiffer))&&(((_Isoform == null)? 0 :_Isoform.size()) == 0))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null))&&(_Conflict!= null))) {
            if (((((((((_Event == null)? 0 :_Event.size()) == 0)&&(((_Link == null)? 0 :_Link.size())>= 1))&&(!has_OrganismsDiffer))&&(((_Isoform == null)? 0 :_Isoform.size()) == 0))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null))&&(_Conflict == null)) {
                while (idx1 != len1) {
                    idx1 += 1;
                }
            } else {
                if (((((((((_Event == null)? 0 :_Event.size())>= 1)&&(((_Event == null)? 0 :_Event.size())<= 4))&&(((_Link == null)? 0 :_Link.size()) == 0))&&(!has_OrganismsDiffer))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null))&&(_Conflict == null)) {
                    while (idx14 != len14) {
                        idx14 += 1;
                    }
                    while (idx10 != len10) {
                        idx10 += 1;
                    }
                } else {
                    if (((((((((_Event == null)? 0 :_Event.size()) == 0)&&(((_Link == null)? 0 :_Link.size()) == 0))&&has_OrganismsDiffer)&&(((_Isoform == null)? 0 :_Isoform.size()) == 0))&&(((_Interactant == null)? 0 :_Interactant.size()) == 2))&&(_Experiments!= null))&&(_Conflict == null)) {
                        while (idx21 != len21) {
                            idx21 += 1;
                        }
                    }
                }
            }
        }
        while (idx20 != len20) {
            idx20 += 1;
        }
    }

    public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Link == null)? 0 :_Link.size());
        int idx10 = 0;
        final int len10 = ((_Isoform == null)? 0 :_Isoform.size());
        int idx14 = 0;
        final int len14 = ((_Event == null)? 0 :_Event.size());
        int idx20 = 0;
        final int len20 = ((_Location == null)? 0 :_Location.size());
        int idx21 = 0;
        final int len21 = ((_Interactant == null)? 0 :_Interactant.size());
        if (!(((((((((_Event == null)? 0 :_Event.size()) == 0)&&(((_Link == null)? 0 :_Link.size()) == 0))&&(!has_OrganismsDiffer))&&(((_Isoform == null)? 0 :_Isoform.size()) == 0))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null))&&(_Conflict!= null))) {
            if (((((((((_Event == null)? 0 :_Event.size()) == 0)&&(((_Link == null)? 0 :_Link.size())>= 1))&&(!has_OrganismsDiffer))&&(((_Isoform == null)? 0 :_Isoform.size()) == 0))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null))&&(_Conflict == null)) {
                while (idx1 != len1) {
                    idx1 += 1;
                }
            } else {
                if (((((((((_Event == null)? 0 :_Event.size())>= 1)&&(((_Event == null)? 0 :_Event.size())<= 4))&&(((_Link == null)? 0 :_Link.size()) == 0))&&(!has_OrganismsDiffer))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null))&&(_Conflict == null)) {
                    while (idx14 != len14) {
                        idx14 += 1;
                    }
                    while (idx10 != len10) {
                        idx10 += 1;
                    }
                } else {
                    if (((((((((_Event == null)? 0 :_Event.size()) == 0)&&(((_Link == null)? 0 :_Link.size()) == 0))&&has_OrganismsDiffer)&&(((_Isoform == null)? 0 :_Isoform.size()) == 0))&&(((_Interactant == null)? 0 :_Interactant.size()) == 2))&&(_Experiments!= null))&&(_Conflict == null)) {
                        while (idx21 != len21) {
                            idx21 += 1;
                        }
                    }
                }
            }
        }
        while (idx20 != len20) {
            idx20 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.uniprot.uniprot.CommentType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005v"
+"aluexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datat"
+"ype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/Str"
+"ing;L\u0000\btypeNameq\u0000~\u0000%L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xs"
+"d/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat"
+"\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pre"
+"serve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSet"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair"
+"\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xpq\u0000~\u0000)q\u0000~\u0000("
+"sq\u0000~\u0000\u0014ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0017xq\u0000~\u0000\u0003q\u0000~\u0000\u001bpsq\u0000~\u0000\u001dppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0005QNamesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000+q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u00007q\u0000~\u0000(sr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xr\u0000\u001dcom"
+".sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www."
+"w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u001a\u0001q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0004"
+"textt\u0000\u001ahttp://uniprot.org/uniprotq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000s"
+"q\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003exp"
+"q\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpsr\u00002com.sun.msv.grammar.Express"
+"ion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Bq\u0000~\u0000Psr\u0000 com.su"
+"n.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000<q\u0000~\u0000Asq\u0000~\u0000;t\u00001org"
+".uniprot.uniprot.BpcCommentGroupAbsorptionTypet\u0000+http://java"
+".sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~"
+"\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\nabsorptionq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000~\u0000Rq\u0000~\u0000"
+"Asq\u0000~\u0000;t\u0000/org.uniprot.uniprot.BpcCommentGroupKineticsTypeq\u0000~"
+"\u0000Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\bkineticsq\u0000~\u0000Eq"
+"\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000"
+"~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\fphDependenceq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t"
+"\u0000\u000eredoxPotentialq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 "
+"sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0015temperatureDepen"
+"denceq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0014q\u0000~\u0000\u001bpsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000"
+"~\u0000Rq\u0000~\u0000Asq\u0000~\u0000;t\u0000,org.uniprot.uniprot.CommentType.ConflictTyp"
+"eq\u0000~\u0000Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\bconflictq\u0000"
+"~\u0000Esq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq"
+"\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000~\u0000Rq\u0000~\u0000Asq\u0000~\u0000;t\u0000(org.uniprot.uniprot"
+".CommentType.LinkTypeq\u0000~\u0000Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000"
+"Asq\u0000~\u0000;t\u0000\u0004linkq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000~\u0000Rq\u0000~\u0000Asq\u0000~\u0000;t"
+"\u0000\u001dorg.uniprot.uniprot.EventTypeq\u0000~\u0000Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000"
+"4q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0005eventq\u0000~\u0000Esq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0000q\u0000~\u0000\u001bpsq\u0000~\u0000\u0016q\u0000~\u0000"
+"\u001bp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000~"
+"\u0000Rq\u0000~\u0000Asq\u0000~\u0000;q\u0000~\u0000\u00a2q\u0000~\u0000Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Aq\u0000"
+"~\u0000\u00a5sq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0000q\u0000~\u0000\u001bpsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014p"
+"psq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000~\u0000Rq\u0000~\u0000Asq\u0000~\u0000;q\u0000~\u0000\u00a2q\u0000~\u0000Usq\u0000~"
+"\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000\u00a5sq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000~\u0000Rq\u0000~\u0000"
+"Asq\u0000~\u0000;q\u0000~\u0000\u00a2q\u0000~\u0000Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000\u00a5q\u0000~"
+"\u0000Aq\u0000~\u0000Aq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016p"
+"p\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000~\u0000Rq\u0000~\u0000Asq\u0000~\u0000;t\u0000\u001for"
+"g.uniprot.uniprot.IsoformTypeq\u0000~\u0000Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q"
+"\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0007isoformq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pps"
+"q\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~"
+"\u0000Pq\u0000~\u0000Rq\u0000~\u0000Asq\u0000~\u0000;t\u0000#org.uniprot.uniprot.InteractantTypeq\u0000~\u0000"
+"Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000binteractantq\u0000~\u0000"
+"Esq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq"
+"\u0000~\u0000Pq\u0000~\u0000Rq\u0000~\u0000Asq\u0000~\u0000;q\u0000~\u0000\u00dfq\u0000~\u0000Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000="
+"q\u0000~\u0000Aq\u0000~\u0000\u00e2sq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dppsr\u0000$com.sun.msv.datatype."
+"xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0007booleanq\u0000~\u00009q\u0000~\u0000.sq\u0000"
+"~\u0000/q\u0000~\u0000\u00f2q\u0000~\u0000(sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000forg"
+"anismsDifferq\u0000~\u0000Esq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dppsr\u0000$com.sun.msv.da"
+"tatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xs"
+"d.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/"
+"datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0007integerq\u0000~\u00009sr\u0000,co"
+"m.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scal"
+"exr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintF"
+"acetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq"
+"\u0000~\u0000\u00fdL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType"
+";L\u0000\tfacetNameq\u0000~\u0000%xq\u0000~\u0000$ppq\u0000~\u00009\u0001\u0000sr\u0000#com.sun.msv.datatype.xs"
+"d.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0007decimalq\u0000~\u00009q\u0000~\u0001\u0006t\u0000\u000efra"
+"ctionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u0000\u00ffq\u0000~\u0000(sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000"
+"4q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000bexperimentsq\u0000~\u0000Esq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~"
+"\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000"
+"~\u0000Pq\u0000~\u0000Rq\u0000~\u0000Asq\u0000~\u0000;t\u0000 org.uniprot.uniprot.LocationTypeq\u0000~\u0000Us"
+"q\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\blocationq\u0000~\u0000Eq\u0000~\u0000"
+"Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004"
+"q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0004noteq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000 sq"
+"\u0000~\u0000;t\u0000\u0005errort\u0000\u0000q\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000 sq\u0000~\u0000;t\u0000\beviden"
+"ceq\u0000~\u0001\'q\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpsq\u0000~\u0000\u001dppsr\u0000\"com.sun.msv.data"
+"type.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Fl"
+"oatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0005floatq\u0000~\u00009q\u0000~\u0000.sq\u0000~"
+"\u0000/q\u0000~\u00012q\u0000~\u0000(sq\u0000~\u0000;t\u0000\u0004massq\u0000~\u0001\'q\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000 "
+"sq\u0000~\u0000;t\u0000\u0006methodq\u0000~\u0001\'q\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000 sq\u0000~\u0000;t\u0000\u0004n"
+"ameq\u0000~\u0001\'q\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000 sq\u0000~\u0000;t\u0000\u0006statusq\u0000~\u0001\'q\u0000"
+"~\u0000Asq\u0000~\u00002ppsq\u0000~\u0000\u001dppsr\u0000)com.sun.msv.datatype.xsd.EnumerationF"
+"acet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.da"
+"tatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0001\u0002"
+"q\u0000~\u0000Epq\u0000~\u0000,\u0000\u0000q\u0000~\u0000\'q\u0000~\u0000\'t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD"
+"\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001ct\u0000\u0003PTMt\u0000\u001dbiophysicochemical propert"
+"iest\u0000\ballergent\u0000\u000epharmaceuticalt\u0000\bfunctiont\u0000\u0007diseaset\u0000\bcofac"
+"tort\u0000\tinductiont\u0000\u0011enzyme regulationt\u0000\u0012online informationt\u0000\u0010s"
+"equence cautiont\u0000\rmiscellaneoust\u0000\u0007cautiont\u0000\u0011mass spectrometr"
+"yt\u0000\u0012tissue specificityt\u0000\u0014subcellular locationt\u0000\u0014alternative "
+"productst\u0000\fpolymorphismt\u0000\u0007pathwayt\u0000\u0007subunitt\u0000\ntoxic doset\u0000\u000bR"
+"NA editingt\u0000\u0012catalytic activityt\u0000\u0013developmental staget\u0000\u0006doma"
+"int\u0000\nsimilarityt\u0000\rbiotechnologyt\u0000\u000binteractionxq\u0000~\u0000.sq\u0000~\u0000/t\u0000\u000e"
+"string-derivedq\u0000~\u0000Esq\u0000~\u0000;t\u0000\u0004typeq\u0000~\u0001\'sr\u0000\"com.sun.msv.grammar"
+".ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar"
+"/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Express"
+"ionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006pare"
+"ntt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000m\u0001pq\u0000~\u0000\rq\u0000~\u0000\u00d7q"
+"\u0000~\u0000^q\u0000~\u0000Jq\u0000~\u0000\u00c1q\u0000~\u0000\u00b7q\u0000~\u0000\u00acq\u0000~\u0000\u009eq\u0000~\u0000\u0090q\u0000~\u0000\u0083q\u0000~\u0000\u00ccq\u0000~\u0000\u00dbq\u0000~\u0000\u00e7q\u0000~\u0001\u0013q"
+"\u0000~\u0000\u000bq\u0000~\u0000\u008cq\u0000~\u0000\u00c8q\u0000~\u0001\u000fq\u0000~\u0000\u0012q\u0000~\u0000\fq\u0000~\u0000\u0005q\u0000~\u0001:q\u0000~\u0000\u00f9q\u0000~\u0000wq\u0000~\u0000pq\u0000~\u0000iq"
+"\u0000~\u0000\u001cq\u0000~\u0000\u007fq\u0000~\u0001\u001eq\u0000~\u0001#q\u0000~\u0000\u00c2q\u0000~\u0000\u00b8q\u0000~\u0000\u00adq\u0000~\u0000\u009fq\u0000~\u0000\u0091q\u0000~\u0000\u0084q\u0000~\u0000_q\u0000~\u0000Mq"
+"\u0000~\u0000\u00cdq\u0000~\u0000\u00dcq\u0000~\u0000\u00e8q\u0000~\u0001\u0014q\u0000~\u0000~q\u0000~\u0000\u00c7q\u0000~\u0001\u000eq\u0000~\u0000\u00bdq\u0000~\u0000Zq\u0000~\u0000Fq\u0000~\u0000\u00c5q\u0000~\u0000\u00bbq"
+"\u0000~\u0000\u00b0q\u0000~\u0000\u00a3q\u0000~\u0000\u0095q\u0000~\u0000\u0088q\u0000~\u0000xq\u0000~\u0000qq\u0000~\u0000jq\u0000~\u0000cq\u0000~\u0000Vq\u0000~\u00001q\u0000~\u0000\u00d1q\u0000~\u0000\u00e0q"
+"\u0000~\u0000\u00ebq\u0000~\u0000\u00f4q\u0000~\u0001\nq\u0000~\u0001\u0018q\u0000~\u0001\u001fq\u0000~\u0001,q\u0000~\u0000\u0011q\u0000~\u0000\u00b3q\u0000~\u0000\u00b2q\u0000~\u0000gq\u0000~\u0000\u0015q\u0000~\u0000uq"
+"\u0000~\u0000nq\u0000~\u0001\u001cq\u0000~\u0000\bq\u0000~\u0000\u00a8q\u0000~\u0000\u0010q\u0000~\u0000\nq\u0000~\u0000|q\u0000~\u0000\u00d5q\u0000~\u0000\u00a7q\u0000~\u0001(q\u0000~\u0000\u000eq\u0000~\u0000\u00d6q"
+"\u0000~\u00016q\u0000~\u0000\u0007q\u0000~\u0000\u00bfq\u0000~\u0000\u00b5q\u0000~\u0000\u00aaq\u0000~\u0000\u009cq\u0000~\u0000\u008eq\u0000~\u0000\u0081q\u0000~\u0000\\q\u0000~\u0000Hq\u0000~\u0000\u00caq\u0000~\u0000\u00d9q"
+"\u0000~\u0000\u00e5q\u0000~\u0000\u0013q\u0000~\u0001\u0011q\u0000~\u0001>q\u0000~\u0000\u000fq\u0000~\u0000\u00eeq\u0000~\u0000\tq\u0000~\u0000\u0099q\u0000~\u0000}q\u0000~\u0000\u0006q\u0000~\u0000\u009ax"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public boolean equals(java.lang.Object obj) {
        if (this == obj) {
            return true;
        }
        if ((null == obj)||(!(obj instanceof org.uniprot.uniprot.CommentType))) {
            return false;
        }
        org.uniprot.uniprot.impl.CommentTypeImpl target = ((org.uniprot.uniprot.impl.CommentTypeImpl) obj);
        {
            java.util.List value = this.getLink();
            java.util.List targetValue = target.getLink();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.lang.String value = this.getStatus();
            java.lang.String targetValue = target.getStatus();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.lang.String value = this.getType();
            java.lang.String targetValue = target.getType();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.math.BigInteger value = this.getExperiments();
            java.math.BigInteger targetValue = target.getExperiments();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            org.uniprot.uniprot.CommentType.ConflictType value = this.getConflict();
            org.uniprot.uniprot.CommentType.ConflictType targetValue = target.getConflict();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.lang.String value = this.getMethod();
            java.lang.String targetValue = target.getMethod();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.lang.String value = this.getText();
            java.lang.String targetValue = target.getText();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.lang.String value = this.getPhDependence();
            java.lang.String targetValue = target.getPhDependence();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            org.uniprot.uniprot.BpcCommentGroupKineticsType value = this.getKinetics();
            org.uniprot.uniprot.BpcCommentGroupKineticsType targetValue = target.getKinetics();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getIsoform();
            java.util.List targetValue = target.getIsoform();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            float value = this.getMass();
            float targetValue = target.getMass();
            if (value!= targetValue) {
                return false;
            }
        }
        {
            java.lang.String value = this.getError();
            java.lang.String targetValue = target.getError();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.lang.String value = this.getNote();
            java.lang.String targetValue = target.getNote();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getEvent();
            java.util.List targetValue = target.getEvent();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.lang.String value = this.getTemperatureDependence();
            java.lang.String targetValue = target.getTemperatureDependence();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            boolean value = this.isOrganismsDiffer();
            boolean targetValue = target.isOrganismsDiffer();
            if (value!= targetValue) {
                return false;
            }
        }
        {
            java.lang.String value = this.getEvidence();
            java.lang.String targetValue = target.getEvidence();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.lang.String value = this.getName();
            java.lang.String targetValue = target.getName();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.lang.String value = this.getRedoxPotential();
            java.lang.String targetValue = target.getRedoxPotential();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getLocation();
            java.util.List targetValue = target.getLocation();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getInteractant();
            java.util.List targetValue = target.getInteractant();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            org.uniprot.uniprot.BpcCommentGroupAbsorptionType value = this.getAbsorption();
            org.uniprot.uniprot.BpcCommentGroupAbsorptionType targetValue = target.getAbsorption();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        return true;
    }

    public int hashCode() {
        int hash = 7;
        {
            java.util.List value = this.getLink();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.lang.String value = this.getStatus();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.lang.String value = this.getType();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.math.BigInteger value = this.getExperiments();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            org.uniprot.uniprot.CommentType.ConflictType value = this.getConflict();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.lang.String value = this.getMethod();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.lang.String value = this.getText();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.lang.String value = this.getPhDependence();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            org.uniprot.uniprot.BpcCommentGroupKineticsType value = this.getKinetics();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getIsoform();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            float value = this.getMass();
            hash = ((31 *hash)+ java.lang.Float.floatToIntBits(value));
        }
        {
            java.lang.String value = this.getError();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.lang.String value = this.getNote();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getEvent();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.lang.String value = this.getTemperatureDependence();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            boolean value = this.isOrganismsDiffer();
            hash = ((31 *hash)+(value? 1 : 0));
        }
        {
            java.lang.String value = this.getEvidence();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.lang.String value = this.getName();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.lang.String value = this.getRedoxPotential();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getLocation();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getInteractant();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            org.uniprot.uniprot.BpcCommentGroupAbsorptionType value = this.getAbsorption();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        return hash;
    }

    public java.lang.Long getHjid() {
        return _Hjid;
    }

    public void setHjid(java.lang.Long value) {
        _Hjid = value;
    }

    public java.lang.Long getHjversion() {
        return _Hjversion;
    }

    public void setHjversion(java.lang.Long value) {
        _Hjversion = value;
    }

    public static class ConflictTypeImpl implements org.uniprot.uniprot.CommentType.ConflictType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
    {

        protected java.lang.String _Type;
        protected java.lang.String _Ref;
        protected org.uniprot.uniprot.CommentType.ConflictType.SequenceType _Sequence;
        public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;
        protected java.lang.Long _Hjid;
        protected java.lang.Long _Hjversion;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.uniprot.uniprot.CommentType.ConflictType.class);
        }

        public java.lang.String getType() {
            return _Type;
        }

        public void setType(java.lang.String value) {
            _Type = value;
        }

        public java.lang.String getRef() {
            return _Ref;
        }

        public void setRef(java.lang.String value) {
            _Ref = value;
        }

        public org.uniprot.uniprot.CommentType.ConflictType.SequenceType getSequence() {
            return _Sequence;
        }

        public void setSequence(org.uniprot.uniprot.CommentType.ConflictType.SequenceType value) {
            _Sequence = value;
        }

        public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            return new org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (_Sequence!= null) {
                context.startElement("http://uniprot.org/uniprot", "sequence");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Sequence), "Sequence");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Sequence), "Sequence");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Sequence), "Sequence");
                context.endElement();
            }
        }

        public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (_Ref!= null) {
                context.startAttribute("", "ref");
                try {
                    context.text(((java.lang.String) _Ref), "Ref");
                } catch (java.lang.Exception e) {
                    org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
            context.startAttribute("", "type");
            try {
                context.text(((java.lang.String) _Type), "Type");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }

        public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.uniprot.uniprot.CommentType.ConflictType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolea"
+"n\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsr\u0000 com.su"
+"n.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar"
+".UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u0000 com.sun.msv.g"
+"rammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq"
+"\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.Any"
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleNameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespace"
+"URIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u00009org.uniprot.uniprot.CommentType.ConflictTyp"
+"e.SequenceTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elements"
+"sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0015q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004na"
+"met\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.da"
+"tatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd."
+"BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Con"
+"creteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeI"
+"mpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSp"
+"acet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 htt"
+"p://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000"
+"\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fn"
+"amespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://www.w3.or"
+"g/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\bsequencet\u0000\u001ahttp://uni"
+"prot.org/uniprotq\u0000~\u0000\u001esq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0015q\u0000~\u0000\u000epsq\u0000~\u0000&ppsr\u0000#com.sun"
+".msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000"
+"+q\u0000~\u00000t\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProces"
+"sor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00003\u0001q\u0000~\u00006sq\u0000~\u00007q\u0000~\u0000Dq\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0003"
+"reft\u0000\u0000q\u0000~\u0000\u001esq\u0000~\u0000\u0015ppsq\u0000~\u0000&ppsr\u0000)com.sun.msv.datatype.xsd.Enum"
+"erationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.su"
+"n.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002"
+"\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z"
+"\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/ms"
+"v/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv"
+"/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000 xq\u0000~\u0000-q\u0000~\u0000>pq\u0000~\u0000"
+"F\u0000\u0000q\u0000~\u0000Cq\u0000~\u0000Ct\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000x"
+"pw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006t\u0000\u0019miscellaneous discrepancyt\u0000\u0015erroneous tran"
+"slationt\u0000\u001ferroneous gene model predictiont\u0000\u0015erroneous termin"
+"ationt\u0000\u0014erroneous initiationt\u0000\nframeshiftxq\u0000~\u00006sq\u0000~\u00007t\u0000\u000estri"
+"ng-derivedq\u0000~\u0000>sq\u0000~\u0000\u001ft\u0000\u0004typeq\u0000~\u0000Jsr\u0000\"com.sun.msv.grammar.Exp"
+"ressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Exp"
+"ressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionP"
+"ool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000"
+"$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\b\u0001pq\u0000~\u0000\u000fq\u0000~\u0000\u0014q\u0000~\u0000$"
+"q\u0000~\u0000\bq\u0000~\u0000\u0005q\u0000~\u0000?q\u0000~\u0000\u0006q\u0000~\u0000\u0011x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public boolean equals(java.lang.Object obj) {
            if (this == obj) {
                return true;
            }
            if ((null == obj)||(!(obj instanceof org.uniprot.uniprot.CommentType.ConflictType))) {
                return false;
            }
            org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl target = ((org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl) obj);
            {
                java.lang.String value = this.getType();
                java.lang.String targetValue = target.getType();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                java.lang.String value = this.getRef();
                java.lang.String targetValue = target.getRef();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                org.uniprot.uniprot.CommentType.ConflictType.SequenceType value = this.getSequence();
                org.uniprot.uniprot.CommentType.ConflictType.SequenceType targetValue = target.getSequence();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            return true;
        }

        public int hashCode() {
            int hash = 7;
            {
                java.lang.String value = this.getType();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                java.lang.String value = this.getRef();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                org.uniprot.uniprot.CommentType.ConflictType.SequenceType value = this.getSequence();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            return hash;
        }

        public java.lang.Long getHjid() {
            return _Hjid;
        }

        public void setHjid(java.lang.Long value) {
            _Hjid = value;
        }

        public java.lang.Long getHjversion() {
            return _Hjversion;
        }

        public void setHjversion(java.lang.Long value) {
            _Hjversion = value;
        }

        public static class SequenceTypeImpl implements org.uniprot.uniprot.CommentType.ConflictType.SequenceType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Resource;
            protected java.math.BigInteger _Version;
            protected java.lang.String _Id;
            public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;
            protected java.lang.Long _Hjid;
            protected java.lang.Long _Hjversion;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.uniprot.uniprot.CommentType.ConflictType.SequenceType.class);
            }

            public java.lang.String getResource() {
                return _Resource;
            }

            public void setResource(java.lang.String value) {
                _Resource = value;
            }

            public java.math.BigInteger getVersion() {
                return _Version;
            }

            public void setVersion(java.math.BigInteger value) {
                _Version = value;
            }

            public java.lang.String getId() {
                return _Id;
            }

            public void setId(java.lang.String value) {
                _Id = value;
            }

            public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
                return new org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl.SequenceTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startAttribute("", "id");
                try {
                    context.text(((java.lang.String) _Id), "Id");
                } catch (java.lang.Exception e) {
                    org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
                context.startAttribute("", "resource");
                try {
                    context.text(((java.lang.String) _Resource), "Resource");
                } catch (java.lang.Exception e) {
                    org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
                if (_Version!= null) {
                    context.startAttribute("", "version");
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Version)), "Version");
                    } catch (java.lang.Exception e) {
                        org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endAttribute();
                }
            }

            public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.uniprot.uniprot.CommentType.ConflictType.SequenceType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv.grammar.Attribut"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gramma"
+"r/NameClass;xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004na"
+"met\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.da"
+"tatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun."
+"msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv"
+".datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatyp"
+"e.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/"
+"String;L\u0000\btypeNameq\u0000~\u0000\u0012L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype"
+"/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSche"
+"mat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
+"Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$Null"
+"SetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringP"
+"air\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0012L\u0000\fnamespaceURIq\u0000~\u0000\u0012xpq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u0015sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloca"
+"lNameq\u0000~\u0000\u0012L\u0000\fnamespaceURIq\u0000~\u0000\u0012xr\u0000\u001dcom.sun.msv.grammar.NameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0002idt\u0000\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\nppsr\u0000)com.sun.msv.data"
+"type.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/S"
+"et;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintF"
+"acet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet"
+"\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000"
+"\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0012xq\u0000"
+"~\u0000\u0011t\u0000\u001ahttp://uniprot.org/uniprotpq\u0000~\u0000\u0019\u0000\u0000q\u0000~\u0000\u0014q\u0000~\u0000\u0014t\u0000\u000benumera"
+"tionsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002t\u0000\bEMBL-"
+"CDSt\u0000\u0004EMBLxq\u0000~\u0000\u001bsq\u0000~\u0000\u001ct\u0000\u000estring-derivedq\u0000~\u0000,sq\u0000~\u0000\u001et\u0000\bresourc"
+"eq\u0000~\u0000\"sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq"
+"\u0000~\u0000\u0007sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\nppsr\u0000$"
+"com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.m"
+"sv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000"
+"~\u0000)xq\u0000~\u0000\u000fq\u0000~\u0000\u0015t\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0018sr\u0000,com.sun.msv.dataty"
+"pe.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv"
+".datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000x"
+"q\u0000~\u0000(ppq\u0000~\u0000A\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000fq\u0000~\u0000\u0015t\u0000\u0007decimalq\u0000~\u0000Aq\u0000~\u0000Ft\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000"
+"\u001bsq\u0000~\u0000\u001cq\u0000~\u0000?q\u0000~\u0000\u0015sq\u0000~\u0000\u001et\u0000\u0007versionq\u0000~\u0000\"sr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00009\u0001q\u0000~\u0000Ms"
+"r\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet"
+"\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.s"
+"un.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB"
+"\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPo"
+"ol;xp\u0000\u0000\u0000\u0003\u0001pq\u0000~\u0000\u0005q\u0000~\u0000\u0006q\u0000~\u00007x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public boolean equals(java.lang.Object obj) {
                if (this == obj) {
                    return true;
                }
                if ((null == obj)||(!(obj instanceof org.uniprot.uniprot.CommentType.ConflictType.SequenceType))) {
                    return false;
                }
                org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl.SequenceTypeImpl target = ((org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl.SequenceTypeImpl) obj);
                {
                    java.lang.String value = this.getResource();
                    java.lang.String targetValue = target.getResource();
                    if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                        return false;
                    }
                }
                {
                    java.math.BigInteger value = this.getVersion();
                    java.math.BigInteger targetValue = target.getVersion();
                    if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                        return false;
                    }
                }
                {
                    java.lang.String value = this.getId();
                    java.lang.String targetValue = target.getId();
                    if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                        return false;
                    }
                }
                return true;
            }

            public int hashCode() {
                int hash = 7;
                {
                    java.lang.String value = this.getResource();
                    hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
                }
                {
                    java.math.BigInteger value = this.getVersion();
                    hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
                }
                {
                    java.lang.String value = this.getId();
                    hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
                }
                return hash;
            }

            public java.lang.Long getHjid() {
                return _Hjid;
            }

            public void setHjid(java.lang.Long value) {
                _Hjid = value;
            }

            public java.lang.Long getHjversion() {
                return _Hjversion;
            }

            public void setHjversion(java.lang.Long value) {
                _Hjversion = value;
            }

            public class Unmarshaller
                extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
                    super(context, "----------");
                }

                protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl.SequenceTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                attIdx = context.getAttribute("", "version");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText1(v);
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                            case  9 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "id");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case  3 :
                                attIdx = context.getAttribute("", "resource");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText3(v);
                                    continue outer;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Version = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Id = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Resource = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                attIdx = context.getAttribute("", "version");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText1(v);
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                            case  9 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "id");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case  3 :
                                attIdx = context.getAttribute("", "resource");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText3(v);
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                if (("version" == ___local)&&("" == ___uri)) {
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  9 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                if (("id" == ___local)&&("" == ___uri)) {
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  3 :
                                if (("resource" == ___local)&&("" == ___uri)) {
                                    state = 4;
                                    return ;
                                }
                                break;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                attIdx = context.getAttribute("", "version");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText1(v);
                                    continue outer;
                                }
                                state = 9;
                                continue outer;
                            case  2 :
                                if (("id" == ___local)&&("" == ___uri)) {
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  9 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "id");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case  8 :
                                if (("version" == ___local)&&("" == ___uri)) {
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  5 :
                                if (("resource" == ___local)&&("" == ___uri)) {
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  3 :
                                attIdx = context.getAttribute("", "resource");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText3(v);
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  6 :
                                    attIdx = context.getAttribute("", "version");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 9;
                                        eatText1(v);
                                        continue outer;
                                    }
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    revertToParentFromText(value);
                                    return ;
                                case  1 :
                                    state = 2;
                                    eatText2(value);
                                    return ;
                                case  0 :
                                    attIdx = context.getAttribute("", "id");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 3;
                                        eatText2(v);
                                        continue outer;
                                    }
                                    break;
                                case  4 :
                                    state = 5;
                                    eatText3(value);
                                    return ;
                                case  7 :
                                    state = 8;
                                    eatText1(value);
                                    return ;
                                case  3 :
                                    attIdx = context.getAttribute("", "resource");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 6;
                                        eatText3(v);
                                        continue outer;
                                    }
                                    break;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public class Unmarshaller
            extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
                super(context, "----------");
            }

            protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            if (("sequence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  9 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Type = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Ref = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  8 :
                            if (("sequence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  9 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("type" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  9 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            if (("ref" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  7 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                _Sequence = ((org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl.SequenceTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl.SequenceTypeImpl.class), 8, ___uri, ___local, ___qname));
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  5 :
                            if (("type" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  2 :
                            if (("ref" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  9 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                attIdx = context.getAttribute("", "type");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  9 :
                                revertToParentFromText(value);
                                return ;
                            case  4 :
                                state = 5;
                                eatText1(value);
                                return ;
                            case  1 :
                                state = 2;
                                eatText2(value);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "ref");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                state = 3;
                                continue outer;
                            case  7 :
                                attIdx = context.getAttribute("", "id");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class LinkTypeImpl implements org.uniprot.uniprot.CommentType.LinkType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
    {

        protected java.lang.String _Uri;
        public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;
        protected java.lang.Long _Hjid;
        protected java.lang.Long _Hjversion;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.uniprot.uniprot.CommentType.LinkType.class);
        }

        public java.lang.String getUri() {
            return _Uri;
        }

        public void setUri(java.lang.String value) {
            _Uri = value;
        }

        public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            return new org.uniprot.uniprot.impl.CommentTypeImpl.LinkTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startAttribute("", "uri");
            try {
                context.text(((java.lang.String) _Uri), "Uri");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }

        public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.uniprot.uniprot.CommentType.LinkType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expt\u0000 "
+"Lcom/sun/msv/grammar/Expression;L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/"
+"grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O"
+"\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedEx"
+"pq\u0000~\u0000\u0001xpppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0001L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd"
+".AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAt"
+"omicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u000eL\u0000\n"
+"whiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;x"
+"pt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006anyURIsr\u00005com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000co"
+"m.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq"
+"\u0000~\u0000\u000eL\u0000\fnamespaceURIq\u0000~\u0000\u000expq\u0000~\u0000\u0012q\u0000~\u0000\u0011sr\u0000#com.sun.msv.grammar."
+"SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000eL\u0000\fnamespaceURIq\u0000"
+"~\u0000\u000exr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0003urit\u0000\u0000sr"
+"\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000"
+"/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.su"
+"n.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000"
+"\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPoo"
+"l;xp\u0000\u0000\u0000\u0000\u0001px"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public boolean equals(java.lang.Object obj) {
            if (this == obj) {
                return true;
            }
            if ((null == obj)||(!(obj instanceof org.uniprot.uniprot.CommentType.LinkType))) {
                return false;
            }
            org.uniprot.uniprot.impl.CommentTypeImpl.LinkTypeImpl target = ((org.uniprot.uniprot.impl.CommentTypeImpl.LinkTypeImpl) obj);
            {
                java.lang.String value = this.getUri();
                java.lang.String targetValue = target.getUri();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            return true;
        }

        public int hashCode() {
            int hash = 7;
            {
                java.lang.String value = this.getUri();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            return hash;
        }

        public java.lang.Long getHjid() {
            return _Hjid;
        }

        public void setHjid(java.lang.Long value) {
            _Hjid = value;
        }

        public java.lang.Long getHjversion() {
            return _Hjversion;
        }

        public void setHjversion(java.lang.Long value) {
            _Hjversion = value;
        }

        public class Unmarshaller
            extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.uniprot.uniprot.impl.CommentTypeImpl.LinkTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "uri");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Uri = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "uri");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            if (("uri" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "uri");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  2 :
                            if (("uri" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                state = 2;
                                eatText1(value);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "uri");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------------------------------------");
        }

        protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.uniprot.uniprot.impl.CommentTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText1(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "method");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText2(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  50 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  18 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  33 :
                        if (("redoxPotential" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  27 :
                        if (("kinetics" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  21 :
                        if (("text" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText4(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  53 :
                        if (("interactant" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 51;
                            return ;
                        }
                        if (("organismsDiffer" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 54;
                            return ;
                        }
                        break;
                    case  39 :
                        if (("conflict" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 62;
                            return ;
                        }
                        if (("link" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 40;
                            return ;
                        }
                        if (("event" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 59;
                            return ;
                        }
                        if (("interactant" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 51;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  61 :
                        if (("event" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 59;
                            return ;
                        }
                        if (("isoform" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 43;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  36 :
                        if (("temperatureDependence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  40 :
                        attIdx = context.getAttribute("", "uri");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  45 :
                        attIdx = context.getAttribute("", "sequence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("begin" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getLocation().add(((org.uniprot.uniprot.impl.LocationTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.LocationTypeImpl.class), 46, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("position" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getLocation().add(((org.uniprot.uniprot.impl.LocationTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.LocationTypeImpl.class), 46, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  51 :
                        attIdx = context.getAttribute("", "intactId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  47 :
                        if (("location" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 45;
                            return ;
                        }
                        if (("note" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 48;
                            return ;
                        }
                        state = 50;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "mass");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText5(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  59 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  42 :
                        if (("link" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 40;
                            return ;
                        }
                        if (("isoform" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 43;
                            return ;
                        }
                        if (("location" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 45;
                            return ;
                        }
                        state = 47;
                        continue outer;
                    case  24 :
                        if (("absorption" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  62 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "error");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText6(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  25 :
                        if (("max" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 26, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("text" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 26, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 26, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  30 :
                        if (("phDependence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  28 :
                        if (("KM" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 29, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Vmax" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 29, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("text" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 29, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 29, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  43 :
                        if (("id" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getIsoform().add(((org.uniprot.uniprot.impl.IsoformTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.IsoformTypeImpl.class), 44, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText7(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  56 :
                        if (("experiments" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 57;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Status = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Method = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Mass = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Mass = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Error = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Evidence = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText1(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  26 :
                        if (("absorption" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "method");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText2(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  58 :
                        if (("experiments" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  44 :
                        if (("isoform" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  50 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  52 :
                        if (("interactant" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 53;
                            return ;
                        }
                        break;
                    case  18 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  55 :
                        if (("organismsDiffer" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 56;
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText4(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  49 :
                        if (("note" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 50;
                            return ;
                        }
                        break;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  38 :
                        if (("temperatureDependence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  35 :
                        if (("redoxPotential" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  41 :
                        if (("link" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  61 :
                        state = 42;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  40 :
                        attIdx = context.getAttribute("", "uri");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  45 :
                        attIdx = context.getAttribute("", "sequence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  51 :
                        attIdx = context.getAttribute("", "intactId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  46 :
                        if (("location" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 47;
                            return ;
                        }
                        break;
                    case  47 :
                        state = 50;
                        continue outer;
                    case  63 :
                        if (("conflict" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "mass");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText5(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  59 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  29 :
                        if (("kinetics" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  42 :
                        state = 47;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  23 :
                        if (("text" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  62 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "error");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText6(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  25 :
                        _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromLeaveElement((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 26, ___uri, ___local, ___qname));
                        return ;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  28 :
                        _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromLeaveElement((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 29, ___uri, ___local, ___qname));
                        return ;
                    case  60 :
                        if (("event" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 61;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText7(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  32 :
                        if (("phDependence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        if (("status" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  9 :
                        if (("method" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  50 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        break;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  12 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  61 :
                        state = 42;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  40 :
                        if (("uri" == ___local)&&("" == ___uri)) {
                            _getLink().add(((org.uniprot.uniprot.impl.CommentTypeImpl.LinkTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.CommentTypeImpl.LinkTypeImpl.class), 41, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  45 :
                        if (("sequence" == ___local)&&("" == ___uri)) {
                            _getLocation().add(((org.uniprot.uniprot.impl.LocationTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.LocationTypeImpl.class), 46, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  51 :
                        if (("intactId" == ___local)&&("" == ___uri)) {
                            _getInteractant().add(((org.uniprot.uniprot.impl.InteractantTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.InteractantTypeImpl.class), 52, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  47 :
                        state = 50;
                        continue outer;
                    case  6 :
                        if (("mass" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  59 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _getEvent().add(((org.uniprot.uniprot.impl.EventTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EventTypeImpl.class), 60, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("type" == ___local)&&("" == ___uri)) {
                            _getEvent().add(((org.uniprot.uniprot.impl.EventTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EventTypeImpl.class), 60, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  42 :
                        state = 47;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  62 :
                        if (("ref" == ___local)&&("" == ___uri)) {
                            _Conflict = ((org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl.class), 63, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("type" == ___local)&&("" == ___uri)) {
                            _Conflict = ((org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.CommentTypeImpl.ConflictTypeImpl.class), 63, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("error" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  25 :
                        _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 26, ___uri, ___local, ___qname));
                        return ;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  28 :
                        _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 29, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText1(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  5 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "method");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText2(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  50 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  14 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText4(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  20 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("error" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  17 :
                        if (("status" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  61 :
                        state = 42;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  40 :
                        attIdx = context.getAttribute("", "uri");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  45 :
                        attIdx = context.getAttribute("", "sequence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  51 :
                        attIdx = context.getAttribute("", "intactId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  47 :
                        state = 50;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "mass");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText5(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  59 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  42 :
                        state = 47;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  62 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "error");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText6(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  25 :
                        _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromLeaveAttribute((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 26, ___uri, ___local, ___qname));
                        return ;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  8 :
                        if (("mass" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("method" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  28 :
                        _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromLeaveAttribute((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 29, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText7(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  15 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText1(v);
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "method");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText2(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  50 :
                            revertToParentFromText(value);
                            return ;
                        case  10 :
                            state = 11;
                            eatText2(value);
                            return ;
                        case  34 :
                            state = 35;
                            eatText8(value);
                            return ;
                        case  18 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 21;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  57 :
                            state = 58;
                            eatText9(value);
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  19 :
                            state = 20;
                            eatText3(value);
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  37 :
                            state = 38;
                            eatText10(value);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  31 :
                            state = 32;
                            eatText11(value);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText4(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText5(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText7(value);
                            return ;
                        case  54 :
                            state = 55;
                            eatText12(value);
                            return ;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  48 :
                            state = 49;
                            eatText13(value);
                            return ;
                        case  61 :
                            state = 42;
                            continue outer;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  40 :
                            attIdx = context.getAttribute("", "uri");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  16 :
                            state = 17;
                            eatText1(value);
                            return ;
                        case  13 :
                            state = 14;
                            eatText4(value);
                            return ;
                        case  45 :
                            attIdx = context.getAttribute("", "sequence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  51 :
                            attIdx = context.getAttribute("", "intactId");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  47 :
                            state = 50;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "mass");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText5(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  59 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  42 :
                            state = 47;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  62 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "error");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText6(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  25 :
                            _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 26, value));
                            return ;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  28 :
                            _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 29, value));
                            return ;
                        case  22 :
                            state = 23;
                            eatText14(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText6(value);
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText7(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RedoxPotential = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Experiments = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TemperatureDependence = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PhDependence = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _OrganismsDiffer = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_OrganismsDiffer = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Note = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Text = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
