//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.02.04 at 11:58:01 PST 
//


package org.uniprot.uniprot.impl;


/**
 * 
 * @hibernate.mapping auto-import="false"
 * @hibernate.class table="FeatureType"
 * 
 */
public class FeatureTypeImpl implements org.uniprot.uniprot.FeatureType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
{

    protected java.lang.String _Original;
    protected java.lang.String _Type;
    protected java.lang.String _Status;
    protected java.lang.String _Ref;
    protected java.lang.String _Description;
    protected com.sun.xml.bind.util.ListImpl _Variation = new com.sun.xml.bind.util.ListImpl(new org.uniprot.uniprot.impl.FeatureTypeImpl.VariationInternalProxyList());
    protected java.lang.String _Evidence;
    protected org.uniprot.uniprot.LocationType _Location;
    protected java.lang.String _Id;
    public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;
    private java.util.List _VariationInternal = new java.util.ArrayList();
    private java.lang.String idInternal;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.uniprot.uniprot.FeatureType.class);
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getOriginal() {
        return _Original;
    }

    public void setOriginal(java.lang.String value) {
        _Original = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getType() {
        return _Type;
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getStatus() {
        return _Status;
    }

    public void setStatus(java.lang.String value) {
        _Status = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getRef() {
        return _Ref;
    }

    public void setRef(java.lang.String value) {
        _Ref = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getDescription() {
        return _Description;
    }

    public void setDescription(java.lang.String value) {
        _Description = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getVariation() {
        if (_Variation == null) {
            _Variation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Variation;
    }

    public java.util.List getVariation() {
        return _getVariation();
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getEvidence() {
        return _Evidence;
    }

    public void setEvidence(java.lang.String value) {
        _Evidence = value;
    }

    /**
     * 
     * @hibernate.many-to-one cascade="all" class="org.uniprot.uniprot.impl.LocationTypeImpl"
     * 
     */
    public org.uniprot.uniprot.LocationType getLocation() {
        return _Location;
    }

    public void setLocation(org.uniprot.uniprot.LocationType value) {
        _Location = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
        return new org.uniprot.uniprot.impl.FeatureTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = ((_Variation == null)? 0 :_Variation.size());
        if (_Original!= null) {
            context.startElement("http://uniprot.org/uniprot", "original");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Original), "Original");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx6 != len6) {
            context.startElement("http://uniprot.org/uniprot", "variation");
            int idx_2 = idx6;
            try {
                idx_2 += 1;
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_3 = idx6;
            try {
                idx_3 += 1;
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Variation.get(idx6 ++)), "Variation");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("http://uniprot.org/uniprot", "location");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Location), "Location");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Location), "Location");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Location), "Location");
        context.endElement();
    }

    public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = ((_Variation == null)? 0 :_Variation.size());
        if (_Description!= null) {
            context.startAttribute("", "description");
            try {
                context.text(((java.lang.String) _Description), "Description");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Evidence!= null) {
            context.startAttribute("", "evidence");
            try {
                context.text(((java.lang.String) _Evidence), "Evidence");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Id!= null) {
            context.startAttribute("", "id");
            try {
                context.text(((java.lang.String) _Id), "Id");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Ref!= null) {
            context.startAttribute("", "ref");
            try {
                context.text(((java.lang.String) _Ref), "Ref");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Status!= null) {
            context.startAttribute("", "status");
            try {
                context.text(((java.lang.String) _Status), "Status");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "type");
        try {
            context.text(((java.lang.String) _Type), "Type");
        } catch (java.lang.Exception e) {
            org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx6 != len6) {
            try {
                idx6 += 1;
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
    }

    public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = ((_Variation == null)? 0 :_Variation.size());
        while (idx6 != len6) {
            try {
                idx6 += 1;
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.uniprot.uniprot.FeatureType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun."
+"msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribut"
+"esL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004n"
+"amet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.d"
+"atatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun"
+".msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.ms"
+"v.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.dataty"
+"pe.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang"
+"/String;L\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatyp"
+"e/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSch"
+"emat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor"
+"$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceP"
+"rocessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$Nul"
+"lSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.String"
+"Pair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000\"q"
+"\u0000~\u0000!sq\u0000~\u0000\rppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L"
+"\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0010xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psq\u0000~\u0000\u0016ppsr\u0000\"com.sun.m"
+"sv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\u0005QNamesr\u00005c"
+"om.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000$q\u0000~\u0000\'sq\u0000~\u0000(q\u0000~\u00000q\u0000~\u0000!sr\u0000#com.sun.msv.grammar.Simple"
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001exr\u0000"
+"\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Ex"
+"pression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0013\u0001q\u0000~\u0000:sq\u0000~\u0000"
+"4t\u0000\boriginalt\u0000\u001ahttp://uniprot.org/uniprotq\u0000~\u0000:sq\u0000~\u0000\rppsr\u0000 co"
+"m.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gra"
+"mmar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0019sq\u0000~\u0000\rppsq\u0000~\u0000+q\u0000~\u0000\u0014pq\u0000~\u0000-q\u0000~\u00006q\u0000~\u0000:sq\u0000~\u00004t\u0000\tvar"
+"iationq\u0000~\u0000>q\u0000~\u0000:sq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000@q\u0000~\u0000"
+"\u0014psq\u0000~\u0000+q\u0000~\u0000\u0014psr\u00002com.sun.msv.grammar.Expression$AnyStringEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000;q\u0000~\u0000Psr\u0000 com.sun.msv.grammar.A"
+"nyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005q\u0000~\u0000:sq\u0000~\u00004t\u0000 org.uniprot.unipro"
+"t.LocationTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elements"
+"sq\u0000~\u0000\rppsq\u0000~\u0000+q\u0000~\u0000\u0014pq\u0000~\u0000-q\u0000~\u00006q\u0000~\u0000:sq\u0000~\u00004t\u0000\blocationq\u0000~\u0000>sq\u0000"
+"~\u0000\rppsq\u0000~\u0000+q\u0000~\u0000\u0014pq\u0000~\u0000\u0019sq\u0000~\u00004t\u0000\u000bdescriptiont\u0000\u0000q\u0000~\u0000:sq\u0000~\u0000\rppsq"
+"\u0000~\u0000+q\u0000~\u0000\u0014pq\u0000~\u0000\u0019sq\u0000~\u00004t\u0000\bevidenceq\u0000~\u0000^q\u0000~\u0000:sq\u0000~\u0000\rppsq\u0000~\u0000+q\u0000~\u0000"
+"\u0014pq\u0000~\u0000\u0019sq\u0000~\u00004t\u0000\u0002idq\u0000~\u0000^q\u0000~\u0000:sq\u0000~\u0000\rppsq\u0000~\u0000+q\u0000~\u0000\u0014pq\u0000~\u0000\u0019sq\u0000~\u00004t"
+"\u0000\u0003refq\u0000~\u0000^q\u0000~\u0000:sq\u0000~\u0000\rppsq\u0000~\u0000+q\u0000~\u0000\u0014pq\u0000~\u0000\u0019sq\u0000~\u00004t\u0000\u0006statusq\u0000~\u0000^"
+"q\u0000~\u0000:sq\u0000~\u0000+ppsq\u0000~\u0000\u0016ppsr\u0000)com.sun.msv.datatype.xsd.Enumeratio"
+"nFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv."
+"datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*"
+"com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFa"
+"cetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/data"
+"type/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datat"
+"ype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001exq\u0000~\u0000\u001dq\u0000~\u0000>pq\u0000~\u0000%\u0000\u0000q\u0000~"
+"\u0000 q\u0000~\u0000 t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000"
+"@?@\u0000\u0000\u0000\u0000\u0000&t\u0000\u0010mutagenesis sitet\u0000\u0012region of interestt\u0000\u0014non-term"
+"inal residuet\u0000\u0016calcium-binding regiont\u0000\u000esplice variantt\u0000\u0012coi"
+"led-coil regiont\u0000\u0014initiator methioninet\u0000#nucleotide phosphat"
+"e-binding regiont\u0000\u000eselenocysteinet\u0000\u0012DNA-binding regiont\u0000\u0012gly"
+"cosylation sitet\u0000\u0012topological domaint\u0000\fbinding sitet\u0000\u000eunsure"
+" residuet\u0000\u0012zinc finger regiont\u0000\u0014transmembrane regiont\u0000\u0011seque"
+"nce conflictt\u0000\ncross-linkt\u0000\u0005chaint\u0000\u0006strandt\u0000\u0014short sequence "
+"motift\u0000\u0006repeatt\u0000\u0010sequence variantt\u0000\u0004turnt\u0000\u0018non-consecutive r"
+"esiduest\u0000\u0010modified residuet\u0000\u0005helixt\u0000\u0007peptidet\u0000\u000esignal peptid"
+"et\u0000\u0016metal ion-binding sitet\u0000\u001blipid moiety-binding regiont\u0000\u000ft"
+"ransit peptidet\u0000\u000edisulfide bondt\u0000\u001dcompositionally biased reg"
+"iont\u0000\u0004sitet\u0000\u0006domaint\u0000\u000bactive sitet\u0000\npropeptidexq\u0000~\u0000\'sq\u0000~\u0000(t\u0000"
+"\u000estring-derivedq\u0000~\u0000>sq\u0000~\u00004t\u0000\u0004typeq\u0000~\u0000^sr\u0000\"com.sun.msv.gramma"
+"r.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramma"
+"r/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expres"
+"sionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006par"
+"entt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0018\u0001pq\u0000~\u0000\u000bq\u0000~\u0000\u0005"
+"q\u0000~\u0000?q\u0000~\u0000Jq\u0000~\u0000Lq\u0000~\u0000Mq\u0000~\u0000\u0007q\u0000~\u0000\tq\u0000~\u0000_q\u0000~\u0000Zq\u0000~\u0000\u0015q\u0000~\u0000Dq\u0000~\u0000*q\u0000~\u0000E"
+"q\u0000~\u0000Vq\u0000~\u0000Bq\u0000~\u0000gq\u0000~\u0000\fq\u0000~\u0000cq\u0000~\u0000\nq\u0000~\u0000\u000eq\u0000~\u0000\u0006q\u0000~\u0000\bq\u0000~\u0000kx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    /**
     * 
     * @hibernate.list table="FeatureType_VariationInternal" cascade="all-delete-orphan" where="VariationInternal_index is not null"
     * @hibernate.collection-key column="FeatureTypeImpl_id"
     * @hibernate.collection-index column="VariationInternal_index"
     * @hibernate.collection-element column="value" type="java.lang.String"
     * 
     */
    public java.util.List getVariationInternal() {
        return _VariationInternal;
    }

    public void setVariationInternal(java.util.List theVariationInternal) {
        _VariationInternal = theVariationInternal;
    }

    /**
     * 
     * @hibernate.id unsaved-value="null" length="32" generator-class="uuid.hex"
     * 
     */
    public java.lang.String getIdInternal() {
        return idInternal;
    }

    public void setIdInternal(java.lang.String anId) {
        idInternal = anId;
    }

    public class Unmarshaller
        extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------");
        }

        protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.uniprot.uniprot.impl.FeatureTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        if (("original" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  24 :
                        if (("variation" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        if (("location" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 25;
                            return ;
                        }
                        break;
                    case  25 :
                        attIdx = context.getAttribute("", "sequence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("begin" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Location = ((org.uniprot.uniprot.impl.LocationTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.LocationTypeImpl.class), 26, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("position" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Location = ((org.uniprot.uniprot.impl.LocationTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.LocationTypeImpl.class), 26, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  27 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  15 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 18;
                            continue outer;
                        }
                        break;
                    case  21 :
                        if (("variation" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Status = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Description = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Evidence = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Ref = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  20 :
                        if (("original" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  26 :
                        if (("location" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  25 :
                        attIdx = context.getAttribute("", "sequence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  23 :
                        if (("variation" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  27 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  15 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 18;
                            continue outer;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  25 :
                        if (("sequence" == ___local)&&("" == ___uri)) {
                            _Location = ((org.uniprot.uniprot.impl.LocationTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.LocationTypeImpl.class), 26, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  12 :
                        if (("status" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  6 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  27 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  15 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        if (("ref" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "sequence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  17 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("status" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  8 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  27 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  15 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 18;
                            continue outer;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  11 :
                        if (("ref" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  13 :
                            eatText1(value);
                            state = 14;
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  1 :
                            eatText4(value);
                            state = 2;
                            return ;
                        case  10 :
                            eatText6(value);
                            state = 11;
                            return ;
                        case  7 :
                            eatText2(value);
                            state = 8;
                            return ;
                        case  4 :
                            eatText5(value);
                            state = 5;
                            return ;
                        case  16 :
                            eatText3(value);
                            state = 17;
                            return ;
                        case  19 :
                            eatText7(value);
                            state = 20;
                            return ;
                        case  25 :
                            attIdx = context.getAttribute("", "sequence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 15;
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  27 :
                            revertToParentFromText(value);
                            return ;
                        case  15 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 18;
                                continue outer;
                            }
                            break;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "description");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  22 :
                            eatText8(value);
                            state = 23;
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Original = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getVariation().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

    public class VariationInternalProxyList
        extends java.util.AbstractList
        implements java.io.Serializable
    {

        private final static long serialVersionUID = 3518446133701377024L;

        public java.lang.Object get(int index) {
            return _VariationInternal.get(index);
        }

        public java.lang.Object set(int index, java.lang.Object o) {
            return _VariationInternal.set(index, o);
        }

        public void add(int index, java.lang.Object o) {
            _VariationInternal.add(index, o);
        }

        public java.lang.Object remove(int index) {
            return _VariationInternal.remove(index);
        }

        public int size() {
            return _VariationInternal.size();
        }

    }

}
