//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.02.04 at 11:58:01 PST 
//


package org.uniprot.uniprot.impl;


/**
 * 
 * @hibernate.mapping auto-import="false"
 * @hibernate.class table="ProteinType"
 * 
 */
public class ProteinTypeImpl implements org.uniprot.uniprot.ProteinType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
{

    protected java.lang.String _Type;
    protected com.sun.xml.bind.util.ListImpl _Domain = new com.sun.xml.bind.util.ListImpl(new org.uniprot.uniprot.impl.ProteinTypeImpl.DomainInternalProxyList());
    protected com.sun.xml.bind.util.ListImpl _Component = new com.sun.xml.bind.util.ListImpl(new org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentInternalProxyList());
    protected java.lang.String _Evidence;
    protected com.sun.xml.bind.util.ListImpl _Name = new com.sun.xml.bind.util.ListImpl(new org.uniprot.uniprot.impl.ProteinTypeImpl.NameInternalProxyList());
    public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;
    private java.util.List _DomainInternal = new java.util.ArrayList();
    private java.util.List _ComponentInternal = new java.util.ArrayList();
    private java.util.List _NameInternal = new java.util.ArrayList();
    private java.lang.String idInternal;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.uniprot.uniprot.ProteinType.class);
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getType() {
        return _Type;
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getDomain() {
        if (_Domain == null) {
            _Domain = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Domain;
    }

    public java.util.List getDomain() {
        return _getDomain();
    }

    protected com.sun.xml.bind.util.ListImpl _getComponent() {
        if (_Component == null) {
            _Component = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Component;
    }

    public java.util.List getComponent() {
        return _getComponent();
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getEvidence() {
        return _Evidence;
    }

    public void setEvidence(java.lang.String value) {
        _Evidence = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getName() {
        if (_Name == null) {
            _Name = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Name;
    }

    public java.util.List getName() {
        return _getName();
    }

    public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
        return new org.uniprot.uniprot.impl.ProteinTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Domain == null)? 0 :_Domain.size());
        int idx3 = 0;
        final int len3 = ((_Component == null)? 0 :_Component.size());
        int idx5 = 0;
        final int len5 = ((_Name == null)? 0 :_Name.size());
        while (idx5 != len5) {
            context.startElement("http://uniprot.org/uniprot", "name");
            int idx_0 = idx5;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name.get(idx_0 ++)), "Name");
            context.endNamespaceDecls();
            int idx_1 = idx5;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name.get(idx_1 ++)), "Name");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name.get(idx5 ++)), "Name");
            context.endElement();
        }
        while (idx2 != len2) {
            context.startElement("http://uniprot.org/uniprot", "domain");
            int idx_2 = idx2;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Domain.get(idx_2 ++)), "Domain");
            context.endNamespaceDecls();
            int idx_3 = idx2;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Domain.get(idx_3 ++)), "Domain");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Domain.get(idx2 ++)), "Domain");
            context.endElement();
        }
        while (idx3 != len3) {
            context.startElement("http://uniprot.org/uniprot", "component");
            int idx_4 = idx3;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Component.get(idx_4 ++)), "Component");
            context.endNamespaceDecls();
            int idx_5 = idx3;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Component.get(idx_5 ++)), "Component");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Component.get(idx3 ++)), "Component");
            context.endElement();
        }
    }

    public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Domain == null)? 0 :_Domain.size());
        int idx3 = 0;
        final int len3 = ((_Component == null)? 0 :_Component.size());
        int idx5 = 0;
        final int len5 = ((_Name == null)? 0 :_Name.size());
        if (_Evidence!= null) {
            context.startAttribute("", "evidence");
            try {
                context.text(((java.lang.String) _Evidence), "Evidence");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Type!= null) {
            context.startAttribute("", "type");
            try {
                context.text(((java.lang.String) _Type), "Type");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx5 != len5) {
            idx5 += 1;
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
        while (idx3 != len3) {
            idx3 += 1;
        }
    }

    public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Domain == null)? 0 :_Domain.size());
        int idx3 = 0;
        final int len3 = ((_Component == null)? 0 :_Component.size());
        int idx5 = 0;
        final int len5 = ((_Name == null)? 0 :_Name.size());
        while (idx5 != len5) {
            idx5 += 1;
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
        while (idx3 != len3) {
            idx3 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.uniprot.uniprot.ProteinType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv."
+"grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Unary"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.grammar.tre"
+"x.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gramm"
+"ar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000"
+"\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0001ppsq\u0000~\u0000\tsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 c"
+"om.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tname"
+"Classq\u0000~\u0000\rxq\u0000~\u0000\u0003q\u0000~\u0000\u0016psr\u00002com.sun.msv.grammar.Expression$Any"
+"StringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0015\u0001q\u0000~\u0000\u001asr\u0000 com.sun.msv"
+".grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.Name"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Epsilon"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.sun.msv.grammar"
+".SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;"
+"L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000#org.uniprot.uniprot.ProteinName"
+"Typet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0012ppsq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u0016psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd"
+".QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAto"
+"micType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\"L\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhiteSpacet\u0000.Lcom"
+"/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3"
+".org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar."
+"Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.m"
+"sv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\"L\u0000\fnamespaceUR"
+"Iq\u0000~\u0000\"xpq\u0000~\u00003q\u0000~\u00002sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://www.w3.org/2001/XML"
+"Schema-instanceq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0004namet\u0000\u001ahttp://uniprot.org/unipr"
+"otsq\u0000~\u0000\u0012ppsq\u0000~\u0000\tq\u0000~\u0000\u0016psq\u0000~\u0000\fq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0012pp"
+"sq\u0000~\u0000\tq\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000*org.uniprot."
+"uniprot.ProteinType.DomainTypeq\u0000~\u0000%sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq\u0000~\u0000+"
+"q\u0000~\u0000;q\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0006domainq\u0000~\u0000@q\u0000~\u0000 sq\u0000~\u0000\u0012ppsq\u0000~\u0000\tq\u0000~\u0000\u0016psq\u0000~\u0000"
+"\fq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\tq\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq\u0000~"
+"\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-org.uniprot.uniprot.ProteinType.Compone"
+"ntTypeq\u0000~\u0000%sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq\u0000~\u0000+q\u0000~\u0000;q\u0000~\u0000 sq\u0000~\u0000!t\u0000\tcompo"
+"nentq\u0000~\u0000@q\u0000~\u0000 sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016psq\u0000~\u0000(ppsr\u0000#com.sun.msv.da"
+"tatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000-q\u0000~\u00002t"
+"\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pre"
+"serve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005\u0001q\u0000~\u00008sq\u0000~\u00009q\u0000~\u0000bq\u0000~\u00002sq\u0000~\u0000!t\u0000\bevidenc"
+"et\u0000\u0000q\u0000~\u0000 sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016psq\u0000~\u0000(ppsr\u0000)com.sun.msv.datatyp"
+"e.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;"
+"xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFace"
+"t\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)L"
+"com/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lc"
+"om/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\"xq\u0000~\u0000/"
+"q\u0000~\u0000@pq\u0000~\u00006\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.NmtokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000`q"
+"\u0000~\u00002t\u0000\u0007NMTOKENq\u0000~\u00006\u0000q\u0000~\u0000ut\u0000\u000benumerationsr\u0000\u0011java.util.HashSet"
+"\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\bversion2t\u0000\bfragmentt\u0000\tfragment"
+"st\u0000\bversion1xq\u0000~\u00008sq\u0000~\u00009t\u0000\u000fNMTOKEN-derivedq\u0000~\u0000@sq\u0000~\u0000!t\u0000\u0004type"
+"q\u0000~\u0000hq\u0000~\u0000 sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;"
+"xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003"
+"\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/E"
+"xpressionPool;xp\u0000\u0000\u0000\u0017\u0001pq\u0000~\u0000\u0010q\u0000~\u0000Dq\u0000~\u0000Rq\u0000~\u0000iq\u0000~\u0000\u0013q\u0000~\u0000Fq\u0000~\u0000Tq\u0000~"
+"\u0000\u0014q\u0000~\u0000Gq\u0000~\u0000Uq\u0000~\u0000\bq\u0000~\u0000\u0006q\u0000~\u0000&q\u0000~\u0000Kq\u0000~\u0000Yq\u0000~\u0000\u0007q\u0000~\u0000\u0005q\u0000~\u0000Aq\u0000~\u0000\u000bq\u0000~"
+"\u0000Bq\u0000~\u0000Pq\u0000~\u0000Oq\u0000~\u0000]x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    /**
     * 
     * @hibernate.list table="ProteinType_DomainInternal" cascade="all-delete-orphan" where="DomainInternal_index is not null"
     * @hibernate.collection-key column="ProteinTypeImpl_id"
     * @hibernate.collection-index column="DomainInternal_index"
     * @hibernate.collection-one-to-many class="org.uniprot.uniprot.impl.ProteinTypeImpl$DomainTypeImpl"
     * 
     */
    public java.util.List getDomainInternal() {
        return _DomainInternal;
    }

    public void setDomainInternal(java.util.List theDomainInternal) {
        _DomainInternal = theDomainInternal;
    }

    /**
     * 
     * @hibernate.list table="ProteinType_ComponentInternal" cascade="all-delete-orphan" where="ComponentInternal_index is not null"
     * @hibernate.collection-key column="ProteinTypeImpl_id"
     * @hibernate.collection-index column="ComponentInternal_index"
     * @hibernate.collection-one-to-many class="org.uniprot.uniprot.impl.ProteinTypeImpl$ComponentTypeImpl"
     * 
     */
    public java.util.List getComponentInternal() {
        return _ComponentInternal;
    }

    public void setComponentInternal(java.util.List theComponentInternal) {
        _ComponentInternal = theComponentInternal;
    }

    /**
     * 
     * @hibernate.list table="ProteinType_NameInternal" cascade="all-delete-orphan" where="NameInternal_index is not null"
     * @hibernate.collection-key column="ProteinTypeImpl_id"
     * @hibernate.collection-index column="NameInternal_index"
     * @hibernate.collection-one-to-many class="org.uniprot.uniprot.impl.ProteinNameTypeImpl"
     * 
     */
    public java.util.List getNameInternal() {
        return _NameInternal;
    }

    public void setNameInternal(java.util.List theNameInternal) {
        _NameInternal = theNameInternal;
    }

    /**
     * 
     * @hibernate.id unsaved-value="null" length="32" generator-class="uuid.hex"
     * 
     */
    public java.lang.String getIdInternal() {
        return idInternal;
    }

    public void setIdInternal(java.lang.String anId) {
        idInternal = anId;
    }

    public class ComponentInternalProxyList
        extends java.util.AbstractList
        implements java.io.Serializable
    {

        private final static long serialVersionUID = 767253227933923328L;

        public java.lang.Object get(int index) {
            return _ComponentInternal.get(index);
        }

        public java.lang.Object set(int index, java.lang.Object o) {
            return _ComponentInternal.set(index, o);
        }

        public void add(int index, java.lang.Object o) {
            _ComponentInternal.add(index, o);
        }

        public java.lang.Object remove(int index) {
            return _ComponentInternal.remove(index);
        }

        public int size() {
            return _ComponentInternal.size();
        }

    }


    /**
     * 
     * @hibernate.mapping auto-import="false"
     * @hibernate.class table="ProteinType$ComponentType"
     * 
     */
    public static class ComponentTypeImpl implements org.uniprot.uniprot.ProteinType.ComponentType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Name = new com.sun.xml.bind.util.ListImpl(new org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.NameInternalProxyList());
        public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;
        private java.util.List _NameInternal = new java.util.ArrayList();
        private java.lang.String idInternal;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.uniprot.uniprot.ProteinType.ComponentType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getName() {
            if (_Name == null) {
                _Name = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Name;
        }

        public java.util.List getName() {
            return _getName();
        }

        public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            return new org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Name == null)? 0 :_Name.size());
            while (idx1 != len1) {
                context.startElement("http://uniprot.org/uniprot", "name");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name.get(idx_0 ++)), "Name");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name.get(idx_1 ++)), "Name");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name.get(idx1 ++)), "Name");
                context.endElement();
            }
        }

        public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Name == null)? 0 :_Name.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Name == null)? 0 :_Name.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.uniprot.uniprot.ProteinType.ComponentType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000#org"
+".uniprot.uniprot.ProteinNameTypet\u0000+http://java.sun.com/jaxb/"
+"xjc/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.gramma"
+"r.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L"
+"\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003pp"
+"sr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun"
+".msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.ms"
+"v.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.dataty"
+"pe.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeN"
+"ameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpace"
+"Processor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005c"
+"om.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\t"
+"localNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet"
+"\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0004nam"
+"et\u0000\u001ahttp://uniprot.org/uniprotsr\u0000\"com.sun.msv.grammar.Expres"
+"sionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expres"
+"sionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool"
+"$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lc"
+"om/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\fq\u0000~\u0000\u000fq\u0000~\u0000\u0010q\u0000~"
+"\u0000\"q\u0000~\u0000\u0005x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        /**
         * 
         * @hibernate.list table="ProteinType$ComponentType_NameInternal" cascade="all-delete-orphan" where="NameInternal_index is not null"
         * @hibernate.collection-key column="ComponentTypeImpl_id"
         * @hibernate.collection-index column="NameInternal_index"
         * @hibernate.collection-one-to-many class="org.uniprot.uniprot.impl.ProteinNameTypeImpl"
         * 
         */
        public java.util.List getNameInternal() {
            return _NameInternal;
        }

        public void setNameInternal(java.util.List theNameInternal) {
            _NameInternal = theNameInternal;
        }

        /**
         * 
         * @hibernate.id unsaved-value="null" length="32" generator-class="uuid.hex"
         * 
         */
        public java.lang.String getIdInternal() {
            return idInternal;
        }

        public void setIdInternal(java.lang.String anId) {
            idInternal = anId;
        }

        public class NameInternalProxyList
            extends java.util.AbstractList
            implements java.io.Serializable
        {

            private final static long serialVersionUID = 1084180574079287296L;

            public java.lang.Object get(int index) {
                return _NameInternal.get(index);
            }

            public java.lang.Object set(int index, java.lang.Object o) {
                return _NameInternal.set(index, o);
            }

            public void add(int index, java.lang.Object o) {
                _NameInternal.add(index, o);
            }

            public java.lang.Object remove(int index) {
                return _NameInternal.remove(index);
            }

            public int size() {
                return _NameInternal.size();
            }

        }

        public class Unmarshaller
            extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  2 :
                            if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            if (("evidence" == ___local)&&("" == ___uri)) {
                                _getName().add(((org.uniprot.uniprot.impl.ProteinNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                return ;
                            }
                            if (("ref" == ___local)&&("" == ___uri)) {
                                _getName().add(((org.uniprot.uniprot.impl.ProteinNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                attIdx = context.getAttribute("", "evidence");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "ref");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _getName().add(((org.uniprot.uniprot.impl.ProteinNameTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.ProteinNameTypeImpl.class), 2, value)));
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class DomainInternalProxyList
        extends java.util.AbstractList
        implements java.io.Serializable
    {

        private final static long serialVersionUID = 3740665464766430208L;

        public java.lang.Object get(int index) {
            return _DomainInternal.get(index);
        }

        public java.lang.Object set(int index, java.lang.Object o) {
            return _DomainInternal.set(index, o);
        }

        public void add(int index, java.lang.Object o) {
            _DomainInternal.add(index, o);
        }

        public java.lang.Object remove(int index) {
            return _DomainInternal.remove(index);
        }

        public int size() {
            return _DomainInternal.size();
        }

    }


    /**
     * 
     * @hibernate.mapping auto-import="false"
     * @hibernate.class table="ProteinType$DomainType"
     * 
     */
    public static class DomainTypeImpl implements org.uniprot.uniprot.ProteinType.DomainType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Name = new com.sun.xml.bind.util.ListImpl(new org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.NameInternalProxyList());
        public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;
        private java.util.List _NameInternal = new java.util.ArrayList();
        private java.lang.String idInternal;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.uniprot.uniprot.ProteinType.DomainType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getName() {
            if (_Name == null) {
                _Name = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Name;
        }

        public java.util.List getName() {
            return _getName();
        }

        public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            return new org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Name == null)? 0 :_Name.size());
            while (idx1 != len1) {
                context.startElement("http://uniprot.org/uniprot", "name");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name.get(idx_0 ++)), "Name");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name.get(idx_1 ++)), "Name");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name.get(idx1 ++)), "Name");
                context.endElement();
            }
        }

        public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Name == null)? 0 :_Name.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Name == null)? 0 :_Name.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.uniprot.uniprot.ProteinType.DomainType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000#org"
+".uniprot.uniprot.ProteinNameTypet\u0000+http://java.sun.com/jaxb/"
+"xjc/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.gramma"
+"r.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L"
+"\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003pp"
+"sr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun"
+".msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.ms"
+"v.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.dataty"
+"pe.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeN"
+"ameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpace"
+"Processor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005c"
+"om.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\t"
+"localNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet"
+"\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0004nam"
+"et\u0000\u001ahttp://uniprot.org/uniprotsr\u0000\"com.sun.msv.grammar.Expres"
+"sionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expres"
+"sionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool"
+"$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lc"
+"om/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\fq\u0000~\u0000\u000fq\u0000~\u0000\u0010q\u0000~"
+"\u0000\"q\u0000~\u0000\u0005x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        /**
         * 
         * @hibernate.list table="ProteinType$DomainType_NameInternal" cascade="all-delete-orphan" where="NameInternal_index is not null"
         * @hibernate.collection-key column="DomainTypeImpl_id"
         * @hibernate.collection-index column="NameInternal_index"
         * @hibernate.collection-one-to-many class="org.uniprot.uniprot.impl.ProteinNameTypeImpl"
         * 
         */
        public java.util.List getNameInternal() {
            return _NameInternal;
        }

        public void setNameInternal(java.util.List theNameInternal) {
            _NameInternal = theNameInternal;
        }

        /**
         * 
         * @hibernate.id unsaved-value="null" length="32" generator-class="uuid.hex"
         * 
         */
        public java.lang.String getIdInternal() {
            return idInternal;
        }

        public void setIdInternal(java.lang.String anId) {
            idInternal = anId;
        }

        public class NameInternalProxyList
            extends java.util.AbstractList
            implements java.io.Serializable
        {

            private final static long serialVersionUID = 4297839412545173504L;

            public java.lang.Object get(int index) {
                return _NameInternal.get(index);
            }

            public java.lang.Object set(int index, java.lang.Object o) {
                return _NameInternal.set(index, o);
            }

            public void add(int index, java.lang.Object o) {
                _NameInternal.add(index, o);
            }

            public java.lang.Object remove(int index) {
                return _NameInternal.remove(index);
            }

            public int size() {
                return _NameInternal.size();
            }

        }

        public class Unmarshaller
            extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  2 :
                            if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            if (("evidence" == ___local)&&("" == ___uri)) {
                                _getName().add(((org.uniprot.uniprot.impl.ProteinNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                return ;
                            }
                            if (("ref" == ___local)&&("" == ___uri)) {
                                _getName().add(((org.uniprot.uniprot.impl.ProteinNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                attIdx = context.getAttribute("", "evidence");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "ref");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _getName().add(((org.uniprot.uniprot.impl.ProteinNameTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.ProteinNameTypeImpl.class), 2, value)));
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class NameInternalProxyList
        extends java.util.AbstractList
        implements java.io.Serializable
    {

        private final static long serialVersionUID = 7984684307471056896L;

        public java.lang.Object get(int index) {
            return _NameInternal.get(index);
        }

        public java.lang.Object set(int index, java.lang.Object o) {
            return _NameInternal.set(index, o);
        }

        public void add(int index, java.lang.Object o) {
            _NameInternal.add(index, o);
        }

        public java.lang.Object remove(int index) {
            return _NameInternal.remove(index);
        }

        public int size() {
            return _NameInternal.size();
        }

    }

    public class Unmarshaller
        extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------");
        }

        protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.uniprot.uniprot.impl.ProteinTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  13 :
                        if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 14, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        if (("domain" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  10 :
                        if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  12 :
                        if (("domain" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        if (("component" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  15 :
                        if (("component" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Evidence = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  11 :
                        if (("domain" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  8 :
                        if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  14 :
                        if (("component" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _getName().add(((org.uniprot.uniprot.impl.ProteinNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameTypeImpl.class), 8, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("ref" == ___local)&&("" == ___uri)) {
                            _getName().add(((org.uniprot.uniprot.impl.ProteinNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameTypeImpl.class), 8, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  5 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  2 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  7 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getName().add(((org.uniprot.uniprot.impl.ProteinNameTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.ProteinNameTypeImpl.class), 8, value)));
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  4 :
                            eatText1(value);
                            state = 5;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  1 :
                            eatText2(value);
                            state = 2;
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  15 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
