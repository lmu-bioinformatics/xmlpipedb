<project name="xmlpipedbutils" default="jar">
    <property name="component.jarfilename" value="xpdUtils" />
    <property name="demo.jarfilename" value="xpdUtilsDemoApp" />
    <property name="mainclass" value="edu.lmu.xmlpipedb.util.demo.XmlPipeDbUtils" />
    <property name="resources" value="edu/lmu/xmlpipedb/util/resources" />
    <property name="project.title" value="GUI to XML Pipe DB" />
    <property name="src.dir" value="src" />
	<property name="src.demo.dir" value="edu/lmu/xmlpipedb/util/demo" />
	<property name="scripts.dir" value="scripts" />
    <property name="lib.dir" value="lib" />
    <property name="build.dir" value="build" />
    <property name="dist.dir" value="dist" />
    <property name="javadoc.dir" value="javadocs" />

    <fileset id="lib.jars" dir="${lib.dir}">
        <include name="**/*.jar" />
    </fileset>

    <path id="lib.path">
        <fileset refid="lib.jars" />
    </path>

    <path id="run.path">
        <fileset refid="lib.jars" />
        <fileset dir="${dist.dir}">
            <include name="xpdUtils.jar" />
       </fileset>
        <fileset dir="sample/lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <target name="clean" description="Remove generated files">
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
        <delete dir="${javadoc.dir}" />
    </target>

    <target name="init">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${dist.dir}" />
        <tstamp />
    </target>

    <target name="javadoc" description="Generate JavaDocs" depends="compile">
        <delete dir="${javadoc.dir}" />
        <mkdir dir="${javadoc.dir}" />
        <javadoc sourcepath="${src.dir}" destdir="${javadoc.dir}" packagenames="*" doctitle="&lt;h1&gt;${project.title} API Documentation&lt;/h1&gt;" />
    </target>

    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.path" />
        
   	
    	<!-- Copy the resource file, since it is needed at runtime. -->
        <copy todir="${build.dir}/${resources}">
            <fileset dir="${src.dir}/${resources}" includes="**/*.properties" />
        </copy>
    </target>

    <target name="jar" depends="compile" description="Makes a jar file for the application">
    	<!-- Copy other libraries and the run scripts (.bat and .sh files) -->
        <copy todir="${dist.dir}/lib">
            <fileset dir="${lib.dir}/" includes="**/*.jar,**/*.properties" />
        </copy>
        <copy todir="${dist.dir}">
            <fileset dir="${scripts.dir}" includes="*.bat,*.sh" />
        </copy>
    	
    	<!-- Copy compiled component classes to new folder, jar it and copy to dist -->
    	<mkdir dir="${build.dir}/components" />
    	<copy todir="${build.dir}/components/edu">
    		<fileset dir="${build.dir}/edu" includes="**/*.*"></fileset>
    	</copy>
    	<delete dir="${build.dir}/components/${src.demo.dir}" />
    	<jar destfile="${dist.dir}/lib/${component.jarfilename}.jar" 
    		basedir="${build.dir}/components" excludes="**/*Tester*.class,**/*.java">
        </jar>

    	
    	<!-- Copy compiled demo app to new folder, jar it and copy to dist -->
    	<mkdir dir="${build.dir}/demo" />
    	<copy todir="${build.dir}/demo">
    		<fileset dir="${build.dir}/${src.demo.dir}" includes="**/*.*"></fileset>
    	</copy>
    	<jar destfile="${dist.dir}/${demo.jarfilename}.jar" 
    		basedir="${build.dir}/demo" excludes="**/*Tester*.class,**/*.java">
            <manifest>
                <attribute name="Main-Class" value="${mainclass}" />
            </manifest>
        </jar>

    	
    </target>

    <target name="run" depends="jar" description="Runs the demo application">
        <java classname="edu.lmu.xmlpipedb.util.app.XmlPipeDbUtils" fork="true" failonerror="false" classpathref="run.path" />
    </target>

    <target name="all" depends="clean, javadoc, jar" description="Initializes, Compiles, makes Jar and creates JavaDocs" />
</project>
