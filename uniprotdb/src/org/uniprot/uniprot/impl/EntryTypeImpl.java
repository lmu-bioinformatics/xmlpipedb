//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-09/29/2005 11:56 AM(valikov)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.10.31 at 01:32:53 AM PDT 
//


package org.uniprot.uniprot.impl;

public class EntryTypeImpl implements org.uniprot.uniprot.EntryType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
{

    protected java.util.Calendar _Modified;
    protected com.sun.xml.bind.util.ListImpl _OrganismHost;
    protected com.sun.xml.bind.util.ListImpl _Comment;
    protected com.sun.xml.bind.util.ListImpl _Feature;
    protected com.sun.xml.bind.util.ListImpl _Keyword;
    protected com.sun.xml.bind.util.ListImpl _DbReference;
    protected com.sun.xml.bind.util.ListImpl _Reference;
    protected org.uniprot.uniprot.SequenceType _Sequence;
    protected com.sun.xml.bind.util.ListImpl _Accession;
    protected com.sun.xml.bind.util.ListImpl _Gene;
    protected java.math.BigInteger _Version;
    protected org.uniprot.uniprot.ProteinExistenceType _ProteinExistence;
    protected java.lang.String _Dataset;
    protected com.sun.xml.bind.util.ListImpl _Evidence;
    protected com.sun.xml.bind.util.ListImpl _GeneLocation;
    protected java.util.Calendar _Created;
    protected com.sun.xml.bind.util.ListImpl _Name;
    protected org.uniprot.uniprot.ProteinType _Protein;
    protected com.sun.xml.bind.util.ListImpl _Organism;
    public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;
    protected java.lang.Long _Hjid;
    protected java.lang.Long _Hjversion;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.uniprot.uniprot.EntryType.class);
    }

    public java.util.Calendar getModified() {
        return _Modified;
    }

    public void setModified(java.util.Calendar value) {
        _Modified = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getOrganismHost() {
        if (_OrganismHost == null) {
            _OrganismHost = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _OrganismHost;
    }

    public java.util.List getOrganismHost() {
        return _getOrganismHost();
    }

    protected com.sun.xml.bind.util.ListImpl _getComment() {
        if (_Comment == null) {
            _Comment = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Comment;
    }

    public java.util.List getComment() {
        return _getComment();
    }

    protected com.sun.xml.bind.util.ListImpl _getFeature() {
        if (_Feature == null) {
            _Feature = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Feature;
    }

    public java.util.List getFeature() {
        return _getFeature();
    }

    protected com.sun.xml.bind.util.ListImpl _getKeyword() {
        if (_Keyword == null) {
            _Keyword = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Keyword;
    }

    public java.util.List getKeyword() {
        return _getKeyword();
    }

    protected com.sun.xml.bind.util.ListImpl _getDbReference() {
        if (_DbReference == null) {
            _DbReference = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _DbReference;
    }

    public java.util.List getDbReference() {
        return _getDbReference();
    }

    protected com.sun.xml.bind.util.ListImpl _getReference() {
        if (_Reference == null) {
            _Reference = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Reference;
    }

    public java.util.List getReference() {
        return _getReference();
    }

    public org.uniprot.uniprot.SequenceType getSequence() {
        return _Sequence;
    }

    public void setSequence(org.uniprot.uniprot.SequenceType value) {
        _Sequence = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getAccession() {
        if (_Accession == null) {
            _Accession = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Accession;
    }

    public java.util.List getAccession() {
        return _getAccession();
    }

    protected com.sun.xml.bind.util.ListImpl _getGene() {
        if (_Gene == null) {
            _Gene = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Gene;
    }

    public java.util.List getGene() {
        return _getGene();
    }

    public java.math.BigInteger getVersion() {
        return _Version;
    }

    public void setVersion(java.math.BigInteger value) {
        _Version = value;
    }

    public org.uniprot.uniprot.ProteinExistenceType getProteinExistence() {
        return _ProteinExistence;
    }

    public void setProteinExistence(org.uniprot.uniprot.ProteinExistenceType value) {
        _ProteinExistence = value;
    }

    public java.lang.String getDataset() {
        return _Dataset;
    }

    public void setDataset(java.lang.String value) {
        _Dataset = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getEvidence() {
        if (_Evidence == null) {
            _Evidence = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Evidence;
    }

    public java.util.List getEvidence() {
        return _getEvidence();
    }

    protected com.sun.xml.bind.util.ListImpl _getGeneLocation() {
        if (_GeneLocation == null) {
            _GeneLocation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _GeneLocation;
    }

    public java.util.List getGeneLocation() {
        return _getGeneLocation();
    }

    public java.util.Calendar getCreated() {
        return _Created;
    }

    public void setCreated(java.util.Calendar value) {
        _Created = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getName() {
        if (_Name == null) {
            _Name = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Name;
    }

    public java.util.List getName() {
        return _getName();
    }

    public org.uniprot.uniprot.ProteinType getProtein() {
        return _Protein;
    }

    public void setProtein(org.uniprot.uniprot.ProteinType value) {
        _Protein = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getOrganism() {
        if (_Organism == null) {
            _Organism = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Organism;
    }

    public java.util.List getOrganism() {
        return _getOrganism();
    }

    public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
        return new org.uniprot.uniprot.impl.EntryTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_OrganismHost == null)? 0 :_OrganismHost.size());
        int idx3 = 0;
        final int len3 = ((_Comment == null)? 0 :_Comment.size());
        int idx4 = 0;
        final int len4 = ((_Feature == null)? 0 :_Feature.size());
        int idx5 = 0;
        final int len5 = ((_Keyword == null)? 0 :_Keyword.size());
        int idx6 = 0;
        final int len6 = ((_DbReference == null)? 0 :_DbReference.size());
        int idx7 = 0;
        final int len7 = ((_Reference == null)? 0 :_Reference.size());
        int idx9 = 0;
        final int len9 = ((_Accession == null)? 0 :_Accession.size());
        int idx10 = 0;
        final int len10 = ((_Gene == null)? 0 :_Gene.size());
        int idx14 = 0;
        final int len14 = ((_Evidence == null)? 0 :_Evidence.size());
        int idx15 = 0;
        final int len15 = ((_GeneLocation == null)? 0 :_GeneLocation.size());
        int idx17 = 0;
        final int len17 = ((_Name == null)? 0 :_Name.size());
        int idx19 = 0;
        final int len19 = ((_Organism == null)? 0 :_Organism.size());
        while (idx9 != len9) {
            context.startElement("http://uniprot.org/uniprot", "accession");
            int idx_0 = idx9;
            try {
                idx_0 += 1;
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_1 = idx9;
            try {
                idx_1 += 1;
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Accession.get(idx9 ++)), "Accession");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx17 != len17) {
            context.startElement("http://uniprot.org/uniprot", "name");
            int idx_2 = idx17;
            try {
                idx_2 += 1;
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_3 = idx17;
            try {
                idx_3 += 1;
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Name.get(idx17 ++)), "Name");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("http://uniprot.org/uniprot", "protein");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Protein), "Protein");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Protein), "Protein");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Protein), "Protein");
        context.endElement();
        while (idx10 != len10) {
            context.startElement("http://uniprot.org/uniprot", "gene");
            int idx_6 = idx10;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Gene.get(idx_6 ++)), "Gene");
            context.endNamespaceDecls();
            int idx_7 = idx10;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Gene.get(idx_7 ++)), "Gene");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Gene.get(idx10 ++)), "Gene");
            context.endElement();
        }
        while (idx19 != len19) {
            context.startElement("http://uniprot.org/uniprot", "organism");
            int idx_8 = idx19;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Organism.get(idx_8 ++)), "Organism");
            context.endNamespaceDecls();
            int idx_9 = idx19;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Organism.get(idx_9 ++)), "Organism");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Organism.get(idx19 ++)), "Organism");
            context.endElement();
        }
        while (idx2 != len2) {
            context.startElement("http://uniprot.org/uniprot", "organismHost");
            int idx_10 = idx2;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OrganismHost.get(idx_10 ++)), "OrganismHost");
            context.endNamespaceDecls();
            int idx_11 = idx2;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OrganismHost.get(idx_11 ++)), "OrganismHost");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _OrganismHost.get(idx2 ++)), "OrganismHost");
            context.endElement();
        }
        while (idx15 != len15) {
            context.startElement("http://uniprot.org/uniprot", "geneLocation");
            int idx_12 = idx15;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _GeneLocation.get(idx_12 ++)), "GeneLocation");
            context.endNamespaceDecls();
            int idx_13 = idx15;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _GeneLocation.get(idx_13 ++)), "GeneLocation");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _GeneLocation.get(idx15 ++)), "GeneLocation");
            context.endElement();
        }
        while (idx7 != len7) {
            context.startElement("http://uniprot.org/uniprot", "reference");
            int idx_14 = idx7;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Reference.get(idx_14 ++)), "Reference");
            context.endNamespaceDecls();
            int idx_15 = idx7;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Reference.get(idx_15 ++)), "Reference");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Reference.get(idx7 ++)), "Reference");
            context.endElement();
        }
        while (idx3 != len3) {
            context.startElement("http://uniprot.org/uniprot", "comment");
            int idx_16 = idx3;
            if (_Comment.get(idx_16) == null) {
                context.getNamespaceContext().declareNamespace("http://www.w3.org/2001/XMLSchema-instance", null, true);
                try {
                    idx_16 += 1;
                } catch (java.lang.Exception e) {
                    org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            } else {
                if (_Comment.get(idx_16) instanceof org.uniprot.uniprot.CommentType) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Comment.get(idx_16 ++)), "Comment");
                } else {
                    org.uniprot.uniprot.impl.runtime.Util.handleTypeMismatchError(context, this, "Comment", _Comment.get(idx_16));
                }
            }
            context.endNamespaceDecls();
            int idx_17 = idx3;
            if (_Comment.get(idx_17) == null) {
                context.startAttribute("http://www.w3.org/2001/XMLSchema-instance", "nil");
                try {
                    context.text("true", "Comment");
                } catch (java.lang.Exception e) {
                    org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            } else {
                if (_Comment.get(idx_17) instanceof org.uniprot.uniprot.CommentType) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Comment.get(idx_17 ++)), "Comment");
                } else {
                    org.uniprot.uniprot.impl.runtime.Util.handleTypeMismatchError(context, this, "Comment", _Comment.get(idx_17));
                }
            }
            context.endAttributes();
            if (!(_Comment.get(idx3) == null)) {
                if (_Comment.get(idx3) instanceof org.uniprot.uniprot.CommentType) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Comment.get(idx3 ++)), "Comment");
                } else {
                    org.uniprot.uniprot.impl.runtime.Util.handleTypeMismatchError(context, this, "Comment", _Comment.get(idx3));
                }
            }
            context.endElement();
        }
        while (idx6 != len6) {
            context.startElement("http://uniprot.org/uniprot", "dbReference");
            int idx_18 = idx6;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DbReference.get(idx_18 ++)), "DbReference");
            context.endNamespaceDecls();
            int idx_19 = idx6;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DbReference.get(idx_19 ++)), "DbReference");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DbReference.get(idx6 ++)), "DbReference");
            context.endElement();
        }
        context.startElement("http://uniprot.org/uniprot", "proteinExistence");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ProteinExistence), "ProteinExistence");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ProteinExistence), "ProteinExistence");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _ProteinExistence), "ProteinExistence");
        context.endElement();
        while (idx5 != len5) {
            context.startElement("http://uniprot.org/uniprot", "keyword");
            int idx_22 = idx5;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Keyword.get(idx_22 ++)), "Keyword");
            context.endNamespaceDecls();
            int idx_23 = idx5;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Keyword.get(idx_23 ++)), "Keyword");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Keyword.get(idx5 ++)), "Keyword");
            context.endElement();
        }
        while (idx4 != len4) {
            context.startElement("http://uniprot.org/uniprot", "feature");
            int idx_24 = idx4;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Feature.get(idx_24 ++)), "Feature");
            context.endNamespaceDecls();
            int idx_25 = idx4;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Feature.get(idx_25 ++)), "Feature");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Feature.get(idx4 ++)), "Feature");
            context.endElement();
        }
        while (idx14 != len14) {
            context.startElement("http://uniprot.org/uniprot", "evidence");
            int idx_26 = idx14;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Evidence.get(idx_26 ++)), "Evidence");
            context.endNamespaceDecls();
            int idx_27 = idx14;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Evidence.get(idx_27 ++)), "Evidence");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Evidence.get(idx14 ++)), "Evidence");
            context.endElement();
        }
        context.startElement("http://uniprot.org/uniprot", "sequence");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Sequence), "Sequence");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Sequence), "Sequence");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Sequence), "Sequence");
        context.endElement();
    }

    public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_OrganismHost == null)? 0 :_OrganismHost.size());
        int idx3 = 0;
        final int len3 = ((_Comment == null)? 0 :_Comment.size());
        int idx4 = 0;
        final int len4 = ((_Feature == null)? 0 :_Feature.size());
        int idx5 = 0;
        final int len5 = ((_Keyword == null)? 0 :_Keyword.size());
        int idx6 = 0;
        final int len6 = ((_DbReference == null)? 0 :_DbReference.size());
        int idx7 = 0;
        final int len7 = ((_Reference == null)? 0 :_Reference.size());
        int idx9 = 0;
        final int len9 = ((_Accession == null)? 0 :_Accession.size());
        int idx10 = 0;
        final int len10 = ((_Gene == null)? 0 :_Gene.size());
        int idx14 = 0;
        final int len14 = ((_Evidence == null)? 0 :_Evidence.size());
        int idx15 = 0;
        final int len15 = ((_GeneLocation == null)? 0 :_GeneLocation.size());
        int idx17 = 0;
        final int len17 = ((_Name == null)? 0 :_Name.size());
        int idx19 = 0;
        final int len19 = ((_Organism == null)? 0 :_Organism.size());
        context.startAttribute("", "created");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _Created)), "Created");
        } catch (java.lang.Exception e) {
            org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "dataset");
        try {
            context.text(((java.lang.String) _Dataset), "Dataset");
        } catch (java.lang.Exception e) {
            org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "modified");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _Modified)), "Modified");
        } catch (java.lang.Exception e) {
            org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "version");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Version)), "Version");
        } catch (java.lang.Exception e) {
            org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx9 != len9) {
            try {
                idx9 += 1;
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx17 != len17) {
            try {
                idx17 += 1;
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx10 != len10) {
            idx10 += 1;
        }
        while (idx19 != len19) {
            idx19 += 1;
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
        while (idx15 != len15) {
            idx15 += 1;
        }
        while (idx7 != len7) {
            idx7 += 1;
        }
        while (idx3 != len3) {
            if (_Comment.get(idx3) == null) {
                try {
                    idx3 += 1;
                } catch (java.lang.Exception e) {
                    org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            } else {
                if (_Comment.get(idx3) instanceof org.uniprot.uniprot.CommentType) {
                    idx3 += 1;
                } else {
                    org.uniprot.uniprot.impl.runtime.Util.handleTypeMismatchError(context, this, "Comment", _Comment.get(idx3));
                }
            }
        }
        while (idx6 != len6) {
            idx6 += 1;
        }
        while (idx5 != len5) {
            idx5 += 1;
        }
        while (idx4 != len4) {
            idx4 += 1;
        }
        while (idx14 != len14) {
            idx14 += 1;
        }
    }

    public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_OrganismHost == null)? 0 :_OrganismHost.size());
        int idx3 = 0;
        final int len3 = ((_Comment == null)? 0 :_Comment.size());
        int idx4 = 0;
        final int len4 = ((_Feature == null)? 0 :_Feature.size());
        int idx5 = 0;
        final int len5 = ((_Keyword == null)? 0 :_Keyword.size());
        int idx6 = 0;
        final int len6 = ((_DbReference == null)? 0 :_DbReference.size());
        int idx7 = 0;
        final int len7 = ((_Reference == null)? 0 :_Reference.size());
        int idx9 = 0;
        final int len9 = ((_Accession == null)? 0 :_Accession.size());
        int idx10 = 0;
        final int len10 = ((_Gene == null)? 0 :_Gene.size());
        int idx14 = 0;
        final int len14 = ((_Evidence == null)? 0 :_Evidence.size());
        int idx15 = 0;
        final int len15 = ((_GeneLocation == null)? 0 :_GeneLocation.size());
        int idx17 = 0;
        final int len17 = ((_Name == null)? 0 :_Name.size());
        int idx19 = 0;
        final int len19 = ((_Organism == null)? 0 :_Organism.size());
        while (idx9 != len9) {
            try {
                idx9 += 1;
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx17 != len17) {
            try {
                idx17 += 1;
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx10 != len10) {
            idx10 += 1;
        }
        while (idx19 != len19) {
            idx19 += 1;
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
        while (idx15 != len15) {
            idx15 += 1;
        }
        while (idx7 != len7) {
            idx7 += 1;
        }
        while (idx3 != len3) {
            if (_Comment.get(idx3) == null) {
                try {
                    idx3 += 1;
                } catch (java.lang.Exception e) {
                    org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            } else {
                if (_Comment.get(idx3) instanceof org.uniprot.uniprot.CommentType) {
                    idx3 += 1;
                } else {
                    org.uniprot.uniprot.impl.runtime.Util.handleTypeMismatchError(context, this, "Comment", _Comment.get(idx3));
                }
            }
        }
        while (idx6 != len6) {
            idx6 += 1;
        }
        while (idx5 != len5) {
            idx5 += 1;
        }
        while (idx4 != len4) {
            idx4 += 1;
        }
        while (idx14 != len14) {
            idx14 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.uniprot.uniprot.EntryType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv.grammar."
+"OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.grammar.trex.Elemen"
+"tPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameC"
+"lass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreU"
+"ndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001b"
+"com.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/d"
+"atatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/S"
+"tringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.Builtin"
+"AtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\'L"
+"\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor"
+";xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,c"
+"om.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u0000"
+"0com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNa"
+"meq\u0000~\u0000\'L\u0000\fnamespaceURIq\u0000~\u0000\'xpq\u0000~\u0000+q\u0000~\u0000*sr\u0000\u001dcom.sun.msv.gramm"
+"ar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.Attri"
+"buteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u001bxq\u0000~\u0000\u0003sr\u0000\u0011java"
+".lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u001fppsr\u0000\"com.sun.msv."
+"datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000$q\u0000~\u0000*t\u0000\u0005QNamesr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000-q\u0000~\u00000sq\u0000~\u00001q\u0000~\u0000<q\u0000~\u0000*sr\u0000#com.sun.msv.grammar.SimpleNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\'L\u0000\fnamespaceURIq\u0000~\u0000\'xr\u0000\u001dco"
+"m.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www"
+".w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expre"
+"ssion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00007\u0001q\u0000~\u0000Fsq\u0000~\u0000@t\u0000"
+"\taccessiont\u0000\u001ahttp://uniprot.org/uniprotsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u001app\u0000sq\u0000~"
+"\u0000\u0000ppq\u0000~\u0000\"sq\u0000~\u00003ppsq\u0000~\u00005q\u0000~\u00008pq\u0000~\u00009q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0004nameq\u0000~"
+"\u0000Jsq\u0000~\u0000\u001app\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001app\u0000sq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u00005q\u0000~\u00008p"
+"sr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Gq\u0000~\u0000Ysr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Aq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u001forg.uniprot.uniprot.ProteinTypet"
+"\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u00003ppsq\u0000~\u00005q"
+"\u0000~\u00008pq\u0000~\u00009q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0007proteinq\u0000~\u0000Jsq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008"
+"psq\u0000~\u0000\u001aq\u0000~\u00008p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001app\u0000sq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u00005q\u0000~"
+"\u00008pq\u0000~\u0000Yq\u0000~\u0000[q\u0000~\u0000Fsq\u0000~\u0000@t\u0000&org.uniprot.uniprot.EntryType.Gen"
+"eTypeq\u0000~\u0000^sq\u0000~\u00003ppsq\u0000~\u00005q\u0000~\u00008pq\u0000~\u00009q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0004geneq\u0000"
+"~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u001app\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001app\u0000sq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u0000"
+"8psq\u0000~\u00005q\u0000~\u00008pq\u0000~\u0000Yq\u0000~\u0000[q\u0000~\u0000Fsq\u0000~\u0000@t\u0000 org.uniprot.uniprot.Or"
+"ganismTypeq\u0000~\u0000^sq\u0000~\u00003ppsq\u0000~\u00005q\u0000~\u00008pq\u0000~\u00009q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\bo"
+"rganismq\u0000~\u0000Jsq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u0000\u001aq\u0000~\u00008p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001ap"
+"p\u0000sq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u00005q\u0000~\u00008pq\u0000~\u0000Yq\u0000~\u0000[q\u0000~\u0000Fsq\u0000~\u0000@q\u0000~\u0000y"
+"q\u0000~\u0000^sq\u0000~\u00003ppsq\u0000~\u00005q\u0000~\u00008pq\u0000~\u00009q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\forganismHos"
+"tq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u0000\u001aq\u0000~\u00008p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001app"
+"\u0000sq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u00005q\u0000~\u00008pq\u0000~\u0000Yq\u0000~\u0000[q\u0000~\u0000Fsq\u0000~\u0000@t\u0000$org"
+".uniprot.uniprot.GeneLocationTypeq\u0000~\u0000^sq\u0000~\u00003ppsq\u0000~\u00005q\u0000~\u00008pq\u0000"
+"~\u00009q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\fgeneLocationq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u001app"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001app\u0000sq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u00005q\u0000~\u00008pq\u0000~\u0000Yq\u0000~\u0000["
+"q\u0000~\u0000Fsq\u0000~\u0000@t\u0000!org.uniprot.uniprot.ReferenceTypeq\u0000~\u0000^sq\u0000~\u00003pp"
+"sq\u0000~\u00005q\u0000~\u00008pq\u0000~\u00009q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\treferenceq\u0000~\u0000Jsq\u0000~\u00003ppsq"
+"\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u0000\u001aq\u0000~\u00008p\u0000sq\u0000~\u00003ppsq\u0000~\u00005ppsr\u0000\u001ccom.sun.msv.gramm"
+"ar.ValueExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtq\u0000~\u0000 L\u0000\u0004nameq\u0000~\u0000!L\u0000\u0005valuet\u0000\u0012Ljava"
+"/lang/Object;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.BooleanTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000$q\u0000~\u0000*t\u0000\u0007booleanq\u0000~\u0000>sq\u0000~\u00001q\u0000~\u0000\u00b0t\u0000\u0000q\u0000~\u0000Gsq\u0000"
+"~\u0000@t\u0000\u0003nilq\u0000~\u0000Dsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001app\u0000sq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u00005q\u0000~"
+"\u00008pq\u0000~\u0000Yq\u0000~\u0000[q\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u001forg.uniprot.uniprot.CommentTypeq\u0000"
+"~\u0000^sq\u0000~\u00003ppsq\u0000~\u00005q\u0000~\u00008pq\u0000~\u00009q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0007commentq\u0000~\u0000Jq"
+"\u0000~\u0000Fsq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u0000\u001aq\u0000~\u00008p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001app\u0000sq\u0000~\u00003"
+"ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u00005q\u0000~\u00008pq\u0000~\u0000Yq\u0000~\u0000[q\u0000~\u0000Fsq\u0000~\u0000@t\u0000#org.unipro"
+"t.uniprot.DbReferenceTypeq\u0000~\u0000^sq\u0000~\u00003ppsq\u0000~\u00005q\u0000~\u00008pq\u0000~\u00009q\u0000~\u0000B"
+"q\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u000bdbReferenceq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001app\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001app"
+"\u0000sq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u00005q\u0000~\u00008pq\u0000~\u0000Yq\u0000~\u0000[q\u0000~\u0000Fsq\u0000~\u0000@t\u0000(org"
+".uniprot.uniprot.ProteinExistenceTypeq\u0000~\u0000^sq\u0000~\u00003ppsq\u0000~\u00005q\u0000~\u0000"
+"8pq\u0000~\u00009q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0010proteinExistenceq\u0000~\u0000Jsq\u0000~\u00003ppsq\u0000~\u0000"
+"\u0017q\u0000~\u00008psq\u0000~\u0000\u001aq\u0000~\u00008p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001app\u0000sq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000"
+"~\u00005q\u0000~\u00008pq\u0000~\u0000Yq\u0000~\u0000[q\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u001forg.uniprot.uniprot.Keyword"
+"Typeq\u0000~\u0000^sq\u0000~\u00003ppsq\u0000~\u00005q\u0000~\u00008pq\u0000~\u00009q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0007keyword"
+"q\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u0000\u001aq\u0000~\u00008p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001app\u0000"
+"sq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u00005q\u0000~\u00008pq\u0000~\u0000Yq\u0000~\u0000[q\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u001forg."
+"uniprot.uniprot.FeatureTypeq\u0000~\u0000^sq\u0000~\u00003ppsq\u0000~\u00005q\u0000~\u00008pq\u0000~\u00009q\u0000~"
+"\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0007featureq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u0000\u001aq"
+"\u0000~\u00008p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001app\u0000sq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u00005q\u0000~\u00008pq\u0000~\u0000Y"
+"q\u0000~\u0000[q\u0000~\u0000Fsq\u0000~\u0000@t\u0000 org.uniprot.uniprot.EvidenceTypeq\u0000~\u0000^sq\u0000~"
+"\u00003ppsq\u0000~\u00005q\u0000~\u00008pq\u0000~\u00009q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\bevidenceq\u0000~\u0000Jq\u0000~\u0000Fsq"
+"\u0000~\u0000\u001app\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001app\u0000sq\u0000~\u00003ppsq\u0000~\u0000\u0017q\u0000~\u00008psq\u0000~\u00005q\u0000~\u00008pq\u0000~\u0000"
+"Yq\u0000~\u0000[q\u0000~\u0000Fsq\u0000~\u0000@t\u0000 org.uniprot.uniprot.SequenceTypeq\u0000~\u0000^sq\u0000"
+"~\u00003ppsq\u0000~\u00005q\u0000~\u00008pq\u0000~\u00009q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\bsequenceq\u0000~\u0000Jsq\u0000~\u00005"
+"ppsq\u0000~\u0000\u001fq\u0000~\u00008psr\u0000!com.sun.msv.datatype.xsd.DateType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq"
+"\u0000~\u0000$q\u0000~\u0000*t\u0000\u0004dateq\u0000~\u0000>q\u0000~\u00000sq\u0000~\u00001q\u0000~\u0001\u0015q\u0000~\u0000*sq\u0000~\u0000@t\u0000\u0007createdq\u0000"
+"~\u0000\u00b2sq\u0000~\u00005ppsq\u0000~\u0000\u001fppsr\u0000)com.sun.msv.datatype.xsd.EnumerationF"
+"acet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.da"
+"tatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*co"
+"m.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFace"
+"tFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/dataty"
+"pe/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatyp"
+"e/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\'xq\u0000~\u0000&q\u0000~\u0000Jpq\u0000~\u0000.\u0000\u0000q\u0000~\u0000)"
+"q\u0000~\u0000)t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?"
+"@\u0000\u0000\u0000\u0000\u0000\u0002t\u0000\nSwiss-Prott\u0000\u0006TrEMBLxq\u0000~\u00000sq\u0000~\u00001t\u0000\u000estring-derivedq\u0000"
+"~\u0000Jsq\u0000~\u0000@t\u0000\u0007datasetq\u0000~\u0000\u00b2sq\u0000~\u00005ppq\u0000~\u0001\u0011sq\u0000~\u0000@t\u0000\bmodifiedq\u0000~\u0000\u00b2s"
+"q\u0000~\u00005ppsq\u0000~\u0000\u001fppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k"
+"\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0001\u001fxq\u0000~\u0000$q\u0000~\u0000*t\u0000\u0007integerq\u0000~\u0000>sr\u0000,com.sun."
+"msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;c"
+"om.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090"
+"\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0001\u001eppq\u0000~\u0000>\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000$q\u0000~\u0000*t\u0000\u0007decimalq\u0000~\u0000>q\u0000~\u00018t\u0000\u000efractionDigi"
+"ts\u0000\u0000\u0000\u0000q\u0000~\u00000sq\u0000~\u00001q\u0000~\u00013q\u0000~\u0000*sq\u0000~\u0000@t\u0000\u0007versionq\u0000~\u0000\u00b2sr\u0000\"com.sun."
+"msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/"
+"msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gram"
+"mar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVer"
+"sionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000_\u0001p"
+"q\u0000~\u0000\bq\u0000~\u0000\u0014q\u0000~\u0000\u000bq\u0000~\u0000\u008bq\u0000~\u0000~q\u0000~\u0000cq\u0000~\u0000\u00c0q\u0000~\u0000\u00daq\u0000~\u0000\u00e8q\u0000~\u0000\u00f6q\u0000~\u0000\tq\u0000~\u0000\u0006"
+"q\u0000~\u0000\u00c5q\u0000~\u0000\u00b7q\u0000~\u0000\u009dq\u0000~\u0000\u0090q\u0000~\u0000\u0083q\u0000~\u0000uq\u0000~\u0000hq\u0000~\u0000Uq\u0000~\u0000\u00d1q\u0000~\u0000\u00dfq\u0000~\u0000\u00edq\u0000~\u0000\u00fb"
+"q\u0000~\u0001\u0007q\u0000~\u0000\u00c3q\u0000~\u0000\u00b5q\u0000~\u0000\u009bq\u0000~\u0000\u008eq\u0000~\u0000\u0081q\u0000~\u0000sq\u0000~\u0000fq\u0000~\u0000Sq\u0000~\u0000\u00cfq\u0000~\u0000\u00ddq\u0000~\u0000\u00eb"
+"q\u0000~\u0000\u00f9q\u0000~\u0001\u0005q\u0000~\u0000\u0015q\u0000~\u0000\u0005q\u0000~\u0000\fq\u0000~\u0000\u0012q\u0000~\u0000\u0016q\u0000~\u0000\u00a9q\u0000~\u0000Mq\u0000~\u0000\u001eq\u0000~\u0000\u0099q\u0000~\u0000\u008c"
+"q\u0000~\u0000\u007fq\u0000~\u0000qq\u0000~\u0000dq\u0000~\u0000\u00c1q\u0000~\u0000\u00dbq\u0000~\u0000\u00e9q\u0000~\u0000\u00caq\u0000~\u0000\u00bcq\u0000~\u0000\u00a2q\u0000~\u0000\u0095q\u0000~\u0000\u0087q\u0000~\u0000z"
+"q\u0000~\u0000mq\u0000~\u0000_q\u0000~\u0000Nq\u0000~\u00004q\u0000~\u0000\u00a7q\u0000~\u0000\u00d6q\u0000~\u0000\u00e4q\u0000~\u0000\u00f2q\u0000~\u0001\u0000q\u0000~\u0000\u00f7q\u0000~\u0001\fq\u0000~\u0000\u00c6"
+"q\u0000~\u0000\u00b8q\u0000~\u0000\u009eq\u0000~\u0000\u0091q\u0000~\u0000\u0084q\u0000~\u0000vq\u0000~\u0000iq\u0000~\u0000Vq\u0000~\u0000\u00d2q\u0000~\u0000\u00e0q\u0000~\u0000\u00eeq\u0000~\u0000\u00fcq\u0000~\u0001\b"
+"q\u0000~\u0000\u0013q\u0000~\u0000\rq\u0000~\u0000\u0010q\u0000~\u0000\nq\u0000~\u0000\u000fq\u0000~\u0000\u000eq\u0000~\u0000\u0011q\u0000~\u0000Kq\u0000~\u0000\u0019q\u0000~\u0000\u00a6q\u0000~\u0000\u0007x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public boolean equals(java.lang.Object obj) {
        if (this == obj) {
            return true;
        }
        if ((null == obj)||(!(obj instanceof org.uniprot.uniprot.EntryType))) {
            return false;
        }
        org.uniprot.uniprot.impl.EntryTypeImpl target = ((org.uniprot.uniprot.impl.EntryTypeImpl) obj);
        {
            java.util.Calendar value = this.getModified();
            java.util.Calendar targetValue = target.getModified();
            if (!((value == targetValue)||((value!= null)&&(value.getTime().getTime() == targetValue.getTime().getTime())))) {
                return false;
            }
        }
        {
            java.util.List value = this.getOrganismHost();
            java.util.List targetValue = target.getOrganismHost();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getComment();
            java.util.List targetValue = target.getComment();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getFeature();
            java.util.List targetValue = target.getFeature();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getKeyword();
            java.util.List targetValue = target.getKeyword();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getDbReference();
            java.util.List targetValue = target.getDbReference();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getReference();
            java.util.List targetValue = target.getReference();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            org.uniprot.uniprot.SequenceType value = this.getSequence();
            org.uniprot.uniprot.SequenceType targetValue = target.getSequence();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getAccession();
            java.util.List targetValue = target.getAccession();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getGene();
            java.util.List targetValue = target.getGene();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.math.BigInteger value = this.getVersion();
            java.math.BigInteger targetValue = target.getVersion();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            org.uniprot.uniprot.ProteinExistenceType value = this.getProteinExistence();
            org.uniprot.uniprot.ProteinExistenceType targetValue = target.getProteinExistence();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.lang.String value = this.getDataset();
            java.lang.String targetValue = target.getDataset();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getEvidence();
            java.util.List targetValue = target.getEvidence();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getGeneLocation();
            java.util.List targetValue = target.getGeneLocation();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.Calendar value = this.getCreated();
            java.util.Calendar targetValue = target.getCreated();
            if (!((value == targetValue)||((value!= null)&&(value.getTime().getTime() == targetValue.getTime().getTime())))) {
                return false;
            }
        }
        {
            java.util.List value = this.getName();
            java.util.List targetValue = target.getName();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            org.uniprot.uniprot.ProteinType value = this.getProtein();
            org.uniprot.uniprot.ProteinType targetValue = target.getProtein();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getOrganism();
            java.util.List targetValue = target.getOrganism();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        return true;
    }

    public int hashCode() {
        int hash = 7;
        {
            java.util.Calendar value = this.getModified();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getOrganismHost();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getComment();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getFeature();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getKeyword();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getDbReference();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getReference();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            org.uniprot.uniprot.SequenceType value = this.getSequence();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getAccession();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getGene();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.math.BigInteger value = this.getVersion();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            org.uniprot.uniprot.ProteinExistenceType value = this.getProteinExistence();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.lang.String value = this.getDataset();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getEvidence();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getGeneLocation();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.Calendar value = this.getCreated();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getName();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            org.uniprot.uniprot.ProteinType value = this.getProtein();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getOrganism();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        return hash;
    }

    public java.lang.Long getHjid() {
        return _Hjid;
    }

    public void setHjid(java.lang.Long value) {
        _Hjid = value;
    }

    public java.lang.Long getHjversion() {
        return _Hjversion;
    }

    public void setHjversion(java.lang.Long value) {
        _Hjversion = value;
    }

    public static class GeneTypeImpl implements org.uniprot.uniprot.EntryType.GeneType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Name;
        public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;
        protected java.lang.Long _Hjid;
        protected java.lang.Long _Hjversion;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.uniprot.uniprot.EntryType.GeneType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getName() {
            if (_Name == null) {
                _Name = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Name;
        }

        public java.util.List getName() {
            return _getName();
        }

        public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            return new org.uniprot.uniprot.impl.EntryTypeImpl.GeneTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Name == null)? 0 :_Name.size());
            while (idx1 != len1) {
                context.startElement("http://uniprot.org/uniprot", "name");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name.get(idx_0 ++)), "Name");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name.get(idx_1 ++)), "Name");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name.get(idx1 ++)), "Name");
                context.endElement();
            }
        }

        public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Name == null)? 0 :_Name.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Name == null)? 0 :_Name.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.uniprot.uniprot.EntryType.GeneType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000 org"
+".uniprot.uniprot.GeneNameTypet\u0000+http://java.sun.com/jaxb/xjc"
+"/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.grammar.D"
+"ataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006e"
+"xceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000"
+"\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.ms"
+"v.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.d"
+"atatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype."
+"xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeName"
+"q\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePro"
+"cessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"psr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloc"
+"alNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)h"
+"ttp://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0004namet\u0000"
+"\u001ahttp://uniprot.org/uniprotsr\u0000\"com.sun.msv.grammar.Expressio"
+"nPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressio"
+"nPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Cl"
+"osedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/"
+"sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u000fq\u0000~\u0000\fq\u0000~\u0000\u0005q\u0000~\u0000\u0010q"
+"\u0000~\u0000\"x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public boolean equals(java.lang.Object obj) {
            if (this == obj) {
                return true;
            }
            if ((null == obj)||(!(obj instanceof org.uniprot.uniprot.EntryType.GeneType))) {
                return false;
            }
            org.uniprot.uniprot.impl.EntryTypeImpl.GeneTypeImpl target = ((org.uniprot.uniprot.impl.EntryTypeImpl.GeneTypeImpl) obj);
            {
                java.util.List value = this.getName();
                java.util.List targetValue = target.getName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            return true;
        }

        public int hashCode() {
            int hash = 7;
            {
                java.util.List value = this.getName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            return hash;
        }

        public java.lang.Long getHjid() {
            return _Hjid;
        }

        public void setHjid(java.lang.Long value) {
            _Hjid = value;
        }

        public java.lang.Long getHjversion() {
            return _Hjversion;
        }

        public void setHjversion(java.lang.Long value) {
            _Hjversion = value;
        }

        public class Unmarshaller
            extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.uniprot.uniprot.impl.EntryTypeImpl.GeneTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  0 :
                            if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            break;
                        case  3 :
                            if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  2 :
                            if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            if (("evidence" == ___local)&&("" == ___uri)) {
                                _getName().add(((org.uniprot.uniprot.impl.GeneNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.GeneNameTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                return ;
                            }
                            if (("type" == ___local)&&("" == ___uri)) {
                                _getName().add(((org.uniprot.uniprot.impl.GeneNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.GeneNameTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  1 :
                                attIdx = context.getAttribute("", "evidence");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "type");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            super(context, "------------------------------------------------------------");
        }

        protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.uniprot.uniprot.impl.EntryTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  37 :
                        attIdx = context.getAttribute("http://www.w3.org/2001/XMLSchema-instance", "nil");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 40;
                            eatText2(v);
                            continue outer;
                        }
                        attIdx = context.getAttribute("", "error");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "mass");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "method");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "created");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  51 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  21 :
                        if (("gene" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  59 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  19 :
                        if (("recommendedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("alternativeName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("submittedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("allergenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("biotechName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CdAntigenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("innName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("domain" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("component" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  18 :
                        if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        if (("protein" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        break;
                    case  36 :
                        if (("reference" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 34;
                            return ;
                        }
                        if (("comment" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 37;
                            return ;
                        }
                        state = 41;
                        continue outer;
                    case  54 :
                        attIdx = context.getAttribute("", "attribute");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "category");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "dataset");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText4(v);
                            continue outer;
                        }
                        break;
                    case  31 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "modified");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText5(v);
                            continue outer;
                        }
                        break;
                    case  44 :
                        if (("dbReference" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 42;
                            return ;
                        }
                        if (("proteinExistence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 45;
                            return ;
                        }
                        break;
                    case  56 :
                        if (("evidence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 54;
                            return ;
                        }
                        if (("sequence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 57;
                            return ;
                        }
                        break;
                    case  50 :
                        if (("keyword" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 48;
                            return ;
                        }
                        if (("feature" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 51;
                            return ;
                        }
                        state = 53;
                        continue outer;
                    case  45 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  53 :
                        if (("feature" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 51;
                            return ;
                        }
                        if (("evidence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 54;
                            return ;
                        }
                        state = 56;
                        continue outer;
                    case  42 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  47 :
                        if (("keyword" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 48;
                            return ;
                        }
                        state = 50;
                        continue outer;
                    case  57 :
                        attIdx = context.getAttribute("", "checksum");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  48 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  27 :
                        if (("organism" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 25;
                            return ;
                        }
                        if (("organismHost" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  34 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "key");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  22 :
                        if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getGene().add(((org.uniprot.uniprot.impl.EntryTypeImpl.GeneTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.EntryTypeImpl.GeneTypeImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  33 :
                        if (("geneLocation" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 31;
                            return ;
                        }
                        if (("reference" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 34;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("accession" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        break;
                    case  41 :
                        if (("comment" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 37;
                            return ;
                        }
                        if (("dbReference" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 42;
                            return ;
                        }
                        state = 44;
                        continue outer;
                    case  24 :
                        if (("gene" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        if (("organism" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 25;
                            return ;
                        }
                        break;
                    case  25 :
                        attIdx = context.getAttribute("", "key");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  15 :
                        if (("accession" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        break;
                    case  28 :
                        attIdx = context.getAttribute("", "key");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  30 :
                        if (("organismHost" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 28;
                            return ;
                        }
                        if (("geneLocation" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Version = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getComment().add(null);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Created = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Dataset = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Modified = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  37 :
                        attIdx = context.getAttribute("http://www.w3.org/2001/XMLSchema-instance", "nil");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 40;
                            eatText2(v);
                            continue outer;
                        }
                        attIdx = context.getAttribute("", "error");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "mass");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "method");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "created");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  17 :
                        if (("name" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  51 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  55 :
                        if (("evidence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 56;
                            return ;
                        }
                        break;
                    case  58 :
                        if (("sequence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 59;
                            return ;
                        }
                        break;
                    case  59 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  19 :
                        _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromLeaveElement((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname));
                        return ;
                    case  36 :
                        state = 41;
                        continue outer;
                    case  54 :
                        attIdx = context.getAttribute("", "attribute");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "category");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "dataset");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText4(v);
                            continue outer;
                        }
                        break;
                    case  31 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "modified");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText5(v);
                            continue outer;
                        }
                        break;
                    case  50 :
                        state = 53;
                        continue outer;
                    case  26 :
                        if (("organism" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  52 :
                        if (("feature" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 53;
                            return ;
                        }
                        break;
                    case  45 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  46 :
                        if (("proteinExistence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 47;
                            return ;
                        }
                        break;
                    case  53 :
                        state = 56;
                        continue outer;
                    case  42 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  32 :
                        if (("geneLocation" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  47 :
                        state = 50;
                        continue outer;
                    case  57 :
                        attIdx = context.getAttribute("", "checksum");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  48 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  20 :
                        if (("protein" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  34 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "key");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  43 :
                        if (("dbReference" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 44;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("accession" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("gene" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("organismHost" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  35 :
                        if (("reference" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  40 :
                        if (("comment" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 41;
                            return ;
                        }
                        break;
                    case  49 :
                        if (("keyword" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 50;
                            return ;
                        }
                        break;
                    case  41 :
                        state = 44;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "key");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  28 :
                        attIdx = context.getAttribute("", "key");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  30 :
                        state = 33;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  37 :
                        if (("nil" == ___local)&&("http://www.w3.org/2001/XMLSchema-instance" == ___uri)) {
                            state = 38;
                            return ;
                        }
                        if (("error" == ___local)&&("" == ___uri)) {
                            _getComment().add(((org.uniprot.uniprot.impl.CommentTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.CommentTypeImpl.class), 40, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _getComment().add(((org.uniprot.uniprot.impl.CommentTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.CommentTypeImpl.class), 40, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("mass" == ___local)&&("" == ___uri)) {
                            _getComment().add(((org.uniprot.uniprot.impl.CommentTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.CommentTypeImpl.class), 40, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("method" == ___local)&&("" == ___uri)) {
                            _getComment().add(((org.uniprot.uniprot.impl.CommentTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.CommentTypeImpl.class), 40, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            _getComment().add(((org.uniprot.uniprot.impl.CommentTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.CommentTypeImpl.class), 40, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("type" == ___local)&&("" == ___uri)) {
                            _getComment().add(((org.uniprot.uniprot.impl.CommentTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.CommentTypeImpl.class), 40, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("created" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  51 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            _getFeature().add(((org.uniprot.uniprot.impl.FeatureTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.FeatureTypeImpl.class), 52, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _getFeature().add(((org.uniprot.uniprot.impl.FeatureTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.FeatureTypeImpl.class), 52, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getFeature().add(((org.uniprot.uniprot.impl.FeatureTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.FeatureTypeImpl.class), 52, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("ref" == ___local)&&("" == ___uri)) {
                            _getFeature().add(((org.uniprot.uniprot.impl.FeatureTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.FeatureTypeImpl.class), 52, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("status" == ___local)&&("" == ___uri)) {
                            _getFeature().add(((org.uniprot.uniprot.impl.FeatureTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.FeatureTypeImpl.class), 52, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("type" == ___local)&&("" == ___uri)) {
                            _getFeature().add(((org.uniprot.uniprot.impl.FeatureTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.FeatureTypeImpl.class), 52, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  59 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  19 :
                        _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname));
                        return ;
                    case  36 :
                        state = 41;
                        continue outer;
                    case  54 :
                        if (("attribute" == ___local)&&("" == ___uri)) {
                            _getEvidence().add(((org.uniprot.uniprot.impl.EvidenceTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidenceTypeImpl.class), 55, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("category" == ___local)&&("" == ___uri)) {
                            _getEvidence().add(((org.uniprot.uniprot.impl.EvidenceTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidenceTypeImpl.class), 55, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("dataset" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  31 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _getGeneLocation().add(((org.uniprot.uniprot.impl.GeneLocationTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.GeneLocationTypeImpl.class), 32, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("type" == ___local)&&("" == ___uri)) {
                            _getGeneLocation().add(((org.uniprot.uniprot.impl.GeneLocationTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.GeneLocationTypeImpl.class), 32, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("modified" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  50 :
                        state = 53;
                        continue outer;
                    case  45 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            _ProteinExistence = ((org.uniprot.uniprot.impl.ProteinExistenceTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinExistenceTypeImpl.class), 46, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  53 :
                        state = 56;
                        continue outer;
                    case  42 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _getDbReference().add(((org.uniprot.uniprot.impl.DbReferenceTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.DbReferenceTypeImpl.class), 43, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getDbReference().add(((org.uniprot.uniprot.impl.DbReferenceTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.DbReferenceTypeImpl.class), 43, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  47 :
                        state = 50;
                        continue outer;
                    case  57 :
                        if (("checksum" == ___local)&&("" == ___uri)) {
                            _Sequence = ((org.uniprot.uniprot.impl.SequenceTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.SequenceTypeImpl.class), 58, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  48 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _getKeyword().add(((org.uniprot.uniprot.impl.KeywordTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.KeywordTypeImpl.class), 49, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getKeyword().add(((org.uniprot.uniprot.impl.KeywordTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.KeywordTypeImpl.class), 49, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  34 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _getReference().add(((org.uniprot.uniprot.impl.ReferenceTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ReferenceTypeImpl.class), 35, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("key" == ___local)&&("" == ___uri)) {
                            _getReference().add(((org.uniprot.uniprot.impl.ReferenceTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ReferenceTypeImpl.class), 35, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  41 :
                        state = 44;
                        continue outer;
                    case  25 :
                        if (("key" == ___local)&&("" == ___uri)) {
                            _getOrganism().add(((org.uniprot.uniprot.impl.OrganismTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.OrganismTypeImpl.class), 26, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  28 :
                        if (("key" == ___local)&&("" == ___uri)) {
                            _getOrganismHost().add(((org.uniprot.uniprot.impl.OrganismTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.OrganismTypeImpl.class), 29, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  30 :
                        state = 33;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        attIdx = context.getAttribute("", "version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  37 :
                        attIdx = context.getAttribute("http://www.w3.org/2001/XMLSchema-instance", "nil");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 40;
                            eatText2(v);
                            continue outer;
                        }
                        attIdx = context.getAttribute("", "error");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "mass");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "method");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "created");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  51 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  39 :
                        if (("nil" == ___local)&&("http://www.w3.org/2001/XMLSchema-instance" == ___uri)) {
                            state = 40;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  2 :
                        if (("created" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  59 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  19 :
                        _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromLeaveAttribute((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, ___uri, ___local, ___qname));
                        return ;
                    case  36 :
                        state = 41;
                        continue outer;
                    case  54 :
                        attIdx = context.getAttribute("", "attribute");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "category");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "dataset");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText4(v);
                            continue outer;
                        }
                        break;
                    case  31 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "modified");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText5(v);
                            continue outer;
                        }
                        break;
                    case  50 :
                        state = 53;
                        continue outer;
                    case  45 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  53 :
                        state = 56;
                        continue outer;
                    case  42 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  47 :
                        state = 50;
                        continue outer;
                    case  57 :
                        attIdx = context.getAttribute("", "checksum");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  48 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  8 :
                        if (("modified" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  34 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "key");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("dataset" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  41 :
                        state = 44;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "key");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  28 :
                        attIdx = context.getAttribute("", "key");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  30 :
                        state = 33;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  9 :
                            attIdx = context.getAttribute("", "version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  37 :
                            attIdx = context.getAttribute("http://www.w3.org/2001/XMLSchema-instance", "nil");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 40;
                                eatText2(v);
                                continue outer;
                            }
                            attIdx = context.getAttribute("", "error");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "mass");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "method");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "created");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  51 :
                            attIdx = context.getAttribute("", "description");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  59 :
                            revertToParentFromText(value);
                            return ;
                        case  16 :
                            state = 17;
                            eatText6(value);
                            return ;
                        case  19 :
                            _Protein = ((org.uniprot.uniprot.impl.ProteinTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.ProteinTypeImpl.class), 20, value));
                            return ;
                        case  4 :
                            state = 5;
                            eatText4(value);
                            return ;
                        case  36 :
                            state = 41;
                            continue outer;
                        case  54 :
                            attIdx = context.getAttribute("", "attribute");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "category");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "dataset");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText4(v);
                                continue outer;
                            }
                            break;
                        case  13 :
                            state = 14;
                            eatText7(value);
                            return ;
                        case  31 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "modified");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText5(v);
                                continue outer;
                            }
                            break;
                        case  50 :
                            state = 53;
                            continue outer;
                        case  45 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  53 :
                            state = 56;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText3(value);
                            return ;
                        case  42 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  10 :
                            state = 11;
                            eatText1(value);
                            return ;
                        case  47 :
                            state = 50;
                            continue outer;
                        case  57 :
                            attIdx = context.getAttribute("", "checksum");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  48 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  34 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "key");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  38 :
                            state = 39;
                            eatText2(value);
                            return ;
                        case  41 :
                            state = 44;
                            continue outer;
                        case  25 :
                            attIdx = context.getAttribute("", "key");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  28 :
                            attIdx = context.getAttribute("", "key");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  7 :
                            state = 8;
                            eatText5(value);
                            return ;
                        case  30 :
                            state = 33;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getName().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getAccession().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
