//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-09/29/2005 11:56 AM(valikov)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.10.31 at 01:32:53 AM PDT 
//


package org.uniprot.uniprot.impl;

public class ProteinTypeImpl implements org.uniprot.uniprot.ProteinType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Domain;
    protected com.sun.xml.bind.util.ListImpl _SubmittedName;
    protected org.uniprot.uniprot.EvidencedStringType _AllergenName;
    protected com.sun.xml.bind.util.ListImpl _AlternativeName;
    protected com.sun.xml.bind.util.ListImpl _Component;
    protected org.uniprot.uniprot.EvidencedStringType _BiotechName;
    protected org.uniprot.uniprot.ProteinNameGroupRecommendedNameType _RecommendedName;
    protected com.sun.xml.bind.util.ListImpl _CdAntigenName;
    protected com.sun.xml.bind.util.ListImpl _InnName;
    public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;
    protected java.lang.Long _Hjid;
    protected java.lang.Long _Hjversion;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.uniprot.uniprot.ProteinType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getDomain() {
        if (_Domain == null) {
            _Domain = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Domain;
    }

    public java.util.List getDomain() {
        return _getDomain();
    }

    protected com.sun.xml.bind.util.ListImpl _getSubmittedName() {
        if (_SubmittedName == null) {
            _SubmittedName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _SubmittedName;
    }

    public java.util.List getSubmittedName() {
        return _getSubmittedName();
    }

    public org.uniprot.uniprot.EvidencedStringType getAllergenName() {
        return _AllergenName;
    }

    public void setAllergenName(org.uniprot.uniprot.EvidencedStringType value) {
        _AllergenName = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getAlternativeName() {
        if (_AlternativeName == null) {
            _AlternativeName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AlternativeName;
    }

    public java.util.List getAlternativeName() {
        return _getAlternativeName();
    }

    protected com.sun.xml.bind.util.ListImpl _getComponent() {
        if (_Component == null) {
            _Component = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Component;
    }

    public java.util.List getComponent() {
        return _getComponent();
    }

    public org.uniprot.uniprot.EvidencedStringType getBiotechName() {
        return _BiotechName;
    }

    public void setBiotechName(org.uniprot.uniprot.EvidencedStringType value) {
        _BiotechName = value;
    }

    public org.uniprot.uniprot.ProteinNameGroupRecommendedNameType getRecommendedName() {
        return _RecommendedName;
    }

    public void setRecommendedName(org.uniprot.uniprot.ProteinNameGroupRecommendedNameType value) {
        _RecommendedName = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getCdAntigenName() {
        if (_CdAntigenName == null) {
            _CdAntigenName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _CdAntigenName;
    }

    public java.util.List getCdAntigenName() {
        return _getCdAntigenName();
    }

    protected com.sun.xml.bind.util.ListImpl _getInnName() {
        if (_InnName == null) {
            _InnName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _InnName;
    }

    public java.util.List getInnName() {
        return _getInnName();
    }

    public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
        return new org.uniprot.uniprot.impl.ProteinTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Domain == null)? 0 :_Domain.size());
        int idx2 = 0;
        final int len2 = ((_SubmittedName == null)? 0 :_SubmittedName.size());
        int idx4 = 0;
        final int len4 = ((_AlternativeName == null)? 0 :_AlternativeName.size());
        int idx5 = 0;
        final int len5 = ((_Component == null)? 0 :_Component.size());
        int idx8 = 0;
        final int len8 = ((_CdAntigenName == null)? 0 :_CdAntigenName.size());
        int idx9 = 0;
        final int len9 = ((_InnName == null)? 0 :_InnName.size());
        if (_RecommendedName!= null) {
            context.startElement("http://uniprot.org/uniprot", "recommendedName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RecommendedName), "RecommendedName");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RecommendedName), "RecommendedName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _RecommendedName), "RecommendedName");
            context.endElement();
        }
        while (idx4 != len4) {
            context.startElement("http://uniprot.org/uniprot", "alternativeName");
            int idx_2 = idx4;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AlternativeName.get(idx_2 ++)), "AlternativeName");
            context.endNamespaceDecls();
            int idx_3 = idx4;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AlternativeName.get(idx_3 ++)), "AlternativeName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _AlternativeName.get(idx4 ++)), "AlternativeName");
            context.endElement();
        }
        while (idx2 != len2) {
            context.startElement("http://uniprot.org/uniprot", "submittedName");
            int idx_4 = idx2;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SubmittedName.get(idx_4 ++)), "SubmittedName");
            context.endNamespaceDecls();
            int idx_5 = idx2;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SubmittedName.get(idx_5 ++)), "SubmittedName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _SubmittedName.get(idx2 ++)), "SubmittedName");
            context.endElement();
        }
        if (_AllergenName!= null) {
            context.startElement("http://uniprot.org/uniprot", "allergenName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AllergenName), "AllergenName");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AllergenName), "AllergenName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _AllergenName), "AllergenName");
            context.endElement();
        }
        if (_BiotechName!= null) {
            context.startElement("http://uniprot.org/uniprot", "biotechName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _BiotechName), "BiotechName");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _BiotechName), "BiotechName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _BiotechName), "BiotechName");
            context.endElement();
        }
        while (idx8 != len8) {
            context.startElement("http://uniprot.org/uniprot", "CdAntigenName");
            int idx_10 = idx8;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CdAntigenName.get(idx_10 ++)), "CdAntigenName");
            context.endNamespaceDecls();
            int idx_11 = idx8;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CdAntigenName.get(idx_11 ++)), "CdAntigenName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _CdAntigenName.get(idx8 ++)), "CdAntigenName");
            context.endElement();
        }
        while (idx9 != len9) {
            context.startElement("http://uniprot.org/uniprot", "innName");
            int idx_12 = idx9;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InnName.get(idx_12 ++)), "InnName");
            context.endNamespaceDecls();
            int idx_13 = idx9;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InnName.get(idx_13 ++)), "InnName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _InnName.get(idx9 ++)), "InnName");
            context.endElement();
        }
        while (idx1 != len1) {
            context.startElement("http://uniprot.org/uniprot", "domain");
            int idx_14 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Domain.get(idx_14 ++)), "Domain");
            context.endNamespaceDecls();
            int idx_15 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Domain.get(idx_15 ++)), "Domain");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Domain.get(idx1 ++)), "Domain");
            context.endElement();
        }
        while (idx5 != len5) {
            context.startElement("http://uniprot.org/uniprot", "component");
            int idx_16 = idx5;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Component.get(idx_16 ++)), "Component");
            context.endNamespaceDecls();
            int idx_17 = idx5;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Component.get(idx_17 ++)), "Component");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Component.get(idx5 ++)), "Component");
            context.endElement();
        }
    }

    public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Domain == null)? 0 :_Domain.size());
        int idx2 = 0;
        final int len2 = ((_SubmittedName == null)? 0 :_SubmittedName.size());
        int idx4 = 0;
        final int len4 = ((_AlternativeName == null)? 0 :_AlternativeName.size());
        int idx5 = 0;
        final int len5 = ((_Component == null)? 0 :_Component.size());
        int idx8 = 0;
        final int len8 = ((_CdAntigenName == null)? 0 :_CdAntigenName.size());
        int idx9 = 0;
        final int len9 = ((_InnName == null)? 0 :_InnName.size());
        while (idx4 != len4) {
            idx4 += 1;
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
        while (idx8 != len8) {
            idx8 += 1;
        }
        while (idx9 != len9) {
            idx9 += 1;
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
        while (idx5 != len5) {
            idx5 += 1;
        }
    }

    public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Domain == null)? 0 :_Domain.size());
        int idx2 = 0;
        final int len2 = ((_SubmittedName == null)? 0 :_SubmittedName.size());
        int idx4 = 0;
        final int len4 = ((_AlternativeName == null)? 0 :_AlternativeName.size());
        int idx5 = 0;
        final int len5 = ((_Component == null)? 0 :_Component.size());
        int idx8 = 0;
        final int len8 = ((_CdAntigenName == null)? 0 :_CdAntigenName.size());
        int idx9 = 0;
        final int len9 = ((_InnName == null)? 0 :_InnName.size());
        while (idx4 != len4) {
            idx4 += 1;
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
        while (idx8 != len8) {
            idx8 += 1;
        }
        while (idx9 != len9) {
            idx9 += 1;
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
        while (idx5 != len5) {
            idx5 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.uniprot.uniprot.ProteinType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun."
+"msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribut"
+"esL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsr\u0000 com.sun.msv.gramma"
+"r.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psr\u0000 com.sun.msv.grammar.Attri"
+"buteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0010xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psr"
+"\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0013\u0001q\u0000~\u0000\u001esr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000co"
+"m.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\u001fq\u0000~\u0000$sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000&xq\u0000~"
+"\u0000!t\u00007org.uniprot.uniprot.ProteinNameGroupRecommendedNameType"
+"t\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\rppsq\u0000~\u0000\u001b"
+"q\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg"
+"/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/"
+"msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.Qna"
+"meType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003"
+"L\u0000\fnamespaceUriq\u0000~\u0000&L\u0000\btypeNameq\u0000~\u0000&L\u0000\nwhiteSpacet\u0000.Lcom/sun"
+"/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org"
+"/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpa"
+"ceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expr"
+"ession$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.u"
+"til.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000&L\u0000\fnamespaceURIq\u0000~"
+"\u0000&xpq\u0000~\u00007q\u0000~\u00006sq\u0000~\u0000%t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSche"
+"ma-instanceq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u000frecommendedNamet\u0000\u001ahttp://uniprot.or"
+"g/uniprotq\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000"
+"\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00007"
+"org.uniprot.uniprot.ProteinNameGroupAlternativeNameTypeq\u0000~\u0000)"
+"sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u000falternativeNameq"
+"\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000s"
+"q\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00005org.u"
+"niprot.uniprot.ProteinNameGroupSubmittedNameTypeq\u0000~\u0000)sq\u0000~\u0000\rp"
+"psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\rsubmittedNameq\u0000~\u0000Dq\u0000~\u0000$"
+"sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq"
+"\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\'org.uniprot.uniprot.Eviden"
+"cedStringTypeq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t"
+"\u0000\fallergenNameq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fp"
+"p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000i"
+"q\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u000bbiotechName"
+"q\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000"
+"sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000iq\u0000"
+"~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\rCdAntigenName"
+"q\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000"
+"sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000iq\u0000"
+"~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0007innNameq\u0000~\u0000Dq"
+"\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\r"
+"ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000*org.unipro"
+"t.uniprot.ProteinType.DomainTypeq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~"
+"\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0006domainq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000"
+"~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq"
+"\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000-org.uniprot.uniprot.ProteinType.Compo"
+"nentTypeq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\tcom"
+"ponentq\u0000~\u0000Dq\u0000~\u0000$sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Close"
+"dHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0"
+"N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gra"
+"mmar/ExpressionPool;xp\u0000\u0000\u0000;\u0001pq\u0000~\u0000\u0005q\u0000~\u0000nq\u0000~\u0000aq\u0000~\u0000\u000eq\u0000~\u0000\tq\u0000~\u0000\u0094q\u0000"
+"~\u0000\u0087q\u0000~\u0000zq\u0000~\u0000Sq\u0000~\u0000Eq\u0000~\u0000\u00a2q\u0000~\u0000\u00a7q\u0000~\u0000\u0099q\u0000~\u0000\u008cq\u0000~\u0000\u007fq\u0000~\u0000rq\u0000~\u0000eq\u0000~\u0000\fq\u0000"
+"~\u0000Xq\u0000~\u0000Jq\u0000~\u0000\u0017q\u0000~\u0000\u00a5q\u0000~\u0000\u0097q\u0000~\u0000\u008aq\u0000~\u0000}q\u0000~\u0000pq\u0000~\u0000cq\u0000~\u0000Vq\u0000~\u0000Hq\u0000~\u0000\u0015q\u0000"
+"~\u0000\u000bq\u0000~\u0000\u0007q\u0000~\u0000\u00a3q\u0000~\u0000\u0095q\u0000~\u0000\u0088q\u0000~\u0000{q\u0000~\u0000Tq\u0000~\u0000Fq\u0000~\u0000\u00acq\u0000~\u0000\u009eq\u0000~\u0000\u0090q\u0000~\u0000\u0083q\u0000"
+"~\u0000vq\u0000~\u0000jq\u0000~\u0000]q\u0000~\u0000Oq\u0000~\u0000*q\u0000~\u0000\bq\u0000~\u0000\u00a8q\u0000~\u0000\u009aq\u0000~\u0000\u008dq\u0000~\u0000\u0080q\u0000~\u0000sq\u0000~\u0000fq\u0000"
+"~\u0000Yq\u0000~\u0000Kq\u0000~\u0000\u001aq\u0000~\u0000\u0006q\u0000~\u0000\nx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public boolean equals(java.lang.Object obj) {
        if (this == obj) {
            return true;
        }
        if ((null == obj)||(!(obj instanceof org.uniprot.uniprot.ProteinType))) {
            return false;
        }
        org.uniprot.uniprot.impl.ProteinTypeImpl target = ((org.uniprot.uniprot.impl.ProteinTypeImpl) obj);
        {
            java.util.List value = this.getDomain();
            java.util.List targetValue = target.getDomain();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getSubmittedName();
            java.util.List targetValue = target.getSubmittedName();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            org.uniprot.uniprot.EvidencedStringType value = this.getAllergenName();
            org.uniprot.uniprot.EvidencedStringType targetValue = target.getAllergenName();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getAlternativeName();
            java.util.List targetValue = target.getAlternativeName();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getComponent();
            java.util.List targetValue = target.getComponent();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            org.uniprot.uniprot.EvidencedStringType value = this.getBiotechName();
            org.uniprot.uniprot.EvidencedStringType targetValue = target.getBiotechName();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            org.uniprot.uniprot.ProteinNameGroupRecommendedNameType value = this.getRecommendedName();
            org.uniprot.uniprot.ProteinNameGroupRecommendedNameType targetValue = target.getRecommendedName();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getCdAntigenName();
            java.util.List targetValue = target.getCdAntigenName();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        {
            java.util.List value = this.getInnName();
            java.util.List targetValue = target.getInnName();
            if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                return false;
            }
        }
        return true;
    }

    public int hashCode() {
        int hash = 7;
        {
            java.util.List value = this.getDomain();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getSubmittedName();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            org.uniprot.uniprot.EvidencedStringType value = this.getAllergenName();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getAlternativeName();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getComponent();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            org.uniprot.uniprot.EvidencedStringType value = this.getBiotechName();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            org.uniprot.uniprot.ProteinNameGroupRecommendedNameType value = this.getRecommendedName();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getCdAntigenName();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        {
            java.util.List value = this.getInnName();
            hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
        }
        return hash;
    }

    public java.lang.Long getHjid() {
        return _Hjid;
    }

    public void setHjid(java.lang.Long value) {
        _Hjid = value;
    }

    public java.lang.Long getHjversion() {
        return _Hjversion;
    }

    public void setHjversion(java.lang.Long value) {
        _Hjversion = value;
    }

    public static class ComponentTypeImpl implements org.uniprot.uniprot.ProteinType.ComponentType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _SubmittedName;
        protected org.uniprot.uniprot.EvidencedStringType _AllergenName;
        protected com.sun.xml.bind.util.ListImpl _AlternativeName;
        protected org.uniprot.uniprot.EvidencedStringType _BiotechName;
        protected org.uniprot.uniprot.ProteinNameGroupRecommendedNameType _RecommendedName;
        protected com.sun.xml.bind.util.ListImpl _CdAntigenName;
        protected com.sun.xml.bind.util.ListImpl _InnName;
        public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;
        protected java.lang.Long _Hjid;
        protected java.lang.Long _Hjversion;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.uniprot.uniprot.ProteinType.ComponentType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getSubmittedName() {
            if (_SubmittedName == null) {
                _SubmittedName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _SubmittedName;
        }

        public java.util.List getSubmittedName() {
            return _getSubmittedName();
        }

        public org.uniprot.uniprot.EvidencedStringType getAllergenName() {
            return _AllergenName;
        }

        public void setAllergenName(org.uniprot.uniprot.EvidencedStringType value) {
            _AllergenName = value;
        }

        protected com.sun.xml.bind.util.ListImpl _getAlternativeName() {
            if (_AlternativeName == null) {
                _AlternativeName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _AlternativeName;
        }

        public java.util.List getAlternativeName() {
            return _getAlternativeName();
        }

        public org.uniprot.uniprot.EvidencedStringType getBiotechName() {
            return _BiotechName;
        }

        public void setBiotechName(org.uniprot.uniprot.EvidencedStringType value) {
            _BiotechName = value;
        }

        public org.uniprot.uniprot.ProteinNameGroupRecommendedNameType getRecommendedName() {
            return _RecommendedName;
        }

        public void setRecommendedName(org.uniprot.uniprot.ProteinNameGroupRecommendedNameType value) {
            _RecommendedName = value;
        }

        protected com.sun.xml.bind.util.ListImpl _getCdAntigenName() {
            if (_CdAntigenName == null) {
                _CdAntigenName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _CdAntigenName;
        }

        public java.util.List getCdAntigenName() {
            return _getCdAntigenName();
        }

        protected com.sun.xml.bind.util.ListImpl _getInnName() {
            if (_InnName == null) {
                _InnName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _InnName;
        }

        public java.util.List getInnName() {
            return _getInnName();
        }

        public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            return new org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_SubmittedName == null)? 0 :_SubmittedName.size());
            int idx3 = 0;
            final int len3 = ((_AlternativeName == null)? 0 :_AlternativeName.size());
            int idx6 = 0;
            final int len6 = ((_CdAntigenName == null)? 0 :_CdAntigenName.size());
            int idx7 = 0;
            final int len7 = ((_InnName == null)? 0 :_InnName.size());
            if (_RecommendedName!= null) {
                context.startElement("http://uniprot.org/uniprot", "recommendedName");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RecommendedName), "RecommendedName");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RecommendedName), "RecommendedName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _RecommendedName), "RecommendedName");
                context.endElement();
            }
            while (idx3 != len3) {
                context.startElement("http://uniprot.org/uniprot", "alternativeName");
                int idx_2 = idx3;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AlternativeName.get(idx_2 ++)), "AlternativeName");
                context.endNamespaceDecls();
                int idx_3 = idx3;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AlternativeName.get(idx_3 ++)), "AlternativeName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AlternativeName.get(idx3 ++)), "AlternativeName");
                context.endElement();
            }
            while (idx1 != len1) {
                context.startElement("http://uniprot.org/uniprot", "submittedName");
                int idx_4 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SubmittedName.get(idx_4 ++)), "SubmittedName");
                context.endNamespaceDecls();
                int idx_5 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SubmittedName.get(idx_5 ++)), "SubmittedName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SubmittedName.get(idx1 ++)), "SubmittedName");
                context.endElement();
            }
            if (_AllergenName!= null) {
                context.startElement("http://uniprot.org/uniprot", "allergenName");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AllergenName), "AllergenName");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AllergenName), "AllergenName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AllergenName), "AllergenName");
                context.endElement();
            }
            if (_BiotechName!= null) {
                context.startElement("http://uniprot.org/uniprot", "biotechName");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _BiotechName), "BiotechName");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _BiotechName), "BiotechName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _BiotechName), "BiotechName");
                context.endElement();
            }
            while (idx6 != len6) {
                context.startElement("http://uniprot.org/uniprot", "CdAntigenName");
                int idx_10 = idx6;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CdAntigenName.get(idx_10 ++)), "CdAntigenName");
                context.endNamespaceDecls();
                int idx_11 = idx6;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CdAntigenName.get(idx_11 ++)), "CdAntigenName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CdAntigenName.get(idx6 ++)), "CdAntigenName");
                context.endElement();
            }
            while (idx7 != len7) {
                context.startElement("http://uniprot.org/uniprot", "innName");
                int idx_12 = idx7;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InnName.get(idx_12 ++)), "InnName");
                context.endNamespaceDecls();
                int idx_13 = idx7;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InnName.get(idx_13 ++)), "InnName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InnName.get(idx7 ++)), "InnName");
                context.endElement();
            }
        }

        public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_SubmittedName == null)? 0 :_SubmittedName.size());
            int idx3 = 0;
            final int len3 = ((_AlternativeName == null)? 0 :_AlternativeName.size());
            int idx6 = 0;
            final int len6 = ((_CdAntigenName == null)? 0 :_CdAntigenName.size());
            int idx7 = 0;
            final int len7 = ((_InnName == null)? 0 :_InnName.size());
            while (idx3 != len3) {
                idx3 += 1;
            }
            while (idx1 != len1) {
                idx1 += 1;
            }
            while (idx6 != len6) {
                idx6 += 1;
            }
            while (idx7 != len7) {
                idx7 += 1;
            }
        }

        public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_SubmittedName == null)? 0 :_SubmittedName.size());
            int idx3 = 0;
            final int len3 = ((_AlternativeName == null)? 0 :_AlternativeName.size());
            int idx6 = 0;
            final int len6 = ((_CdAntigenName == null)? 0 :_CdAntigenName.size());
            int idx7 = 0;
            final int len7 = ((_InnName == null)? 0 :_InnName.size());
            while (idx3 != len3) {
                idx3 += 1;
            }
            while (idx1 != len1) {
                idx1 += 1;
            }
            while (idx6 != len6) {
                idx6 += 1;
            }
            while (idx7 != len7) {
                idx7 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.uniprot.uniprot.ProteinType.ComponentType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com."
+"sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000"
+"\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Elem"
+"entExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentMode"
+"lq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000exq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.sun.msv.gr"
+"ammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0011\u0001"
+"q\u0000~\u0000\u001csr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom."
+"sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001dq\u0000~\u0000\"sr\u0000"
+"#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet"
+"\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000$xq\u0000~\u0000\u001ft\u00007org.uniprot"
+".uniprot.ProteinNameGroupRecommendedNameTypet\u0000+http://java.s"
+"un.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000bppsq\u0000~\u0000\u0019q\u0000~\u0000\u0012psr\u0000\u001bcom.su"
+"n.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatyp"
+"e/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringP"
+"air;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.su"
+"n.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq"
+"\u0000~\u0000$L\u0000\btypeNameq\u0000~\u0000$L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xs"
+"d/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat"
+"\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Coll"
+"apse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProces"
+"sor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t"
+"\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000$L\u0000\fnamespaceURIq\u0000~\u0000$xpq\u0000~\u00005q\u0000~\u00004sq"
+"\u0000~\u0000#t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\""
+"sq\u0000~\u0000#t\u0000\u000frecommendedNamet\u0000\u001ahttp://uniprot.org/uniprotq\u0000~\u0000\"sq"
+"\u0000~\u0000\u000bppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~"
+"\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u00007org.uniprot.unip"
+"rot.ProteinNameGroupAlternativeNameTypeq\u0000~\u0000\'sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0019q\u0000"
+"~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000falternativeNameq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\u000bp"
+"psq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u00005org.uniprot.uniprot.P"
+"roteinNameGroupSubmittedNameTypeq\u0000~\u0000\'sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~"
+"\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\rsubmittedNameq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000"
+"~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq"
+"\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\'org.uniprot.uniprot.EvidencedStringTypeq\u0000~"
+"\u0000\'sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\fallergenNameq\u0000"
+"~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0016"
+"q\u0000~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000gq\u0000~\u0000\'sq\u0000~\u0000\u000bppsq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000bbiotechNameq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\u000b"
+"ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000gq\u0000~\u0000\'sq\u0000~\u0000\u000bppsq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\rCdAntigenNameq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\u000b"
+"ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000gq\u0000~\u0000\'sq\u0000~\u0000\u000bppsq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u0007innNameq\u0000~\u0000Bq\u0000~\u0000\"sr\u0000\"com.sun."
+"msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/"
+"msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gram"
+"mar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVer"
+"sionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000-\u0001p"
+"q\u0000~\u0000\u0015q\u0000~\u0000Hq\u0000~\u0000Vq\u0000~\u0000cq\u0000~\u0000pq\u0000~\u0000}q\u0000~\u0000\u008aq\u0000~\u0000\u0006q\u0000~\u0000\fq\u0000~\u0000_q\u0000~\u0000lq\u0000~\u0000\u0007"
+"q\u0000~\u0000\u0013q\u0000~\u0000Fq\u0000~\u0000Tq\u0000~\u0000aq\u0000~\u0000nq\u0000~\u0000{q\u0000~\u0000\u0088q\u0000~\u0000\bq\u0000~\u0000Dq\u0000~\u0000Rq\u0000~\u0000yq\u0000~\u0000\u0018"
+"q\u0000~\u0000Iq\u0000~\u0000Wq\u0000~\u0000dq\u0000~\u0000qq\u0000~\u0000~q\u0000~\u0000\u008bq\u0000~\u0000\u0086q\u0000~\u0000Cq\u0000~\u0000Qq\u0000~\u0000\nq\u0000~\u0000xq\u0000~\u0000\t"
+"q\u0000~\u0000\u0085q\u0000~\u0000(q\u0000~\u0000Mq\u0000~\u0000[q\u0000~\u0000hq\u0000~\u0000tq\u0000~\u0000\u0081q\u0000~\u0000\u008eq\u0000~\u0000\u0005x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public boolean equals(java.lang.Object obj) {
            if (this == obj) {
                return true;
            }
            if ((null == obj)||(!(obj instanceof org.uniprot.uniprot.ProteinType.ComponentType))) {
                return false;
            }
            org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl target = ((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) obj);
            {
                java.util.List value = this.getSubmittedName();
                java.util.List targetValue = target.getSubmittedName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                org.uniprot.uniprot.EvidencedStringType value = this.getAllergenName();
                org.uniprot.uniprot.EvidencedStringType targetValue = target.getAllergenName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                java.util.List value = this.getAlternativeName();
                java.util.List targetValue = target.getAlternativeName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                org.uniprot.uniprot.EvidencedStringType value = this.getBiotechName();
                org.uniprot.uniprot.EvidencedStringType targetValue = target.getBiotechName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                org.uniprot.uniprot.ProteinNameGroupRecommendedNameType value = this.getRecommendedName();
                org.uniprot.uniprot.ProteinNameGroupRecommendedNameType targetValue = target.getRecommendedName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                java.util.List value = this.getCdAntigenName();
                java.util.List targetValue = target.getCdAntigenName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                java.util.List value = this.getInnName();
                java.util.List targetValue = target.getInnName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            return true;
        }

        public int hashCode() {
            int hash = 7;
            {
                java.util.List value = this.getSubmittedName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                org.uniprot.uniprot.EvidencedStringType value = this.getAllergenName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                java.util.List value = this.getAlternativeName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                org.uniprot.uniprot.EvidencedStringType value = this.getBiotechName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                org.uniprot.uniprot.ProteinNameGroupRecommendedNameType value = this.getRecommendedName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                java.util.List value = this.getCdAntigenName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                java.util.List value = this.getInnName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            return hash;
        }

        public java.lang.Long getHjid() {
            return _Hjid;
        }

        public void setHjid(java.lang.Long value) {
            _Hjid = value;
        }

        public java.lang.Long getHjversion() {
            return _Hjversion;
        }

        public void setHjversion(java.lang.Long value) {
            _Hjversion = value;
        }

        public class Unmarshaller
            extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
                super(context, "----------------------");
            }

            protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  16 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  19 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  15 :
                            if (("CdAntigenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 16;
                                return ;
                            }
                            state = 18;
                            continue outer;
                        case  10 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  18 :
                            if (("CdAntigenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 16;
                                return ;
                            }
                            if (("innName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 19;
                                return ;
                            }
                            state = 21;
                            continue outer;
                        case  3 :
                            if (("alternativeName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            state = 6;
                            continue outer;
                        case  13 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            if (("fullName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                _RecommendedName = ((org.uniprot.uniprot.impl.ProteinNameGroupRecommendedNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupRecommendedNameTypeImpl.class), 2, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  9 :
                            if (("submittedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 7;
                                return ;
                            }
                            if (("allergenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            if (("fullName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                _getSubmittedName().add(((org.uniprot.uniprot.impl.ProteinNameGroupSubmittedNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupSubmittedNameTypeImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                        case  12 :
                            if (("biotechName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 13;
                                return ;
                            }
                            state = 15;
                            continue outer;
                        case  21 :
                            if (("innName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 19;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  6 :
                            if (("alternativeName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            if (("submittedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  0 :
                            if (("recommendedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            if (("fullName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("shortName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  16 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  20 :
                            if (("innName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 21;
                                return ;
                            }
                            break;
                        case  19 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  10 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  2 :
                            if (("recommendedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  8 :
                            if (("submittedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  13 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  14 :
                            if (("biotechName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 15;
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  21 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  17 :
                            if (("CdAntigenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 18;
                                return ;
                            }
                            break;
                        case  5 :
                            if (("alternativeName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  4 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromLeaveElement((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        case  11 :
                            if (("allergenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 12;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  16 :
                            if (("evidence" == ___local)&&("" == ___uri)) {
                                _getCdAntigenName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 17, ___uri, ___local, ___qname)));
                                return ;
                            }
                            if (("status" == ___local)&&("" == ___uri)) {
                                _getCdAntigenName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 17, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  19 :
                            if (("evidence" == ___local)&&("" == ___uri)) {
                                _getInnName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 20, ___uri, ___local, ___qname)));
                                return ;
                            }
                            if (("status" == ___local)&&("" == ___uri)) {
                                _getInnName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 20, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  10 :
                            if (("evidence" == ___local)&&("" == ___uri)) {
                                _AllergenName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 11, ___uri, ___local, ___qname));
                                return ;
                            }
                            if (("status" == ___local)&&("" == ___uri)) {
                                _AllergenName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 11, ___uri, ___local, ___qname));
                                return ;
                            }
                            break;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  13 :
                            if (("evidence" == ___local)&&("" == ___uri)) {
                                _BiotechName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            }
                            if (("status" == ___local)&&("" == ___uri)) {
                                _BiotechName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            }
                            break;
                        case  1 :
                            if (("ref" == ___local)&&("" == ___uri)) {
                                _RecommendedName = ((org.uniprot.uniprot.impl.ProteinNameGroupRecommendedNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameGroupRecommendedNameTypeImpl.class), 2, ___uri, ___local, ___qname));
                                return ;
                            }
                            break;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  7 :
                            if (("ref" == ___local)&&("" == ___uri)) {
                                _getSubmittedName().add(((org.uniprot.uniprot.impl.ProteinNameGroupSubmittedNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameGroupSubmittedNameTypeImpl.class), 8, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  21 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  4 :
                            if (("ref" == ___local)&&("" == ___uri)) {
                                _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname)));
                                return ;
                            }
                            _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  16 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  19 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  10 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  13 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  21 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromLeaveAttribute((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  16 :
                                attIdx = context.getAttribute("", "evidence");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "status");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _getCdAntigenName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 17, value)));
                                return ;
                            case  19 :
                                attIdx = context.getAttribute("", "evidence");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "status");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _getInnName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 20, value)));
                                return ;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  10 :
                                attIdx = context.getAttribute("", "evidence");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "status");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _AllergenName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 11, value));
                                return ;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  13 :
                                attIdx = context.getAttribute("", "evidence");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "status");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _BiotechName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 14, value));
                                return ;
                            case  1 :
                                attIdx = context.getAttribute("", "ref");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  7 :
                                attIdx = context.getAttribute("", "ref");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  21 :
                                revertToParentFromText(value);
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  4 :
                                attIdx = context.getAttribute("", "ref");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, value)));
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class DomainTypeImpl implements org.uniprot.uniprot.ProteinType.DomainType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _SubmittedName;
        protected org.uniprot.uniprot.EvidencedStringType _AllergenName;
        protected com.sun.xml.bind.util.ListImpl _AlternativeName;
        protected org.uniprot.uniprot.EvidencedStringType _BiotechName;
        protected org.uniprot.uniprot.ProteinNameGroupRecommendedNameType _RecommendedName;
        protected com.sun.xml.bind.util.ListImpl _CdAntigenName;
        protected com.sun.xml.bind.util.ListImpl _InnName;
        public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;
        protected java.lang.Long _Hjid;
        protected java.lang.Long _Hjversion;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.uniprot.uniprot.ProteinType.DomainType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getSubmittedName() {
            if (_SubmittedName == null) {
                _SubmittedName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _SubmittedName;
        }

        public java.util.List getSubmittedName() {
            return _getSubmittedName();
        }

        public org.uniprot.uniprot.EvidencedStringType getAllergenName() {
            return _AllergenName;
        }

        public void setAllergenName(org.uniprot.uniprot.EvidencedStringType value) {
            _AllergenName = value;
        }

        protected com.sun.xml.bind.util.ListImpl _getAlternativeName() {
            if (_AlternativeName == null) {
                _AlternativeName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _AlternativeName;
        }

        public java.util.List getAlternativeName() {
            return _getAlternativeName();
        }

        public org.uniprot.uniprot.EvidencedStringType getBiotechName() {
            return _BiotechName;
        }

        public void setBiotechName(org.uniprot.uniprot.EvidencedStringType value) {
            _BiotechName = value;
        }

        public org.uniprot.uniprot.ProteinNameGroupRecommendedNameType getRecommendedName() {
            return _RecommendedName;
        }

        public void setRecommendedName(org.uniprot.uniprot.ProteinNameGroupRecommendedNameType value) {
            _RecommendedName = value;
        }

        protected com.sun.xml.bind.util.ListImpl _getCdAntigenName() {
            if (_CdAntigenName == null) {
                _CdAntigenName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _CdAntigenName;
        }

        public java.util.List getCdAntigenName() {
            return _getCdAntigenName();
        }

        protected com.sun.xml.bind.util.ListImpl _getInnName() {
            if (_InnName == null) {
                _InnName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _InnName;
        }

        public java.util.List getInnName() {
            return _getInnName();
        }

        public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            return new org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_SubmittedName == null)? 0 :_SubmittedName.size());
            int idx3 = 0;
            final int len3 = ((_AlternativeName == null)? 0 :_AlternativeName.size());
            int idx6 = 0;
            final int len6 = ((_CdAntigenName == null)? 0 :_CdAntigenName.size());
            int idx7 = 0;
            final int len7 = ((_InnName == null)? 0 :_InnName.size());
            if (_RecommendedName!= null) {
                context.startElement("http://uniprot.org/uniprot", "recommendedName");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RecommendedName), "RecommendedName");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RecommendedName), "RecommendedName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _RecommendedName), "RecommendedName");
                context.endElement();
            }
            while (idx3 != len3) {
                context.startElement("http://uniprot.org/uniprot", "alternativeName");
                int idx_2 = idx3;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AlternativeName.get(idx_2 ++)), "AlternativeName");
                context.endNamespaceDecls();
                int idx_3 = idx3;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AlternativeName.get(idx_3 ++)), "AlternativeName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AlternativeName.get(idx3 ++)), "AlternativeName");
                context.endElement();
            }
            while (idx1 != len1) {
                context.startElement("http://uniprot.org/uniprot", "submittedName");
                int idx_4 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SubmittedName.get(idx_4 ++)), "SubmittedName");
                context.endNamespaceDecls();
                int idx_5 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SubmittedName.get(idx_5 ++)), "SubmittedName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SubmittedName.get(idx1 ++)), "SubmittedName");
                context.endElement();
            }
            if (_AllergenName!= null) {
                context.startElement("http://uniprot.org/uniprot", "allergenName");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AllergenName), "AllergenName");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AllergenName), "AllergenName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AllergenName), "AllergenName");
                context.endElement();
            }
            if (_BiotechName!= null) {
                context.startElement("http://uniprot.org/uniprot", "biotechName");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _BiotechName), "BiotechName");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _BiotechName), "BiotechName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _BiotechName), "BiotechName");
                context.endElement();
            }
            while (idx6 != len6) {
                context.startElement("http://uniprot.org/uniprot", "CdAntigenName");
                int idx_10 = idx6;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CdAntigenName.get(idx_10 ++)), "CdAntigenName");
                context.endNamespaceDecls();
                int idx_11 = idx6;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CdAntigenName.get(idx_11 ++)), "CdAntigenName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CdAntigenName.get(idx6 ++)), "CdAntigenName");
                context.endElement();
            }
            while (idx7 != len7) {
                context.startElement("http://uniprot.org/uniprot", "innName");
                int idx_12 = idx7;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InnName.get(idx_12 ++)), "InnName");
                context.endNamespaceDecls();
                int idx_13 = idx7;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InnName.get(idx_13 ++)), "InnName");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InnName.get(idx7 ++)), "InnName");
                context.endElement();
            }
        }

        public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_SubmittedName == null)? 0 :_SubmittedName.size());
            int idx3 = 0;
            final int len3 = ((_AlternativeName == null)? 0 :_AlternativeName.size());
            int idx6 = 0;
            final int len6 = ((_CdAntigenName == null)? 0 :_CdAntigenName.size());
            int idx7 = 0;
            final int len7 = ((_InnName == null)? 0 :_InnName.size());
            while (idx3 != len3) {
                idx3 += 1;
            }
            while (idx1 != len1) {
                idx1 += 1;
            }
            while (idx6 != len6) {
                idx6 += 1;
            }
            while (idx7 != len7) {
                idx7 += 1;
            }
        }

        public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_SubmittedName == null)? 0 :_SubmittedName.size());
            int idx3 = 0;
            final int len3 = ((_AlternativeName == null)? 0 :_AlternativeName.size());
            int idx6 = 0;
            final int len6 = ((_CdAntigenName == null)? 0 :_CdAntigenName.size());
            int idx7 = 0;
            final int len7 = ((_InnName == null)? 0 :_InnName.size());
            while (idx3 != len3) {
                idx3 += 1;
            }
            while (idx1 != len1) {
                idx1 += 1;
            }
            while (idx6 != len6) {
                idx6 += 1;
            }
            while (idx7 != len7) {
                idx7 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.uniprot.uniprot.ProteinType.DomainType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com."
+"sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000"
+"\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Elem"
+"entExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentMode"
+"lq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000exq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.sun.msv.gr"
+"ammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0011\u0001"
+"q\u0000~\u0000\u001csr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom."
+"sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001dq\u0000~\u0000\"sr\u0000"
+"#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet"
+"\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000$xq\u0000~\u0000\u001ft\u00007org.uniprot"
+".uniprot.ProteinNameGroupRecommendedNameTypet\u0000+http://java.s"
+"un.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000bppsq\u0000~\u0000\u0019q\u0000~\u0000\u0012psr\u0000\u001bcom.su"
+"n.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatyp"
+"e/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringP"
+"air;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.su"
+"n.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq"
+"\u0000~\u0000$L\u0000\btypeNameq\u0000~\u0000$L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xs"
+"d/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat"
+"\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Coll"
+"apse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProces"
+"sor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t"
+"\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000$L\u0000\fnamespaceURIq\u0000~\u0000$xpq\u0000~\u00005q\u0000~\u00004sq"
+"\u0000~\u0000#t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\""
+"sq\u0000~\u0000#t\u0000\u000frecommendedNamet\u0000\u001ahttp://uniprot.org/uniprotq\u0000~\u0000\"sq"
+"\u0000~\u0000\u000bppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~"
+"\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u00007org.uniprot.unip"
+"rot.ProteinNameGroupAlternativeNameTypeq\u0000~\u0000\'sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0019q\u0000"
+"~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000falternativeNameq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\u000bp"
+"psq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u00005org.uniprot.uniprot.P"
+"roteinNameGroupSubmittedNameTypeq\u0000~\u0000\'sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~"
+"\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\rsubmittedNameq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000"
+"~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq"
+"\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\'org.uniprot.uniprot.EvidencedStringTypeq\u0000~"
+"\u0000\'sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\fallergenNameq\u0000"
+"~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0016"
+"q\u0000~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000gq\u0000~\u0000\'sq\u0000~\u0000\u000bppsq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000bbiotechNameq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\u000b"
+"ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000gq\u0000~\u0000\'sq\u0000~\u0000\u000bppsq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\rCdAntigenNameq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\u000b"
+"ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000gq\u0000~\u0000\'sq\u0000~\u0000\u000bppsq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u0007innNameq\u0000~\u0000Bq\u0000~\u0000\"sr\u0000\"com.sun."
+"msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/"
+"msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gram"
+"mar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVer"
+"sionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000-\u0001p"
+"q\u0000~\u0000\u0015q\u0000~\u0000Hq\u0000~\u0000Vq\u0000~\u0000cq\u0000~\u0000pq\u0000~\u0000}q\u0000~\u0000\u008aq\u0000~\u0000\u0006q\u0000~\u0000\fq\u0000~\u0000_q\u0000~\u0000lq\u0000~\u0000\u0007"
+"q\u0000~\u0000\u0013q\u0000~\u0000Fq\u0000~\u0000Tq\u0000~\u0000aq\u0000~\u0000nq\u0000~\u0000{q\u0000~\u0000\u0088q\u0000~\u0000\bq\u0000~\u0000Dq\u0000~\u0000Rq\u0000~\u0000yq\u0000~\u0000\u0018"
+"q\u0000~\u0000Iq\u0000~\u0000Wq\u0000~\u0000dq\u0000~\u0000qq\u0000~\u0000~q\u0000~\u0000\u008bq\u0000~\u0000\u0086q\u0000~\u0000Cq\u0000~\u0000Qq\u0000~\u0000\nq\u0000~\u0000xq\u0000~\u0000\t"
+"q\u0000~\u0000\u0085q\u0000~\u0000(q\u0000~\u0000Mq\u0000~\u0000[q\u0000~\u0000hq\u0000~\u0000tq\u0000~\u0000\u0081q\u0000~\u0000\u008eq\u0000~\u0000\u0005x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public boolean equals(java.lang.Object obj) {
            if (this == obj) {
                return true;
            }
            if ((null == obj)||(!(obj instanceof org.uniprot.uniprot.ProteinType.DomainType))) {
                return false;
            }
            org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl target = ((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) obj);
            {
                java.util.List value = this.getSubmittedName();
                java.util.List targetValue = target.getSubmittedName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                org.uniprot.uniprot.EvidencedStringType value = this.getAllergenName();
                org.uniprot.uniprot.EvidencedStringType targetValue = target.getAllergenName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                java.util.List value = this.getAlternativeName();
                java.util.List targetValue = target.getAlternativeName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                org.uniprot.uniprot.EvidencedStringType value = this.getBiotechName();
                org.uniprot.uniprot.EvidencedStringType targetValue = target.getBiotechName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                org.uniprot.uniprot.ProteinNameGroupRecommendedNameType value = this.getRecommendedName();
                org.uniprot.uniprot.ProteinNameGroupRecommendedNameType targetValue = target.getRecommendedName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                java.util.List value = this.getCdAntigenName();
                java.util.List targetValue = target.getCdAntigenName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            {
                java.util.List value = this.getInnName();
                java.util.List targetValue = target.getInnName();
                if (!((value == targetValue)||((value!= null)&&value.equals(targetValue)))) {
                    return false;
                }
            }
            return true;
        }

        public int hashCode() {
            int hash = 7;
            {
                java.util.List value = this.getSubmittedName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                org.uniprot.uniprot.EvidencedStringType value = this.getAllergenName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                java.util.List value = this.getAlternativeName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                org.uniprot.uniprot.EvidencedStringType value = this.getBiotechName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                org.uniprot.uniprot.ProteinNameGroupRecommendedNameType value = this.getRecommendedName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                java.util.List value = this.getCdAntigenName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            {
                java.util.List value = this.getInnName();
                hash = ((31 *hash)+((null == value)? 0 :value.hashCode()));
            }
            return hash;
        }

        public java.lang.Long getHjid() {
            return _Hjid;
        }

        public void setHjid(java.lang.Long value) {
            _Hjid = value;
        }

        public java.lang.Long getHjversion() {
            return _Hjversion;
        }

        public void setHjversion(java.lang.Long value) {
            _Hjversion = value;
        }

        public class Unmarshaller
            extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
                super(context, "----------------------");
            }

            protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  7 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            if (("fullName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                _getSubmittedName().add(((org.uniprot.uniprot.impl.ProteinNameGroupSubmittedNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupSubmittedNameTypeImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                        case  0 :
                            if (("recommendedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  9 :
                            if (("submittedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 7;
                                return ;
                            }
                            if (("allergenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                        case  18 :
                            if (("CdAntigenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 16;
                                return ;
                            }
                            if (("innName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 19;
                                return ;
                            }
                            state = 21;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  15 :
                            if (("CdAntigenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 16;
                                return ;
                            }
                            state = 18;
                            continue outer;
                        case  3 :
                            if (("alternativeName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            state = 6;
                            continue outer;
                        case  1 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            if (("fullName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                _RecommendedName = ((org.uniprot.uniprot.impl.ProteinNameGroupRecommendedNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupRecommendedNameTypeImpl.class), 2, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            break;
                        case  13 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  6 :
                            if (("alternativeName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            if (("submittedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            if (("fullName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("shortName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        case  21 :
                            if (("innName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 19;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  12 :
                            if (("biotechName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 13;
                                return ;
                            }
                            state = 15;
                            continue outer;
                        case  19 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                        case  10 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  7 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  2 :
                            if (("recommendedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  14 :
                            if (("biotechName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 15;
                                return ;
                            }
                            break;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  8 :
                            if (("submittedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  17 :
                            if (("CdAntigenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 18;
                                return ;
                            }
                            break;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  5 :
                            if (("alternativeName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  13 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromLeaveElement((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        case  21 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  20 :
                            if (("innName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 21;
                                return ;
                            }
                            break;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  11 :
                            if (("allergenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                                context.popAttributes();
                                state = 12;
                                return ;
                            }
                            break;
                        case  19 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  10 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  7 :
                            if (("ref" == ___local)&&("" == ___uri)) {
                                _getSubmittedName().add(((org.uniprot.uniprot.impl.ProteinNameGroupSubmittedNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameGroupSubmittedNameTypeImpl.class), 8, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  16 :
                            if (("evidence" == ___local)&&("" == ___uri)) {
                                _getCdAntigenName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 17, ___uri, ___local, ___qname)));
                                return ;
                            }
                            if (("status" == ___local)&&("" == ___uri)) {
                                _getCdAntigenName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 17, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  1 :
                            if (("ref" == ___local)&&("" == ___uri)) {
                                _RecommendedName = ((org.uniprot.uniprot.impl.ProteinNameGroupRecommendedNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameGroupRecommendedNameTypeImpl.class), 2, ___uri, ___local, ___qname));
                                return ;
                            }
                            break;
                        case  13 :
                            if (("evidence" == ___local)&&("" == ___uri)) {
                                _BiotechName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            }
                            if (("status" == ___local)&&("" == ___uri)) {
                                _BiotechName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  4 :
                            if (("ref" == ___local)&&("" == ___uri)) {
                                _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname)));
                                return ;
                            }
                            _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        case  21 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  19 :
                            if (("evidence" == ___local)&&("" == ___uri)) {
                                _getInnName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 20, ___uri, ___local, ___qname)));
                                return ;
                            }
                            if (("status" == ___local)&&("" == ___uri)) {
                                _getInnName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 20, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  10 :
                            if (("evidence" == ___local)&&("" == ___uri)) {
                                _AllergenName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 11, ___uri, ___local, ___qname));
                                return ;
                            }
                            if (("status" == ___local)&&("" == ___uri)) {
                                _AllergenName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 11, ___uri, ___local, ___qname));
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  7 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  1 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  13 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromLeaveAttribute((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        case  21 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  19 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  10 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  7 :
                                attIdx = context.getAttribute("", "ref");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  16 :
                                attIdx = context.getAttribute("", "evidence");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "status");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _getCdAntigenName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 17, value)));
                                return ;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  1 :
                                attIdx = context.getAttribute("", "ref");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  13 :
                                attIdx = context.getAttribute("", "evidence");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "status");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _BiotechName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 14, value));
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  4 :
                                attIdx = context.getAttribute("", "ref");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, value)));
                                return ;
                            case  21 :
                                revertToParentFromText(value);
                                return ;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  19 :
                                attIdx = context.getAttribute("", "evidence");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "status");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _getInnName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 20, value)));
                                return ;
                            case  10 :
                                attIdx = context.getAttribute("", "evidence");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                attIdx = context.getAttribute("", "status");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                _AllergenName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 11, value));
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------");
        }

        protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.uniprot.uniprot.impl.ProteinTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  21 :
                        if (("innName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        if (("domain" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  27 :
                        if (("component" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 25;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  16 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  19 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  24 :
                        if (("domain" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        if (("component" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  25 :
                        if (("recommendedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 26, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("alternativeName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 26, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("submittedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 26, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("allergenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 26, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("biotechName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 26, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CdAntigenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 26, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("innName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 26, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 26, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  7 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("fullName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getSubmittedName().add(((org.uniprot.uniprot.impl.ProteinNameGroupSubmittedNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupSubmittedNameTypeImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  18 :
                        if (("CdAntigenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        if (("innName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  3 :
                        if (("alternativeName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        if (("alternativeName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        if (("submittedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  22 :
                        if (("recommendedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("alternativeName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("submittedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("allergenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("biotechName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CdAntigenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("innName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  4 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("fullName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("shortName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  9 :
                        if (("submittedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("allergenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        if (("CdAntigenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  0 :
                        if (("recommendedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  12 :
                        if (("biotechName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  1 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("fullName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _RecommendedName = ((org.uniprot.uniprot.impl.ProteinNameGroupRecommendedNameTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.ProteinNameGroupRecommendedNameTypeImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  21 :
                        state = 24;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  27 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  16 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  19 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  25 :
                        _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromLeaveElement((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 26, ___uri, ___local, ___qname)));
                        return ;
                    case  7 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  22 :
                        _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromLeaveElement((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 23, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromLeaveElement((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname)));
                        return ;
                    case  8 :
                        if (("submittedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("domain" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  17 :
                        if (("CdAntigenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  5 :
                        if (("alternativeName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("recommendedName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  14 :
                        if (("biotechName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  26 :
                        if (("component" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("allergenName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("innName" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  21 :
                        state = 24;
                        continue outer;
                    case  10 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _AllergenName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 11, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("status" == ___local)&&("" == ___uri)) {
                            _AllergenName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 11, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  27 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  16 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _getCdAntigenName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("status" == ___local)&&("" == ___uri)) {
                            _getCdAntigenName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  19 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _getInnName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 20, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("status" == ___local)&&("" == ___uri)) {
                            _getInnName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 20, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  25 :
                        _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 26, ___uri, ___local, ___qname)));
                        return ;
                    case  7 :
                        if (("ref" == ___local)&&("" == ___uri)) {
                            _getSubmittedName().add(((org.uniprot.uniprot.impl.ProteinNameGroupSubmittedNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameGroupSubmittedNameTypeImpl.class), 8, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  22 :
                        _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 23, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        if (("ref" == ___local)&&("" == ___uri)) {
                            _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname)));
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  13 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            _BiotechName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 14, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("status" == ___local)&&("" == ___uri)) {
                            _BiotechName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 14, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  1 :
                        if (("ref" == ___local)&&("" == ___uri)) {
                            _RecommendedName = ((org.uniprot.uniprot.impl.ProteinNameGroupRecommendedNameTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.ProteinNameGroupRecommendedNameTypeImpl.class), 2, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  21 :
                        state = 24;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  27 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  16 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  19 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  25 :
                        _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromLeaveAttribute((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 26, ___uri, ___local, ___qname)));
                        return ;
                    case  7 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  22 :
                        _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromLeaveAttribute((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 23, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromLeaveAttribute((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, ___uri, ___local, ___qname)));
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  1 :
                        attIdx = context.getAttribute("", "ref");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  21 :
                            state = 24;
                            continue outer;
                        case  10 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _AllergenName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 11, value));
                            return ;
                        case  27 :
                            revertToParentFromText(value);
                            return ;
                        case  16 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getCdAntigenName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 17, value)));
                            return ;
                        case  19 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getInnName().add(((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 20, value)));
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  25 :
                            _getComponent().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.ProteinTypeImpl.ComponentTypeImpl.class), 26, value)));
                            return ;
                        case  7 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  22 :
                            _getDomain().add(((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.ProteinTypeImpl.DomainTypeImpl.class), 23, value)));
                            return ;
                        case  4 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getAlternativeName().add(((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.ProteinNameGroupAlternativeNameTypeImpl.class), 5, value)));
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  13 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _BiotechName = ((org.uniprot.uniprot.impl.EvidencedStringTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.EvidencedStringTypeImpl.class), 14, value));
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  1 :
                            attIdx = context.getAttribute("", "ref");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
