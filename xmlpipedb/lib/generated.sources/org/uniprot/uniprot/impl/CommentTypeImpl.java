//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.02.04 at 11:58:01 PST 
//


package org.uniprot.uniprot.impl;


/**
 * 
 * @hibernate.mapping auto-import="false"
 * @hibernate.class table="CommentType"
 * 
 */
public class CommentTypeImpl implements org.uniprot.uniprot.CommentType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Link = new com.sun.xml.bind.util.ListImpl(new org.uniprot.uniprot.impl.CommentTypeImpl.LinkInternalProxyList());
    protected java.lang.String _Status;
    protected java.lang.String _Type;
    protected java.math.BigInteger _Experiments;
    protected java.lang.String _Method;
    protected java.lang.String _Text;
    protected java.lang.String _PhDependence;
    protected org.uniprot.uniprot.BpcCommentGroupKineticsType _Kinetics;
    protected java.lang.String _LocationType;
    protected boolean has_Mass;
    protected float _Mass;
    protected java.lang.String _Error;
    protected java.lang.String _Note;
    protected java.lang.String _TemperatureDependence;
    protected boolean has_OrganismsDiffer;
    protected boolean _OrganismsDiffer;
    protected java.lang.String _Evidence;
    protected java.lang.String _Name;
    protected java.lang.String _RedoxPotential;
    protected com.sun.xml.bind.util.ListImpl _Location = new com.sun.xml.bind.util.ListImpl(new org.uniprot.uniprot.impl.CommentTypeImpl.LocationInternalProxyList());
    protected com.sun.xml.bind.util.ListImpl _Interactant = new com.sun.xml.bind.util.ListImpl(new org.uniprot.uniprot.impl.CommentTypeImpl.InteractantInternalProxyList());
    protected org.uniprot.uniprot.BpcCommentGroupAbsorptionType _Absorption;
    public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;
    private java.util.List _LinkInternal = new java.util.ArrayList();
    private java.util.List _LocationInternal = new java.util.ArrayList();
    private java.util.List _InteractantInternal = new java.util.ArrayList();
    private java.lang.String idInternal;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.uniprot.uniprot.CommentType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getLink() {
        if (_Link == null) {
            _Link = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Link;
    }

    public java.util.List getLink() {
        return _getLink();
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getStatus() {
        return _Status;
    }

    public void setStatus(java.lang.String value) {
        _Status = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getType() {
        return _Type;
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.math.BigInteger getExperiments() {
        return _Experiments;
    }

    public void setExperiments(java.math.BigInteger value) {
        _Experiments = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getMethod() {
        return _Method;
    }

    public void setMethod(java.lang.String value) {
        _Method = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getText() {
        return _Text;
    }

    public void setText(java.lang.String value) {
        _Text = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getPhDependence() {
        return _PhDependence;
    }

    public void setPhDependence(java.lang.String value) {
        _PhDependence = value;
    }

    /**
     * 
     * @hibernate.many-to-one cascade="all" class="org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl"
     * 
     */
    public org.uniprot.uniprot.BpcCommentGroupKineticsType getKinetics() {
        return _Kinetics;
    }

    public void setKinetics(org.uniprot.uniprot.BpcCommentGroupKineticsType value) {
        _Kinetics = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getLocationType() {
        return _LocationType;
    }

    public void setLocationType(java.lang.String value) {
        _LocationType = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public float getMass() {
        return _Mass;
    }

    public void setMass(float value) {
        _Mass = value;
        has_Mass = true;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getError() {
        return _Error;
    }

    public void setError(java.lang.String value) {
        _Error = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getNote() {
        return _Note;
    }

    public void setNote(java.lang.String value) {
        _Note = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getTemperatureDependence() {
        return _TemperatureDependence;
    }

    public void setTemperatureDependence(java.lang.String value) {
        _TemperatureDependence = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public boolean isOrganismsDiffer() {
        return _OrganismsDiffer;
    }

    public void setOrganismsDiffer(boolean value) {
        _OrganismsDiffer = value;
        has_OrganismsDiffer = true;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getEvidence() {
        return _Evidence;
    }

    public void setEvidence(java.lang.String value) {
        _Evidence = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    /**
     * 
     * @hibernate.property
     * 
     */
    public java.lang.String getRedoxPotential() {
        return _RedoxPotential;
    }

    public void setRedoxPotential(java.lang.String value) {
        _RedoxPotential = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getLocation() {
        if (_Location == null) {
            _Location = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Location;
    }

    public java.util.List getLocation() {
        return _getLocation();
    }

    protected com.sun.xml.bind.util.ListImpl _getInteractant() {
        if (_Interactant == null) {
            _Interactant = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Interactant;
    }

    public java.util.List getInteractant() {
        return _getInteractant();
    }

    /**
     * 
     * @hibernate.many-to-one cascade="all" class="org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl"
     * 
     */
    public org.uniprot.uniprot.BpcCommentGroupAbsorptionType getAbsorption() {
        return _Absorption;
    }

    public void setAbsorption(org.uniprot.uniprot.BpcCommentGroupAbsorptionType value) {
        _Absorption = value;
    }

    public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
        return new org.uniprot.uniprot.impl.CommentTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Link == null)? 0 :_Link.size());
        int idx18 = 0;
        final int len18 = ((_Location == null)? 0 :_Location.size());
        int idx19 = 0;
        final int len19 = ((_Interactant == null)? 0 :_Interactant.size());
        if (_Text!= null) {
            context.startElement("http://uniprot.org/uniprot", "text");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Text), "Text");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Absorption!= null) {
            context.startElement("http://uniprot.org/uniprot", "absorption");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Absorption), "Absorption");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Absorption), "Absorption");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Absorption), "Absorption");
            context.endElement();
        }
        if (_Kinetics!= null) {
            context.startElement("http://uniprot.org/uniprot", "kinetics");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Kinetics), "Kinetics");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Kinetics), "Kinetics");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Kinetics), "Kinetics");
            context.endElement();
        }
        if (_PhDependence!= null) {
            context.startElement("http://uniprot.org/uniprot", "phDependence");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PhDependence), "PhDependence");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RedoxPotential!= null) {
            context.startElement("http://uniprot.org/uniprot", "redoxPotential");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _RedoxPotential), "RedoxPotential");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_TemperatureDependence!= null) {
            context.startElement("http://uniprot.org/uniprot", "temperatureDependence");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _TemperatureDependence), "TemperatureDependence");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (((((((_Location == null)? 0 :_Location.size()) == 0)&&(((_Link == null)? 0 :_Link.size())>= 1))&&(!has_OrganismsDiffer))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null)) {
            while (idx1 != len1) {
                context.startElement("http://uniprot.org/uniprot", "link");
                int idx_12 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Link.get(idx_12 ++)), "Link");
                context.endNamespaceDecls();
                int idx_13 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Link.get(idx_13 ++)), "Link");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Link.get(idx1 ++)), "Link");
                context.endElement();
            }
        } else {
            if (((((((_Location == null)? 0 :_Location.size())>= 1)&&(((_Link == null)? 0 :_Link.size()) == 0))&&(!has_OrganismsDiffer))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null)) {
                while (idx18 != len18) {
                    context.startElement("http://uniprot.org/uniprot", "location");
                    int idx_14 = idx18;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Location.get(idx_14 ++)), "Location");
                    context.endNamespaceDecls();
                    int idx_15 = idx18;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Location.get(idx_15 ++)), "Location");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Location.get(idx18 ++)), "Location");
                    context.endElement();
                }
            } else {
                if (((((((_Location == null)? 0 :_Location.size()) == 0)&&(((_Link == null)? 0 :_Link.size()) == 0))&&has_OrganismsDiffer)&&(((_Interactant == null)? 0 :_Interactant.size()) == 2))&&(_Experiments!= null)) {
                    while (idx19 != len19) {
                        context.startElement("http://uniprot.org/uniprot", "interactant");
                        int idx_16 = idx19;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Interactant.get(idx_16 ++)), "Interactant");
                        context.endNamespaceDecls();
                        int idx_17 = idx19;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Interactant.get(idx_17 ++)), "Interactant");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Interactant.get(idx19 ++)), "Interactant");
                        context.endElement();
                    }
                    context.startElement("http://uniprot.org/uniprot", "organismsDiffer");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _OrganismsDiffer)), "OrganismsDiffer");
                    } catch (java.lang.Exception e) {
                        org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                    context.startElement("http://uniprot.org/uniprot", "experiments");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Experiments)), "Experiments");
                    } catch (java.lang.Exception e) {
                        org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
            }
        }
        if (_Note!= null) {
            context.startElement("http://uniprot.org/uniprot", "note");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Note), "Note");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Link == null)? 0 :_Link.size());
        int idx18 = 0;
        final int len18 = ((_Location == null)? 0 :_Location.size());
        int idx19 = 0;
        final int len19 = ((_Interactant == null)? 0 :_Interactant.size());
        if (_Error!= null) {
            context.startAttribute("", "error");
            try {
                context.text(((java.lang.String) _Error), "Error");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Evidence!= null) {
            context.startAttribute("", "evidence");
            try {
                context.text(((java.lang.String) _Evidence), "Evidence");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_LocationType!= null) {
            context.startAttribute("", "locationType");
            try {
                context.text(((java.lang.String) _LocationType), "LocationType");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_Mass) {
            context.startAttribute("", "mass");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _Mass)), "Mass");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Method!= null) {
            context.startAttribute("", "method");
            try {
                context.text(((java.lang.String) _Method), "Method");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Name!= null) {
            context.startAttribute("", "name");
            try {
                context.text(((java.lang.String) _Name), "Name");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Status!= null) {
            context.startAttribute("", "status");
            try {
                context.text(((java.lang.String) _Status), "Status");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "type");
        try {
            context.text(((java.lang.String) _Type), "Type");
        } catch (java.lang.Exception e) {
            org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (((((((_Location == null)? 0 :_Location.size()) == 0)&&(((_Link == null)? 0 :_Link.size())>= 1))&&(!has_OrganismsDiffer))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null)) {
            while (idx1 != len1) {
                idx1 += 1;
            }
        } else {
            if (((((((_Location == null)? 0 :_Location.size())>= 1)&&(((_Link == null)? 0 :_Link.size()) == 0))&&(!has_OrganismsDiffer))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null)) {
                while (idx18 != len18) {
                    idx18 += 1;
                }
            } else {
                if (((((((_Location == null)? 0 :_Location.size()) == 0)&&(((_Link == null)? 0 :_Link.size()) == 0))&&has_OrganismsDiffer)&&(((_Interactant == null)? 0 :_Interactant.size()) == 2))&&(_Experiments!= null)) {
                    while (idx19 != len19) {
                        idx19 += 1;
                    }
                }
            }
        }
    }

    public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Link == null)? 0 :_Link.size());
        int idx18 = 0;
        final int len18 = ((_Location == null)? 0 :_Location.size());
        int idx19 = 0;
        final int len19 = ((_Interactant == null)? 0 :_Interactant.size());
        if (((((((_Location == null)? 0 :_Location.size()) == 0)&&(((_Link == null)? 0 :_Link.size())>= 1))&&(!has_OrganismsDiffer))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null)) {
            while (idx1 != len1) {
                idx1 += 1;
            }
        } else {
            if (((((((_Location == null)? 0 :_Location.size())>= 1)&&(((_Link == null)? 0 :_Link.size()) == 0))&&(!has_OrganismsDiffer))&&(((_Interactant == null)? 0 :_Interactant.size()) == 0))&&(_Experiments == null)) {
                while (idx18 != len18) {
                    idx18 += 1;
                }
            } else {
                if (((((((_Location == null)? 0 :_Location.size()) == 0)&&(((_Link == null)? 0 :_Link.size()) == 0))&&has_OrganismsDiffer)&&(((_Interactant == null)? 0 :_Interactant.size()) == 2))&&(_Experiments!= null)) {
                    while (idx19 != len19) {
                        idx19 += 1;
                    }
                }
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.uniprot.uniprot.CommentType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005v"
+"aluexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datat"
+"ype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/Str"
+"ing;L\u0000\btypeNameq\u0000~\u0000%L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xs"
+"d/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat"
+"\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pre"
+"serve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSet"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair"
+"\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xpq\u0000~\u0000)q\u0000~\u0000("
+"sq\u0000~\u0000\u0014ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0017xq\u0000~\u0000\u0003q\u0000~\u0000\u001bpsq\u0000~\u0000\u001dppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0005QNamesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000+q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u00007q\u0000~\u0000(sr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xr\u0000\u001dcom"
+".sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www."
+"w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u001a\u0001q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0004"
+"textt\u0000\u001ahttp://uniprot.org/uniprotq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000s"
+"q\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003exp"
+"q\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpsr\u00002com.sun.msv.grammar.Express"
+"ion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Bq\u0000~\u0000Psr\u0000 com.su"
+"n.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000<q\u0000~\u0000Asq\u0000~\u0000;t\u00001org"
+".uniprot.uniprot.BpcCommentGroupAbsorptionTypet\u0000+http://java"
+".sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~"
+"\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\nabsorptionq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000~\u0000Rq\u0000~\u0000"
+"Asq\u0000~\u0000;t\u0000/org.uniprot.uniprot.BpcCommentGroupKineticsTypeq\u0000~"
+"\u0000Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\bkineticsq\u0000~\u0000Eq"
+"\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000"
+"~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\fphDependenceq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t"
+"\u0000\u000eredoxPotentialq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 "
+"sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0015temperatureDepen"
+"denceq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000"
+"~\u0000Rq\u0000~\u0000Asq\u0000~\u0000;t\u0000(org.uniprot.uniprot.CommentType.LinkTypeq\u0000~"
+"\u0000Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0004linkq\u0000~\u0000Eq\u0000~\u0000A"
+"sq\u0000~\u0000Kppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002"
+"q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000~\u0000Rq\u0000~\u0000Asq\u0000~\u0000;t\u0000 org.uniprot.uniprot.LocationTy"
+"peq\u0000~\u0000Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\blocationq"
+"\u0000~\u0000Esq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0014"
+"ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000~\u0000Rq\u0000~\u0000Asq\u0000~\u0000;t\u0000#org.unipro"
+"t.uniprot.InteractantTypeq\u0000~\u0000Usq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000="
+"q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000binteractantq\u0000~\u0000Esq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~"
+"\u0000\u0014ppsq\u0000~\u0000Kq\u0000~\u0000\u001bpsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000Pq\u0000~\u0000Rq\u0000~\u0000Asq\u0000~\u0000;q\u0000~\u0000\u00a3q\u0000~\u0000Us"
+"q\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000\u00a6sq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u001dppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\"q\u0000~\u0000(t\u0000\u0007booleanq\u0000~\u00009q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u0000\u00b6q\u0000~\u0000(sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000"
+"\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000forganismsDifferq\u0000~\u0000Esq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000"
+"\u0000ppsq\u0000~\u0000\u001dppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001"
+"L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000"
+"~\u0000\"q\u0000~\u0000(t\u0000\u0007integerq\u0000~\u00009sr\u0000,com.sun.msv.datatype.xsd.Fraction"
+"DigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.D"
+"ataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv."
+"datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012n"
+"eedValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u00c1L\u0000\fconcreteTypet\u0000\'Lcom/sun/"
+"msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000%xq\u0000~\u0000$ppq\u0000~\u00009"
+"\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000"
+"~\u0000(t\u0000\u0007decimalq\u0000~\u00009q\u0000~\u0000\u00cat\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u0000\u00c3"
+"q\u0000~\u0000(sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000bexperiments"
+"q\u0000~\u0000Esq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000 sq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq"
+"\u0000~\u00004q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0004noteq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~"
+"\u0000 sq\u0000~\u0000;t\u0000\u0005errort\u0000\u0000q\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000 sq\u0000~\u0000;t\u0000\bev"
+"idenceq\u0000~\u0000\u00ddq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000 sq\u0000~\u0000;t\u0000\flocationTy"
+"peq\u0000~\u0000\u00ddq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpsq\u0000~\u0000\u001dppsr\u0000\"com.sun.msv.data"
+"type.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Fl"
+"oatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0005floatq\u0000~\u00009q\u0000~\u0000.sq\u0000~"
+"\u0000/q\u0000~\u0000\u00ecq\u0000~\u0000(sq\u0000~\u0000;t\u0000\u0004massq\u0000~\u0000\u00ddq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000 "
+"sq\u0000~\u0000;t\u0000\u0006methodq\u0000~\u0000\u00ddq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000 sq\u0000~\u0000;t\u0000\u0004n"
+"ameq\u0000~\u0000\u00ddq\u0000~\u0000Asq\u0000~\u0000\u0014ppsq\u0000~\u00002q\u0000~\u0000\u001bpq\u0000~\u0000 sq\u0000~\u0000;t\u0000\u0006statusq\u0000~\u0000\u00ddq\u0000"
+"~\u0000Asq\u0000~\u00002ppsq\u0000~\u0000\u001dppsr\u0000)com.sun.msv.datatype.xsd.EnumerationF"
+"acet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.da"
+"tatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000\u00c6"
+"q\u0000~\u0000Epq\u0000~\u0000,\u0000\u0000q\u0000~\u0000\'q\u0000~\u0000\'t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD"
+"\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001bt\u0000\u0003PTMt\u0000\u001dbiophysicochemical propert"
+"iest\u0000\ballergent\u0000\u000epharmaceuticalt\u0000\bfunctiont\u0000\u0007diseaset\u0000\bcofac"
+"tort\u0000\tinductiont\u0000\u0011enzyme regulationt\u0000\u0012online informationt\u0000\rm"
+"iscellaneoust\u0000\u0007cautiont\u0000\u0011mass spectrometryt\u0000\u0012tissue specific"
+"ityt\u0000\u0014subcellular locationt\u0000\u0014alternative productst\u0000\fpolymorp"
+"hismt\u0000\u0007pathwayt\u0000\u0007subunitt\u0000\ntoxic doset\u0000\u000bRNA editingt\u0000\u0012cataly"
+"tic activityt\u0000\u0013developmental staget\u0000\u0006domaint\u0000\nsimilarityt\u0000\rb"
+"iotechnologyt\u0000\u000binteractionxq\u0000~\u0000.sq\u0000~\u0000/t\u0000\u000estring-derivedq\u0000~\u0000E"
+"sq\u0000~\u0000;t\u0000\u0004typeq\u0000~\u0000\u00ddsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Clo"
+"sedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7"
+"j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/g"
+"rammar/ExpressionPool;xp\u0000\u0000\u0000K\u0001pq\u0000~\u0000\u000fq\u0000~\u0000\u0012q\u0000~\u0000\u00f0q\u0000~\u0000\u00f8q\u0000~\u0000\u0013q\u0000~\u0000|"
+"q\u0000~\u0000\nq\u0000~\u0000\u000eq\u0000~\u0000wq\u0000~\u0000pq\u0000~\u0000iq\u0000~\u0000\u001cq\u0000~\u0000\u00a9q\u0000~\u0000\u009dq\u0000~\u0000\u008eq\u0000~\u0000\u0081q\u0000~\u0000\\q\u0000~\u0000H"
+"q\u0000~\u0000\u00d4q\u0000~\u0000uq\u0000~\u0000nq\u0000~\u0000gq\u0000~\u0000\u0015q\u0000~\u0000Zq\u0000~\u0000Fq\u0000~\u0000\u00d2q\u0000~\u0000\u00acq\u0000~\u0000\u00a0q\u0000~\u0000\u0099q\u0000~\u0000\u0091"
+"q\u0000~\u0000\u0084q\u0000~\u0000\u0011q\u0000~\u0000_q\u0000~\u0000\u009aq\u0000~\u0000Mq\u0000~\u0000\u0007q\u0000~\u0000\u009bq\u0000~\u0000\u00e2q\u0000~\u0000\bq\u0000~\u0000\u00abq\u0000~\u0000\u009fq\u0000~\u0000\u0090"
+"q\u0000~\u0000\u0083q\u0000~\u0000^q\u0000~\u0000Jq\u0000~\u0000\rq\u0000~\u0000\u00d5q\u0000~\u0000\u00ceq\u0000~\u0000\u00b8q\u0000~\u0000\u00afq\u0000~\u0000\u00a4q\u0000~\u0000\u0095q\u0000~\u0000\u00b2q\u0000~\u0000\u0088"
+"q\u0000~\u0000xq\u0000~\u0000qq\u0000~\u0000jq\u0000~\u0000cq\u0000~\u0000Vq\u0000~\u00001q\u0000~\u0000\u00bdq\u0000~\u0000\u00d9q\u0000~\u0000}q\u0000~\u0000\u008cq\u0000~\u0000\u007fq\u0000~\u0000\t"
+"q\u0000~\u0000\u00f4q\u0000~\u0000~q\u0000~\u0000\u00e6q\u0000~\u0000\u000bq\u0000~\u0000\u0010q\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000\u00deq\u0000~\u0000\fx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    /**
     * 
     * @hibernate.list table="CommentType_LinkInternal" cascade="all-delete-orphan" where="LinkInternal_index is not null"
     * @hibernate.collection-key column="CommentTypeImpl_id"
     * @hibernate.collection-index column="LinkInternal_index"
     * @hibernate.collection-one-to-many class="org.uniprot.uniprot.impl.CommentTypeImpl$LinkTypeImpl"
     * 
     */
    public java.util.List getLinkInternal() {
        return _LinkInternal;
    }

    public void setLinkInternal(java.util.List theLinkInternal) {
        _LinkInternal = theLinkInternal;
    }

    /**
     * 
     * @hibernate.list table="CommentType_LocationInternal" cascade="all-delete-orphan" where="LocationInternal_index is not null"
     * @hibernate.collection-key column="CommentTypeImpl_id"
     * @hibernate.collection-index column="LocationInternal_index"
     * @hibernate.collection-one-to-many class="org.uniprot.uniprot.impl.LocationTypeImpl"
     * 
     */
    public java.util.List getLocationInternal() {
        return _LocationInternal;
    }

    public void setLocationInternal(java.util.List theLocationInternal) {
        _LocationInternal = theLocationInternal;
    }

    /**
     * 
     * @hibernate.list table="CommentType_InteractantInternal" cascade="all-delete-orphan" where="InteractantInternal_index is not null"
     * @hibernate.collection-key column="CommentTypeImpl_id"
     * @hibernate.collection-index column="InteractantInternal_index"
     * @hibernate.collection-one-to-many class="org.uniprot.uniprot.impl.InteractantTypeImpl"
     * 
     */
    public java.util.List getInteractantInternal() {
        return _InteractantInternal;
    }

    public void setInteractantInternal(java.util.List theInteractantInternal) {
        _InteractantInternal = theInteractantInternal;
    }

    /**
     * 
     * @hibernate.id unsaved-value="null" length="32" generator-class="uuid.hex"
     * 
     */
    public java.lang.String getIdInternal() {
        return idInternal;
    }

    public void setIdInternal(java.lang.String anId) {
        idInternal = anId;
    }

    public class InteractantInternalProxyList
        extends java.util.AbstractList
        implements java.io.Serializable
    {

        private final static long serialVersionUID = 43004885710466048L;

        public java.lang.Object get(int index) {
            return _InteractantInternal.get(index);
        }

        public java.lang.Object set(int index, java.lang.Object o) {
            return _InteractantInternal.set(index, o);
        }

        public void add(int index, java.lang.Object o) {
            _InteractantInternal.add(index, o);
        }

        public java.lang.Object remove(int index) {
            return _InteractantInternal.remove(index);
        }

        public int size() {
            return _InteractantInternal.size();
        }

    }

    public class LinkInternalProxyList
        extends java.util.AbstractList
        implements java.io.Serializable
    {

        private final static long serialVersionUID = 885757433547016192L;

        public java.lang.Object get(int index) {
            return _LinkInternal.get(index);
        }

        public java.lang.Object set(int index, java.lang.Object o) {
            return _LinkInternal.set(index, o);
        }

        public void add(int index, java.lang.Object o) {
            _LinkInternal.add(index, o);
        }

        public java.lang.Object remove(int index) {
            return _LinkInternal.remove(index);
        }

        public int size() {
            return _LinkInternal.size();
        }

    }


    /**
     * 
     * @hibernate.mapping auto-import="false"
     * @hibernate.class table="CommentType$LinkType"
     * 
     */
    public static class LinkTypeImpl implements org.uniprot.uniprot.CommentType.LinkType, com.sun.xml.bind.JAXBObject, org.uniprot.uniprot.impl.runtime.UnmarshallableObject, org.uniprot.uniprot.impl.runtime.XMLSerializable, org.uniprot.uniprot.impl.runtime.ValidatableObject
    {

        protected java.lang.String _Uri;
        public final static java.lang.Class version = (org.uniprot.uniprot.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;
        private java.lang.String idInternal;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.uniprot.uniprot.CommentType.LinkType.class);
        }

        /**
         * 
         * @hibernate.property
         * 
         */
        public java.lang.String getUri() {
            return _Uri;
        }

        public void setUri(java.lang.String value) {
            _Uri = value;
        }

        public org.uniprot.uniprot.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            return new org.uniprot.uniprot.impl.CommentTypeImpl.LinkTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeAttributes(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startAttribute("", "uri");
            try {
                context.text(((java.lang.String) _Uri), "Uri");
            } catch (java.lang.Exception e) {
                org.uniprot.uniprot.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }

        public void serializeURIs(org.uniprot.uniprot.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.uniprot.uniprot.CommentType.LinkType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expt\u0000 "
+"Lcom/sun/msv/grammar/Expression;L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/"
+"grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O"
+"\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedEx"
+"pq\u0000~\u0000\u0001xpppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0001L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd"
+".AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAt"
+"omicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u000eL\u0000\n"
+"whiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;x"
+"pt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006anyURIsr\u00005com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000co"
+"m.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq"
+"\u0000~\u0000\u000eL\u0000\fnamespaceURIq\u0000~\u0000\u000expq\u0000~\u0000\u0012q\u0000~\u0000\u0011sr\u0000#com.sun.msv.grammar."
+"SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u000eL\u0000\fnamespaceURIq\u0000"
+"~\u0000\u000exr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0003urit\u0000\u0000sr"
+"\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000"
+"/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.su"
+"n.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000"
+"\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPoo"
+"l;xp\u0000\u0000\u0000\u0000\u0001px"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        /**
         * 
         * @hibernate.id unsaved-value="null" length="32" generator-class="uuid.hex"
         * 
         */
        public java.lang.String getIdInternal() {
            return idInternal;
        }

        public void setIdInternal(java.lang.String anId) {
            idInternal = anId;
        }

        public class Unmarshaller
            extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.uniprot.uniprot.impl.CommentTypeImpl.LinkTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "uri");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  3 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Uri = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "uri");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            if (("uri" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "uri");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  2 :
                            if (("uri" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  0 :
                                attIdx = context.getAttribute("", "uri");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    eatText1(v);
                                    state = 3;
                                    continue outer;
                                }
                                break;
                            case  1 :
                                eatText1(value);
                                state = 2;
                                return ;
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class LocationInternalProxyList
        extends java.util.AbstractList
        implements java.io.Serializable
    {

        private final static long serialVersionUID = 5446185611338677248L;

        public java.lang.Object get(int index) {
            return _LocationInternal.get(index);
        }

        public java.lang.Object set(int index, java.lang.Object o) {
            return _LocationInternal.set(index, o);
        }

        public void add(int index, java.lang.Object o) {
            _LocationInternal.add(index, o);
        }

        public java.lang.Object remove(int index) {
            return _LocationInternal.remove(index);
        }

        public int size() {
            return _LocationInternal.size();
        }

    }

    public class Unmarshaller
        extends org.uniprot.uniprot.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------------------------------------------------------");
        }

        protected Unmarshaller(org.uniprot.uniprot.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.uniprot.uniprot.impl.CommentTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  51 :
                        if (("link" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 52;
                            return ;
                        }
                        if (("location" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 54;
                            return ;
                        }
                        if (("note" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 56;
                            return ;
                        }
                        state = 58;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 24;
                            continue outer;
                        }
                        break;
                    case  52 :
                        attIdx = context.getAttribute("", "uri");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  43 :
                        attIdx = context.getAttribute("", "intactId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  28 :
                        if (("max" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 29, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("text" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 29, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 29, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "method");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  48 :
                        if (("experiments" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 49;
                            return ;
                        }
                        break;
                    case  54 :
                        attIdx = context.getAttribute("", "sequence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("begin" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getLocation().add(((org.uniprot.uniprot.impl.LocationTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.LocationTypeImpl.class), 55, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("position" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _getLocation().add(((org.uniprot.uniprot.impl.LocationTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.LocationTypeImpl.class), 55, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  58 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  39 :
                        if (("temperatureDependence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  42 :
                        if (("link" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 52;
                            return ;
                        }
                        if (("location" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 54;
                            return ;
                        }
                        if (("interactant" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 43;
                            return ;
                        }
                        state = 51;
                        continue outer;
                    case  30 :
                        if (("kinetics" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  31 :
                        if (("KM" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 32, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Vmax" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 32, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("text" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 32, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromEnterElement((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 32, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  27 :
                        if (("absorption" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "mass");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  36 :
                        if (("redoxPotential" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  33 :
                        if (("phDependence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  45 :
                        if (("interactant" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 43;
                            return ;
                        }
                        if (("organismsDiffer" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        break;
                    case  24 :
                        if (("text" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "locationType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "error");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Status = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Method = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Mass = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Mass = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Evidence = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _LocationType = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Error = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  51 :
                        state = 58;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  32 :
                        if (("kinetics" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  21 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 24;
                            continue outer;
                        }
                        break;
                    case  52 :
                        attIdx = context.getAttribute("", "uri");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  50 :
                        if (("experiments" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  53 :
                        if (("link" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  43 :
                        attIdx = context.getAttribute("", "intactId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  28 :
                        _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromLeaveElement((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 29, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "method");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  54 :
                        attIdx = context.getAttribute("", "sequence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  58 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  47 :
                        if (("organismsDiffer" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  57 :
                        if (("note" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 58;
                            return ;
                        }
                        break;
                    case  55 :
                        if (("location" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  42 :
                        state = 51;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  41 :
                        if (("temperatureDependence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  31 :
                        _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromLeaveElement((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 32, ___uri, ___local, ___qname));
                        return ;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  38 :
                        if (("redoxPotential" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "mass");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  29 :
                        if (("absorption" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  26 :
                        if (("text" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "locationType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  35 :
                        if (("phDependence" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "error");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  44 :
                        if (("interactant" == ___local)&&("http://uniprot.org/uniprot" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  51 :
                        state = 58;
                        continue outer;
                    case  18 :
                        if (("status" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  21 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 22;
                            return ;
                        }
                        break;
                    case  52 :
                        if (("uri" == ___local)&&("" == ___uri)) {
                            _getLink().add(((org.uniprot.uniprot.impl.CommentTypeImpl.LinkTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.CommentTypeImpl.LinkTypeImpl.class), 53, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  43 :
                        if (("intactId" == ___local)&&("" == ___uri)) {
                            _getInteractant().add(((org.uniprot.uniprot.impl.InteractantTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.InteractantTypeImpl.class), 44, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  28 :
                        _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 29, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        if (("method" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  54 :
                        if (("sequence" == ___local)&&("" == ___uri)) {
                            _getLocation().add(((org.uniprot.uniprot.impl.LocationTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.LocationTypeImpl.class), 55, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  58 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  42 :
                        state = 51;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  31 :
                        _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromEnterAttribute((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 32, ___uri, ___local, ___qname));
                        return ;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  9 :
                        if (("mass" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  3 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  15 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  6 :
                        if (("locationType" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  0 :
                        if (("error" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  51 :
                        state = 58;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "status");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 24;
                            continue outer;
                        }
                        break;
                    case  52 :
                        attIdx = context.getAttribute("", "uri");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  23 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 24;
                            return ;
                        }
                        break;
                    case  43 :
                        attIdx = context.getAttribute("", "intactId");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  28 :
                        _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromLeaveAttribute((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 29, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "method");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  2 :
                        if (("error" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  54 :
                        attIdx = context.getAttribute("", "sequence");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  20 :
                        if (("status" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                    case  58 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  42 :
                        state = 51;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  31 :
                        _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromLeaveAttribute((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 32, ___uri, ___local, ___qname));
                        return ;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  17 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("method" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "mass");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "evidence");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  8 :
                        if (("locationType" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  5 :
                        if (("evidence" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("mass" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "locationType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "error");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  51 :
                            state = 58;
                            continue outer;
                        case  37 :
                            eatText9(value);
                            state = 38;
                            return ;
                        case  18 :
                            attIdx = context.getAttribute("", "status");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 21;
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                        case  10 :
                            eatText4(value);
                            state = 11;
                            return ;
                        case  21 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 24;
                                continue outer;
                            }
                            break;
                        case  4 :
                            eatText5(value);
                            state = 5;
                            return ;
                        case  52 :
                            attIdx = context.getAttribute("", "uri");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  7 :
                            eatText7(value);
                            state = 8;
                            return ;
                        case  43 :
                            attIdx = context.getAttribute("", "intactId");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  22 :
                            eatText2(value);
                            state = 23;
                            return ;
                        case  13 :
                            eatText3(value);
                            state = 14;
                            return ;
                        case  28 :
                            _Absorption = ((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.BpcCommentGroupAbsorptionTypeImpl.class), 29, value));
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "method");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 15;
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  34 :
                            eatText10(value);
                            state = 35;
                            return ;
                        case  54 :
                            attIdx = context.getAttribute("", "sequence");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  58 :
                            revertToParentFromText(value);
                            return ;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  25 :
                            eatText11(value);
                            state = 26;
                            return ;
                        case  42 :
                            state = 51;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  49 :
                            eatText12(value);
                            state = 50;
                            return ;
                        case  31 :
                            _Kinetics = ((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl) spawnChildFromText((org.uniprot.uniprot.impl.BpcCommentGroupKineticsTypeImpl.class), 32, value));
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  46 :
                            eatText13(value);
                            state = 47;
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "mass");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "evidence");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  1 :
                            eatText8(value);
                            state = 2;
                            return ;
                        case  15 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 18;
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  16 :
                            eatText6(value);
                            state = 17;
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "locationType");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  40 :
                            eatText14(value);
                            state = 41;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "error");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText8(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  56 :
                            eatText15(value);
                            state = 57;
                            return ;
                        case  19 :
                            eatText1(value);
                            state = 20;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RedoxPotential = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PhDependence = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Text = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Experiments = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _OrganismsDiffer = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_OrganismsDiffer = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TemperatureDependence = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Note = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
